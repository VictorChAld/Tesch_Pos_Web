%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 24.3
%%For: Akash Gupta
%%CreationDate: 7/30/2022
%%BoundingBox: 0 0 2372 1898
%%HiResBoundingBox: 0 0 2372 1898
%%CropBox: 0 0 2372 1898
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.3.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.3.0 x569 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=0 RasterRes=72 GradRes=72 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c002 79.164488, 2020/07/10-22:06:53        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">coming soon background in memphis style</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Akash Gupta</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>coming</rdf:li>
               <rdf:li>soon</rdf:li>
               <rdf:li>under</rdf:li>
               <rdf:li>construction</rdf:li>
               <rdf:li>announcement</rdf:li>
               <rdf:li>open</rdf:li>
               <rdf:li>promotion</rdf:li>
               <rdf:li>web</rdf:li>
               <rdf:li>website</rdf:li>
               <rdf:li>store</rdf:li>
               <rdf:li>arrival</rdf:li>
               <rdf:li>stay</rdf:li>
               <rdf:li>tuned</rdf:li>
               <rdf:li>page</rdf:li>
               <rdf:li>template</rdf:li>
               <rdf:li>information</rdf:li>
               <rdf:li>teaser</rdf:li>
               <rdf:li>background</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>message</rdf:li>
               <rdf:li>new</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>notification</rdf:li>
               <rdf:li>text</rdf:li>
               <rdf:li>campaign</rdf:li>
               <rdf:li>modern</rdf:li>
               <rdf:li>brand</rdf:li>
               <rdf:li>post</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">coming soon background in memphis style</rdf:li>
            </rdf:Alt>
         </dc:description>
         <xmp:CreatorTool>Adobe Illustrator CC 23.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-12-03T19:43:58+05:30</xmp:CreateDate>
         <xmp:ModifyDate>2020-12-03T19:43:58+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2022-07-30T11:24:19+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>208</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA0AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWJ/mD+Z/lHyJp31&#xA;rW7oC5kUtaadFRrmcj+RK7LXqzUUeOThAy5MJ5BHm+QPzM/PTzl54vQGnbS9HhcPa6ZbOQAymqvL&#xA;IOLSODuCdh2AzMhiEXCnlMk58i/85O/mF5c9O21SRfMWmpQGO8Yi5Cj+W5ALE+8gfIywg+TKGeQ5&#xA;7vojyL/zkH+XHm304Fvv0Tqb0H1DUOMRLHakctTE9T0HLkf5cx5YpByYZol6VlTa7FXYq7FXYq7F&#xA;XYq7FVC91CysYhLeTJBGzBFdzQFiCafhleTLGAuRoNuLDPIagLKD/wAUeXv+rhB/wYyn87h/nBv/&#xA;AJPz/wAySHt/NGm+pcfWNQs/T5/6L6bHl6fEf3lf2uVenbK4a2FnilGunu822fZ+Shwwndb33+Sh&#xA;/iiH9Ff8dDT/ANLcf53+rc6/8HSmQ/Ojw/qh4nx4f1tn8nnxfoyeF7hxfqV7jzPpvO3+rahZ8OY+&#xA;teoxr6dDX06ftVp1yc9bDbhlHnv7vJrh2fko8UJ8tq7/AD8nf4o0z68KahZ/UPS3+M+t6vL/AIHh&#xA;x+muP52HH9UeCvjf6l/k/JwfRPjv4V99ut/NGm+pcfWNQs/T5/6J6bnl6fEf3lf2uVenbGGthZ4p&#xA;Rrp7vNZ9n5KHDCd1vff5KI80Q/oo11DT/wBLcTT43+r8q7f5dKZD86PD+qHifHh/Wz/k8+L9GTwv&#xA;hxfqVbjzRp1bf6vqFnTmPrfqOa+nQ19On7XKnXJz1sNqlDnv7vJhDs/JvxQny9Nd/n5NnzRpn14U&#xA;1Cz+oekeXxn1vV5bf5PDj9NcfzsOP6o8FfG/1L/J+Tg+ifHfwr77dB5o031bj6xqFn6PMfVPTY8u&#xA;HEV9Su1eVenbGGthZuUa6ftWfZ+ShwwnfW+/y+CiPNEP6Lauoaf+leLcfjf6vyqeNf26ceuQ/Ojw&#xA;/qh4n+x/Wz/k8+J9GTw/hxfqVbjzRp3+j/V9Qs/7xfrfqMf7uh5enT9qtKV2yc9bDbhlHnv7vJhD&#xA;s/JvxQny2rv8/Js+aNM+vLTULP6h6Z51c+t6vIUp+zx41964/nYcf1R4K+N/qUdn5OD6J8d/Cvvt&#xA;1v5o0z17j6xqFn6HIfVPTc8+HEcvUrtXlWlO2MNbCzxSjXT9qz7PyUOGE763+hRXzRD+i25ahp/6&#xA;V4two7/V+VTxr+3SnXIDXDw/qh4n+x/WzPZ58T6Mnh+4cX6lW48z6fS3+r6hZ19RfrZkZv7uh5en&#xA;T9qvSu2SnrYbcMoc9/d5MIdn5N+KE+W1d/S/JMYZ7i4nhntnhk0uSIt6gLGRnJHErT4eHGvvmTGZ&#xA;kQY0YV8f7HFlCMYkSEhkB+Fffa+Fr1ZblrowrbKQbYpy5BAvxGUttXlXp2yUOOzdV0/awnwcI4bv&#xA;rf6Hgf5m/wDOUEOi28mj+WTbalryl0uNUi5PYwHkQPS5bzOF7/Yr/N0zI0+CZjeSr8nH1WfGJEY7&#xA;rz/Y8B/wn+annTUZNTfSdV1e7ujykvpIZWU+A9VgEUDsK0HbMzijFweGUmX6N/ziz+bOoBWuba00&#xA;pW3rd3Ksaf6tuJz9ByBzxbBp5Fnei/8AOGoor635l3/bgsrf9Usr/wDMvKzqO4Ng03eWd6L/AM4t&#xA;flNpwU3Nrdaq435XlwwFf9W39BfvyBzyLYNPEPUdI0fTdH06HTdMgFtY244wwKSVVfAciTlRNtoF&#xA;IzAl2KuxV2KuxVLda8x6NoqxNqdx9XWckRHg71K0r9hW8cIBKDIBK/8AlZXkr/q4/wDJGf8A6p4e&#xA;AseMJbr/AOYvk5rJJo9QrJazw3A/czj4UkHqdY+8ZYZjarFLhBHOJB+3f7LcvRZYiZBO0oyHzG32&#xA;0ynR9e0nWYHuNNn9eGNuDtxdKNQGlHCnocyCKcYG+TYsJ10t7M38xmcMovm4eqDIxIIooXatBtmP&#xA;4RGPh4jf87ru5RzA5OPgFfzd62+1VuLWWUWyrdSxGGRZHKcKyqg3R6r9lj140yU8ZNeoij8/ewhk&#xA;EeL0g2K67eY/aua3dr5LgXEgRI2Q2o4+mSxBDnblUcaDfCYHj4rPLl096BMcBjQu+fX3NW9u8c9z&#xA;M1w8qTMCkTceEQVeJCUAO5FTXGECCTd39izmDGI4QK69/vUVsJ10t7M38zTOrgXzcPVBckgiihfh&#xA;rttkBiPhmPEb/nbWzOaJyCfAKFenetlW4tZJVtkW6kiMMiSOV48pVTqj1HRv2qUyU4E0OIij82MM&#xA;gHEeEGx57X1H6G2tpGvkuBcSLGkbIbUcfTYsQQ525VFKDfCYHjErPLl0QJgQMaFk8+vudBbvHcXM&#xA;zXDypMVKRNx4RBF4kJQA7nc1OMYEEm7v7FnMGMRwgV16n3qSWM66ZJam+maWQOFvTw9RTISQRReP&#xA;w1oNsgMR4DHiNn+La92ZzR8QS4BQr071t9q+e0kkjt41u5YjC6O7rx5SiPqr1HRv2qAZKeMkAcRF&#xA;EfGmMMgBJ4QbB79r6j3dF728jX0dwLh1jjRka1HHgxYgh225VFNt8JgeMGzy5IEwIGNCyefX3NQW&#xA;7x3NzO1zJKkxXhC3HhEEFCEoAfiO5qcYwIkTZN9O73LOYMYx4QK69T71JLGddNktvr0rSy+pxvDw&#xA;9RTIxI4/Dx+HlQbZAYjwGPEbN77XuzOaJyCXCKFenetv19V89nLJDbxLdyxNC6O8i8OUoj6q9VpR&#xA;v2qAZKeMkAcRFV8a/WxhlAJPCDYPftfd7ui57eRr6KcXDqkSMrWo48GLkUZtuVRxNN8JgTMGzsOS&#xA;BMCBjwiyefX3JZ5Yt5IG1OJriSVYruSOOBuPCFCfVRUoAd0mFak5i6KBjxiyakdu7rt8C5naExIQ&#xA;IAFwBvqehv4xW6z5TsNa0CbR9VuJ7u2uGdmdpChPMkqrLHwSRF5bI4KnbbMmEJRgRxG999r3cWeS&#xA;MpgmAoV6d6NfG9+qjpvkDyrpEFtFo1hbaXJA8bNcWtvbxyyiPqHcR1PL9qmGcZSAHEdq+NfrY45R&#xA;iSeCO9/C+73dE7ktpHvYrgXEipEjq1svHg5elGbbl8NNt8TAmQNnbooyAQMaFk8+oRGWNTsVdirs&#xA;VdirsVdirsVdirsVdiqjfWqXdlcWsn2LiN4n+TqVP68hlgJxMT1FNmHIYTEhziQfklkN/YXHlq1k&#xA;1VgsV7FHBOj1+KSUCNk23ryqMxY5YSwROTlIAH3nanMnhnHUSGLnAkj3De/kibqLRudjptwqcwwk&#xA;sLc162wqCoH8g8ctnHFcYH3xH9X9TTjlmqeSN90j/W/Wu/3E3GsE/C+p2MdD15RpP+HxcPn9+H93&#xA;LJ/TiPkCj97HF3Y5n5mP9rEL78yfK+l61frHZTS3LOsdzcxcaSGIcR9ph9npmny9s4MWWVRJl1I6&#xA;073D2Dqc2GFyAjVgG9r+HVAp+Z/lFLGWwTS7lbSf1PViHD4vWJL7867ljmOO29OIGHBLhN/bz6uQ&#xA;fZ/VGYmckeIVR36cujcv5o+U5beC2k0u4aC2aN4I/gorRfYIo/7OGXbmnIETCVRquXTl1RH2e1UZ&#xA;GQyRuV3z68+i+T81/LEl3DePpty1zArpDIeFVWSnKnx034jJHt7AZCRhLiHu6/FjH2b1IgYCceE1&#xA;fPp8HRfmt5Xhu57uPTblbm64CeT4KsIxRf2+wwR7dwCRkIS4pc+XT4pl7OamUREzjwxuufXn0U4/&#xA;zQ8pR2U1kml3K2twZDNGOHxGYkyb8678jgHbenETEQlwm7+PPqyPs/qjMTOSPFGq59OXRub80fKU&#xA;1tBay6XcNb2zRtDF8ACmKnDo/wCzTGXbmnlERMJUKrl05dUR9ntVGRkMkeKV3z68+i+T81/K8l3D&#xA;ePpty1zbq6QyHhVRJTlT46b8cke3sBkJGEuIcuXX4sY+zmpEDATjwyq+fT4Oi/NfyxFdz3cem3K3&#xA;FyEE8nwVYRghRu/avbGPb2ASMhCVy58unxWXs5qZRETOPDG659efRTj/ADP8oxWc9nHpdwttcmQz&#xA;xjh8RmrzJPOu9cjHtvTiJiIS4Td/Hn1Zy9n9UZiZyR4o1XPpy6KN5+aegSWsVomivLbWxia2iklE&#xA;YBhIKfZD/Zp74ntvTGIiYS4RVcunLqiPs9qoyMhOPFK759efRCXn5wM93Fdp5chmubYMttJJfMhU&#xA;SAB+ls4FQMme3dOZCRjLiHLl1+LCPs5qoxMBOHDKr59Pgl0n5v8AmNLu5u7Ly9p8NzchFkkkvJ5C&#xA;RGKLypBHWlT0phj27phIy4ZcR58unxRL2c1ZiIGcOGN1z68+iRD8xvzBtxqCWGnaJDBqJLTQSm8l&#xA;Xk4IkaqvGfj5eO2V4+2NJHiAjOp8xt8evVty9h62fCTPHxQ5Hf4dOiDvfzB/N26s47IfoCC1h9Iw&#xA;RR29yQhhIKcecj9OPfLD25pDERMJ8IquXTl1ah7Pa0TMxkhxSuzv159EvvvOX55Xd3Fd/pzTobi3&#xA;V1t5I7VD6fqAB+POJxuB3rkz2/pDISMJXHly6/Frj7NawRMBkhwyq+fT4My/JK7/ADIvvPN/d+ad&#xA;bj1GCSwPKOGGKIGWOWNYy3pxRfZVn6ZnaLtDBqJyOOBjLayfs6uv7Q7M1GlhEZJiUbNAfaeT3TNi&#xA;6p2KuxV2KuxV2KuxV2KuxV2KuxV2KpHpNw9vcTaaLeSZUvZ+Uq8eESyAXSFqkGh9bitPD2zA08zE&#xA;mFE+uXwv1fp2djqYCURksD0R2769Br/S2U0W4dr6S3Nu6pHGrrdHj6bFyQUXetRx32zLEyZkUdhz&#xA;6OGYAQErG55dfewz81vOGqeX/wAude1nTUksdUtnS20+SRImLySTpCsiK3qKy/GSOQ7dMlgnxE2D&#xA;EAnn5dfcw1EDEARIkSBy6E9Pe8eee7uHae8l9e7lJe4moBzkbd2ooAFW32Gea5snHMy7yS+s4MXh&#xA;44w/mgD5LkhlkrwRnp14gn9WQESeTYZAcytZWUlWBDDqDscBFJBtrAq94J0Xk8bKviVIGSMCOjET&#xA;ieRWZFk7FXYq7FXYq7FXYq7FVyRu5oilj4AVP4YQCeSCQObnjkQ0dSp60YEfrxII5qJA8luBL0/8&#xA;lLZuOsXhAKFoLdGpuHQO7ivusiE/RnYezuKsUpfzpfd/a8N7U5rzRh/Njfz/ALA9OzoXmHYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYqk8Prw+a7hKKLa7tElHXkZYXKMfCnGRa/RmHG46gj+GUb+INfpDny4Za&#xA;YH+KMyPgRf3gphbnUK3H1gRAeofqgjLf3dBx9Sv7Va9MyIce/FXPb3ebiz8Pbhvlvff5eTyf8/Lm&#xA;8k8seWdIvPTF7qGqwyXaQ1MZjtIpJ5AvLenJU65jarLLHpZylXFwVtys7fpcvR4YZNZjhC+Djvfn&#xA;Ud9/kknkPy3Hr2vJbT1+pwqZrmhoSqkALX/KYj6M43svRjUZuE/SNy932xrzpsBlH6jsHqOv+b9I&#xA;8q3NjpcdnUTAN6UPGNY4y3EHjTepB+7Op1faGPSyjjEefdtQeO0XZmXWRllMuXfvZQn5r6VZT+Wp&#xA;L9o1F3aPGY5aAOVdwhSvcfFWntlXb2CMsBnXqjX6m/2c1M46gQB9MgdvhdrPy+8r6dpOgx6zexq1&#xA;5NH9ZMzgH0oqclC16fDucj2ToYYcQyyHqIu+4Mu2+0MmfOcMD6AeGu8+fxTPyp5zs/NDX0Udo0SW&#xA;3EESEMHSTkBUAbfZ3GZWg7RjquICNV39bcPtLsqej4SZWZd3SnnXmHy7aQfmLDptqgS2up4HES9F&#xA;WQguB7Dc5zmr0cY60QiPTIx+3m9VoddKWgOSR9UYy393J6j5zAPlTVgRUfVpDv7LXOp7R/xef9Uv&#xA;G9lH/Ccf9YMC/JzRvUvLvV5F+GBfq8BP87/E5HuFoPpzQezumuUsh6bD9P483pvajVVCOIddz7un&#xA;2/cv/Oe5L3el2a7lUlkKjvzKqP8AiByXtHO5Qj7yx9lcdRyT8wPlf62Y+ZCNJ8iXcQPEQWQtlI2o&#xA;WUQin35uNZ+60kh3Qr9DodB++1sT3z4vt4kq/KG09HyxJOR8VzcuwP8AkqFQfiDmJ7P46wE/zpOb&#xA;7TZeLUiP82I/WxzypoX1T80bm24/u7EzzIKdEdaR/hKM12g0vBrzH+bZ/V97te0tZx9mxl1nwj4j&#xA;n9y/8xrebWfPWn6PAaMYo4yevEuzM7fQlDh7Ygc2rjjHcPx8mPYUxp9FPKe8n5UB9rL9UvtC8i6F&#xA;Ebe0qGZYkjSgeRqElncjwHXNxny4tDiFR8vf7y6PT4c3aOY8UvPyHkArajHp/mbyc1zPb8Vntmnh&#xA;DgF4n4khlPsR9IyeYQ1Wm4iOcbHk14JZNJq+GJ+mVHzDwTOAfS3sn5NWwTyabulDfXlzKRv/ALpf&#xA;6qD9Itwc9C7LxcGngPK/nv8ApfMe2M3iarIf6Vf6Xb9DOcz3WuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;VI722ltdYsr17h5VnuHg4sFpFHNDsq0A2MsKdfHMHJAwyRkSTciPcCP1gOxxTE8UoCIFRB95Euv+&#xA;bIo4afcjSjZfX5jOVK/XiE9WpNa/Z4+w2y/wZeHw8Rv+dtf6nG8ePi8fBHh/m71+t4/+dtx9Y876&#xA;DYluQ03T7i6bxL3cqRIxpt9m3fNV7QZeHTiP86X3fgO69mcPFqjP+ZH7Sf1WyP8AJe0pDql4R9po&#xA;oUP+qGZv+JDMT2bx7Tl7g5ntVl3hD3ljv5kak/8AjmWRKMbEQqgbdSUUSUP+ybNd2zm/wokfw1+t&#xA;2vYWAfkwD/HxfqQ+sefPMPmG0XS7kQiOaRP7tGUlgfhFSzbVyvUdqZtRHw5VRLbpex8Gll4keKwD&#xA;zL1TzlKmneStQVNkS2FunykpCP8AiWdX2jIY9LKv5tfPZ4vsqJy6yF/zuL5epj35NWnDSL+7pQzT&#xA;rHWnURJX/mYc13s5jrHKXfKvl/a7X2py3lhHujfzP7EJZj9JfnDcS/ajsQxp4elEIv8AibZVj/ed&#xA;pE9I/oFfe3ZT4XZQHWf6ZX9zMvMN3FceXvMMS7m0t54n/wBb6qJf1SDNzq8glhyj+bGQ/wBjf6XQ&#xA;6LGYZ8J/nSif9nX6FHylp6aHoel6ay0urgNJOO4YqXcn/VJVMhoMXgYoQ/iO5+8/qZ9pZjqM2TIP&#xA;pjsPuHz3LCPOY/SX5n6fZdVia2icf5PL1W6f5L5o+0f3mujHu4R+n9L0XZX7rs6c+/iP6P0Mk/Nq&#xA;79Hyp6IO91cRxkey1k/WgzZdv5OHT1/OkP1/odT7NYuLU3/NiT+j9KaeR4I7HydpauQgeJXqe7XD&#xA;8l+8yAZldmRGPTQvu/3X9rh9rzOTV5COh/3Ir9CJg0VYvNV1q4FPXtI4SfFg7Fv+FVMtjpq1Byd8&#xA;QPt/saZ6u9NHF3TJ+z+1huh/7kfzb1O66rZJIFPUAxqtvQfec02l/edozl/Nv7Ki7/V/uuy4R/n1&#xA;9tyd+a1tf6pqek6TYRGe49Oaf0gQKg8RWpI6cDj27CeWcMcBZon8fJfZzJDDjyZZmo2B+PmlF3c/&#xA;mfpugvb3EPoaXBB6DkrB8MXH0+oJatD88w8k9djw1IVjEa/h5cnOx4+zsucSibyGV/xc+bz64nS3&#xA;t5Z5NkiRnc+yipzRY4GUhEcyaeiyZBCJkeQFvYvJmhpaeQY4LnQ7ie6urOzstQiEsSvdo8SerKn7&#xA;1VREa5l2JV/hO1aV9QAEaA5B8gMjK5HmebJZ09G7v7yHR5prmwshDZyLJEPrSkGQ28IaQBSGRQWk&#xA;C7nrQYq3babZ295ptrDpUiW+l2rGxufUUpESBF6HH1C7OU/aII/yqnG1pRtbC2kt9JR9FngWSd9R&#xA;ljkljP1O6flMxlKytzZpJWAEfJa+AAxta8k/yLJ2KuxV2KuxV2KuxV2KuxVLPMoYaLcToKvaFLta&#xA;df8ARnWbb5hKZi63+6J/m+r/AEpv9DmaD++ET/Fcf9MOH9KZgggEGoO4IzKcMh8/fmHc/WvzF1uW&#xA;tRara2KHtxihE5p8numHzzkvaPLeSEO6N/M/sD23srhrFOf86VfIftL0/wDKa2WLyksg63E8sh+i&#xA;kf8Axpmz7BhWnvvkf1fodR7SZOLVV/NiB+n9LCtH0i280fmBqSXYZrT1LiZ+JKnir8E3+kZpNPp4&#xA;6rWTEvpuR/U9BqtTLR6GBh9VRH2WUx1jypoeledPL1hYK6mWVZ7gSOWqquCo+ng2ZOo0GLFqsUId&#xA;TZ+f7C4ul7SzZtJmnOthQr3ftCf/AJu3Ri8rxwjrc3KIf9VVZ/1qM2HtBkrAB3yH63WezOPi1JP8&#xA;2J/QEd+W1oLPyZZvJ8Bm9SdydtmY8T/wAGX9jY+DTRvrZ/Hwcbt7J4mrkB0ofZ+tj35WD69r2vay&#xA;f92vRW8fXkaRv+IjNd2GOPNky9/6TbtPaI+HgxYu7/egBkPki8j1GPX3akiSapOOLCoMXpxotf8A&#xA;Yrmx7MyDIMp78kvlQDq+1sRxHEORGKPzslfZX/1/z7exoaw6VZiD/nrO6u5+5APow48viauQ6Y41&#xA;8Sb/AEMcuHw9FEnnknfwiCB97EdEH6R/N28uPtLayTk/KJPQH4kZqNN+87RlL+aT9npd7q/3XZcY&#xA;/wA4R+08Sv8AnLcM76TYR7sxkkK+JPFE/jlntHOzCA82r2WgAMkz5D7yU9/MC6bR/JaRQNxdXtoY&#xA;W94mDj8Iszu1p+DpqHfED4b/AKHW9i4/H1ZMuVSJ+O36WVWt3FcWUN4h/czRrMp/yWXkPwObaGQS&#xA;iJdCLdNkxGMzA8waeeflIfreoa7qb/bmkSlev7xndq/hnOdgeueSZ6n77L1PtL6MeLGOQB+ygl/n&#xA;PWNWi/MdE0uX0rxY4bON+CuaS0egDhh/uzwzH7R1GQa2sZqVCPz36+9yuytLil2eTlFwuUudctun&#xA;uZT+a136HlCWOtPrU0UP3H1P+ZebXt3Jw6Yj+cQP0/odN7OYuLVA/wA0E/o/S8C1yL6zYrp4qX1O&#xA;eDT1VQSx+tzLCQANz8LnpnOdi4uPVQ8jxfLd6rt7N4ejn/SHD/ptvufRlh9TNvo0EcmqKLl5L+D1&#xA;VnVlUhpDBdll/dovrhUien2QB9nO+L5qOjfOzuLM0k1VF1PUeKnjcpLE8DdB8IaC2f6r1NFYN1+P&#xA;FW71rSSHWZjJqiC4aPTpRCtwHjZqRiazQL8IH1jk0qCnw1J+HEKUbbrC+tyhXvBJZW0cTJJ6otXE&#xA;rFg6lhwllX06MwJK1p3wdE9UywJdirsVdirsVdirsVdirsVSXWVguLl4JDGQ0K2pDGZW43soV1/d&#xA;/D8SxfCeoPgDumNij1WMjGQI5hjdtf6lb6fCJdPMs8UUrG49ZwrS0WzikA9RSFYCjCnuvjmHhnlh&#xA;ARMCSABzj+tz8+PDOcpDIAJEmqltfweR3Monvr25VSqXFzPLErHkwiaVjEGarVKx8RWucX2rm8TU&#xA;SPw+Wz3vY2DwtLAeV/M39zPvy9/MDT9GsG0zVA6whzJBOg5BeXVWUb9dwRmx7I7Whhh4eTlexdZ2&#xA;32LPPPxMdXVEMjf8wfy/01ri709RLdXHxS/V4GjZ2HTkzrGOubI9raPHcobyPdGr+dOpHYuuy1HJ&#xA;tGPK5XXyt5ve+bb+680J5gcASxSo8UNfhWOM7R1+WxOc1k1855/GPMHl5Do9Zi7NhDTHAORG58z1&#xA;ekyfmB5A1ixWPVfhUEP9WuIXko47gxq4zpT2to80ayfIgn7reTj2LrsE7xfMSA++kk83/mbYz6Y+&#xA;laCjLHKnpSXBX01WKlCka9dxt02GYPaHbUJY/DwjY7Xy28nYdmdgTjk8XOdwbrnv3koTyH5z0LQN&#xA;Auobhn+vzSPIgVCwoECoCfmDlXZfaOLT4ZA3xk3y8tm7tjsrNqc8TGuAADn57u/L7zto+g6VeQ37&#xA;SG4lmMqBVLcvgA3b3Ix7J7Sx4MchO7Jv7F7b7Jy6nLEwrhEa+1vyH520jS5NVu9Wkk+t6jMsrFEL&#xA;A05Mfxc49l9pY8RnLITxTN/f+te2OycuYY44gOGEa5+79SD8ieadI0rW9R1PU2dXulIj4JzPxyc3&#xA;rvt0GU9l67Hiyznk/i/Sbcjtjs7Lmwwx469Pn3Cg15o806Tq/nLTtQVnOmWnoiSqfEQkhkf4fetM&#xA;ddrsebUwn/BGvvsr2f2dlwaSePbxJcX2igivzH866TrthaWunNIyxytLNzUpuF4r1/1jlvbHaWPP&#xA;CMYXsbaewuycumnKWStxQRulfmJpVt5I/RkzSfpOO2lgjAQlKkMsXxfIjLsHa+OOl8M3x8JH6nH1&#xA;PYeWes8QV4ZkD91pF+XnnC38u306Xis1leBRIyCrIyV4tTuPiNcwOyO0Bp5Hi+mTsu2+y5aqAMPr&#xA;j9tsz1Lz75AinGq28a3urKvGNxC6OO27uq9PEVObvN2rowfEiOLJ7v0l5/B2NrjHwpHgxf1hXyBY&#xA;3+Y/nTStetLK205nZYpHkm5qV34gLT7zms7Y7Sx54xjDod3b9hdlZdNKUslbgAfpeeQQfWfNnlq2&#xA;a9GmxG+Mn6RojejMkMn1ZuLhkYmcpxDChNK7Zb7MxHiyPUQ/SLafa2R8CA6Gf6DT6MutVsra51G4&#xA;n1cRWul2gbULdlj4wVBkFw78eVfTX7NaU7Z19PD21BP6V3YWc+t+rdWdmbi+iZIUNzGQIxcSUUem&#xA;ocE/BxH0DFfio2V/BNDo6ReYPrD6g8l9aSBIOV5aAGT0lAQDgiyx/EoDbDfc4keSg+aP0a4juorm&#xA;6h1D9IW8txIIWAQLCIyImhUoByCyRtu1TU9aUwFITDAl2KuxV2KuxV2KuxV2KuxVj8mowrcSz/Wo&#xA;QI5Lm5Cm/ohS0jFs/JStERJWpKvRH3NTtkqY2g9Tvv0fptzKtxzmsYlXh9fZ5WNhbtcsGUr8UhJA&#xA;kHV0ozeGRnIRiZHkN2WOBlIRHMmnhcUaxRJGteKKFFdzQCmeYzmZSJPMvr2OAhERHICl+QZOxV2K&#xA;uxVhPmD80dL025e1soDfTRkrI4YJEGHUBqMWp8vpzpND7N5c0ROZ4Afif2PK9o+1eHBMwxx8SQ57&#xA;0Pnvf43Qui/mzbXd9Fa31l9WSZgizpJzCljQcgVXb3rl+r9l5Y4GUJ8VdKpx9F7XxyZBDJDhEjVg&#xA;389gzi/v7TT7OW8u5BFbwjk7n9Q8SewzmsGCeWYhAXIvWajUQwwM5mohgF5+cMKylbPTWkiB2klk&#xA;4E/7FVan351WH2TJHrnR8hf22PueNz+2cQax47Hma+yj96ZeWvzNsdWvY7G6tjZ3Ex4wtz5xsx6L&#xA;WilSe2YfaPs7PBAzjLjiOe1Fz+y/ajHqMgxzjwSly3sH7qZZqWpWWm2Ul5eSCK3iFWY/gAO5PYZo&#xA;tPp55piEBci9FqdTjwYzkyGohgF3+cUYlItNMLxDo8svFj/sVVqffnVYvZM168m/kP2/oeNze2gv&#xA;0Y7HnL9FH7028r/mTYazepY3FubO6l2hPPnG5ArStFIJ7bfTmB2l7PZNPA5Iy44jntRH3uy7K9p8&#xA;eqyDHKPBM8t7B+5NPNvmuHy7awTyQG4adyixhuFABUmpDZg9l9mHVyMQeHhDsO2O146KEZGPFxGq&#xA;ukT5Z8wQa9pSX8UZhq7I8RPIqynxoOoocq7R0MtLlOMm9rtv7L7Rjq8IyAVuRXckFt+ZUFz5gXSI&#xA;rBiWuDbrP6gpQMV58ePgK0rm0yez0oafxjP+HiqvLlzdNi9p4z1PgCH8fDd+fPk90/L3y4tvJpfm&#xA;VXpcT3b2bh6tGIDE9CqgrRzJVeXv0y/sXHwQjP8AnTI+Ff8AFBx+38viZJ4/5sIy+N/8TJ6a0fmD&#xA;0Zgs9oJjcqbdjDIVW05pzRx6tWl4c6MCFrT4djXqNnj927lNdK6h9WmtVZox+ihJFIQkvA1NxxkH&#xA;NS9Nk4mmOy7qpXVPrZIkg+qehQKUf1PrFftV58fT4/s0r74qvsRfCygF+8T3ojX6y8CskRkp8ZjV&#xA;2dgtegLE4CkK+KuxV2KuxV2KuxV2KuxV2KoAaZcBAp1CdjxRSxS3qeMnqSHaKn71fgb26Ub4sNop&#xA;B655XGtaTe6Xd6jcpb38NzBM0IgR+NywKlW9IkNCg9ND3U/FyahDfktHvefW/wDzjH+XkTAyXWrT&#xA;gMTxkvGFQU4hTwVPst8Q9+u22CofzY/IJ4p/z5f6Yo6z/wCcdPy2tmjZobycoUJ9W8uCG4KQwYBw&#xA;v7ytTQbU+GmAxj/Nj8gkTn/Ol/pirXX5QeSdG0ma7gs/We1iRn9Yh+SxyGSZmqN+cdUIO1AKCu+Y&#xA;mthEYzLhHpqXLuN/c5ugyTOURMpeq48z/ECB9qeR/lj5SiiZIbG2QlbhUl+pWLOpncNG4LwPU26/&#xA;BHWoIPxhjvmT4UP5o+Ti+Nk/nS+aR/mhoem6B+X3mPVtOt4Ibi3tp5bYJa2iCP1IfRVVZYeVEdvV&#xA;Bry5bE8dsljwQMh6R8mOTUZBE+qXzfKv5EaJ5Z1v8zdK0/zEUaxk5tHby09OedVJjhflsQx7d+nf&#xA;NhlJEdnWYgDLd6D59/5xn876l571Oby3YW1poDtEbOaWWC3Qn0I/VZYbcfAPV50AQfLK45hW7bPA&#xA;SduSO/5y41j6qvl3yxCscZMTX9+0aBS7f3MR2A2qJDTKtLhhEkgANurzzkBEkn4px/zi9+WvlW+8&#xA;j3uv65pVrqNxf3MkMLXkKTKlvCoU8BIGC8nL8iPAeGSzzN0x08BVl88eXkjn8/aYmmIRFLqsAso9&#xA;yeLXKiNfi+jrmRIek33ONE1IV3vaP+cvtbij1fRPLVpHHDDFA2oXKxqq8nldoouVP5BG9P8AWzG0&#xA;uGMbIADl6vPOVRJJHvZL/wA43/lv5Om/LOfzD5g0q1v5NSluD615Ckvp2tvWIiPmDx+JHJK/ww5p&#xA;nioMcEBw2Xzv+XkTz/mN5bjtUoZNWsxEh+KgNwn2ttwB12zIyAGJB7nHxkiQI73sP/OYV3ax675d&#xA;0m3jSIwWs93IsYC19eQRqWAA6fV2p9OY+kxRiCQAHJ1mWUiBIkrv+cVPM2n2mmebdNv4o5Vsrf8A&#xA;TECuqseESFLjr8osGpwxkQSAU6TPOAIBI682H/8AONOkjWPzfsp7hBMlnDdXs6sAVJMZiBIpT7cw&#xA;OW6gDgo8mnTk8dg7vsTzDDHBoU0kEYQWRS7REAUD6vIJjQDx4HNRq4iOIkD6fV/pTbu9FIyzAE/X&#xA;cf8ATDh/SmwIIBBqDuCMy3BIdirsVdirsVdirsVdirsVdirsVdiqhe39jYwG4vbiK1gX7UszrGg+&#xA;bMQMQFJYZrX55flPo/IXXmW0ldeqWha7NfD/AEcSivzywYpHo1nLEdWCaz/zl75BtarpenahqUg6&#xA;Myx28R/2TM7/APCZMactZ1MWRfl757/NLz16WpjQ7Tyz5aejrc3Zlurq4Q7j6ug+rqAR/ux1p4Bs&#xA;jOMY9bLKE5S6UHqeVNyncwJcW8sEgrHMjRuPZhQ5GcRIEHqzxzMZCQ5goPy/O82iWTyGsyxLHN/x&#xA;kj+B/wDhlOU6SRlijfOt/eNi362AjmkByux7juPsVNZ0ix1nSbzSb+P1bK/he3uI/FJFKtQ9jvsc&#xA;yQacQixT4Q/M38tPMX5c+ZRbXBc2juZdI1WOqiVENVIYfYlTbkvY7jahzPhMSDr8kDEvpX/nHj86&#xA;pfOthJoOuMP8SadEHE/T63ACFMlBsJEJAfxrUd6YubHw7jk5WHLxbHm8O/5yj1b6/wDm5ewBuS6Z&#xA;a21oprUbx+uQPk05+nL8A9Lj5z6nvPk3/nVP+cZ47ofu5Y9Eub6M14kyXayTxb+5lUDKJbz+Lkx2&#xA;x/B81/kJpP6U/N3y3AVqsNybtieg+qxtOp/4KMZk5TUS4mEXIJh/zkpq36Q/ODWVDcorFbe0j9uE&#xA;Ks4/5GO2DCPSyzm5PoWzp5V/5xiDbRyL5faRd6cZr+IsOvf1LjMfnP4uSNsfwfOn/OOmlfpH84NB&#xA;Uisdq013IfD0YXZD/wAjOOZGY1EuLhFyCP8A+cndUbUfzg1C3WrjT4LWzjA36xCYgU/y5jgwiopz&#xA;m5MOS51jyJ5k1/SWoZ/Qv9DvgNg6TI0LEe3IK4ye0gCw3iSHsf8AzhtpPqa55j1cr/vNawWitT/l&#xA;okaRgD/0biuU6g7AN+mG5L6lmiSaJ4nFUkUow9mFDmJKIIo9XNjIxII5hAeXZXk0Sz9Q8pYo/QmP&#xA;jJATE/8AwyHMfRyJxRvmBR942P3OTrogZpVyJse6W4+wpjmS4jsVdirsVdirsVdirsVdirAvzLm/&#xA;OW3hM/kSPS7uELV7a5RxeVp/utmkWBv9kB9OWQ4erXPi6PlTzj+bX55JfSaf5g1jUdKukPxWsafo&#xA;9gK029FYmK+9TXMqOOHRw5ZJ9Xn19qOoX85nvrmW7nPWWd2kc/7JiTlgDWSiNB8v615g1SHS9Gs5&#xA;L6/nNI4IhU+5JOyqO7MaDEkDmoBOwfVf5S/84xaN5f8AR1fzeItV1kUeKwpzs4D/AJQYfvnHv8I7&#xA;A7HMTJmJ2DmY8AG5e7AACg6ZQ5DsVdiqV6J+6m1Kz6CC7d0H+TcKs9f+DkYfRmLptjOPdL/der7y&#xA;XM1e4hPvgP8AY+n7gHmX/OQf5w+ZPy8XRYtDtbWaTVBcmaa7SRwnoekF9Pg8e/701rXtmwxYxLm6&#xA;zNkMapK28wWf5g/842arrfm6S3lvI4b2UPGixiC8t3f6qIxXZm+AdfiDU6HDXDOgi+LHZeI/841x&#xA;3j/nJoZtqhUW6a4IrT0vqsoPL2LEAe9MvzfSXHwfUGPfm7eS3f5o+a5ZTVl1W7hH+rBK0S/8KgyW&#xA;P6QxyH1F9Q/85BX1p5a/IxtGjlCvcpZ6XZhT9pYijPTxHpQsPpzFxC525eY1Cnk//OIegy3fnzUd&#xA;YKk2+l2Jj59hNcuFQfSkcmXag7U06Yb28v8AzBml1H8yfMTysFe41e7Xkeig3DKPoUZbDaIap7yL&#xA;6k/5ye1S00T8oP0LFJwbUJrWyt4tuRjt2EzfQBCoJ9/fMTALlbl5zUaea/8AOHmgyz+bNa11kP1e&#xA;xshaq56ercyK+3uEhNfnluoO1NWmG5LB5QPNn/OQTL/eQah5j49P+PdbqnT2hTJ8ofBr5z+Kaf8A&#xA;OUegDS/zXurpF4xavbQXq06cuJgf6S0PI/PBgNxTnFSew/8AOIWk/Vvy+1HUWFJL/UXCnxjgiRV/&#xA;4dnynUHdv0w9L3TKHISvRv3V1qlpSgiujLH7rcIspP8AyMZ8xdNtKce6V/6YX99uZqt44598a/0p&#xA;I+6k0zKcN2KuxV2KuxV2KuxV2KuxV2KpV5i8q+XPMlibHXdOg1G1PRJ0DFSf2kb7SN7qQcIkRyRK&#xA;IPN4f5m/5w/0C71GOfy9rEumWbuPrFncJ9ZCIevovyRtuwevzy+OoPVx5aYdHr3kP8uPKfkbTPqO&#xA;g2gjZwPrN5JR7idh3kkoPoUUUdhlMpmXNuhAR5MnyLN2KuxV2KpWv7nzM47XtoGA7crWQhj8yLhf&#xA;uzFHpz/1o/7k/wDHg5h9WnH9Cf8Auh/x0sL/ADx/KU/mL5dt4LS4S11nTZHl0+WWvpMJABJE5UEq&#xA;H4qeQBoR0zOxZOEuuy4+IPnNP+cYvzlLfU/qkCWrPUubyP0ajYOVBLdP8muZPjRcbwJPoP8AJT8j&#xA;7D8u7Wa8up1v/MV4gjuLpARFFFUN6UIb4iCwqzEAnbYZj5MvF7nIxYuH3vO/zn/5xp8x615qvfMn&#xA;lN4J01J/Wu9Omf0ZEnIHNo3b4GVz8RqRQnLMeYAUWvLgJNhh0H/ONf52azPbW2sSxw2luoSGW8vf&#xA;XSKP+WNIzMw2GwAAyfjRHJr8CZ5vpj8sfy20f8v/AC0mj6exuJ3b1r++dQrzzEAFqCvFQBRVqaDx&#xA;NScaczI25eOAiKeIfm9/zjH5m1LzTf6/5SeC5ttTma5n0+aQQyxzSnlJwZv3bIzkt1BFab9cvx5g&#xA;BRcfJgJNhjFv/wA40/nTrl1bxa5cRQW9uojjuL28NyI4/wCWNIzKdqbLsMl40RyY+BM830v5B/L/&#xA;AE/yF5OGiaJ/pFwoeaW5lohuLplpzeleIPEKB2Ud+uY058RsuVCHCKDxH8nf+cfPPvlz8x9N8w+Y&#xA;Y7YWVl68rtHOJHaWSF402A/meuX5MoMaDj48MhKyzP8A5yL/ACh8wefF0S68vxwtfWBniufWkEXK&#xA;KXgy7kGvFkP35XhyCPNszYzKqZr+T3k++8n/AJd6ToOoBBqFsJnu/TbmvOaZ5Nm70VgMhklcrbMc&#xA;eGNMzyDNhUvmy+tvM0lPLWrOtzb8AFS0o5tZD8a1uRsRP33yjgrNdj1R/wByf+POR4hlgqj6Z/7o&#xA;f8dR/wDjPUP+pU1r/gLL/sqzJ4fNxOLyLv8AGeof9SprX/AWX/ZVjw+a8XkWQWdw1zaxTvBJbNKo&#xA;Y283ESISPsvwZ1qPYnIswrYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUv1SyvJZ7S6smjW4tneo&#xA;m5cWjkQqy/Dv9rifozHz45ExlGrj39xH9jlafLCIlGd8Mq5d4P8Aas/52f8A5cv+SuR/f/0PtZf4&#xA;P/T+x3/Oz/8ALl/yVx/f/wBD7V/wf+n9jv8AnZ/+XL/krj+//ofav+D/ANP7Hf8AOz/8uX/JXH9/&#xA;/Q+1f8H/AKf2O/52f/ly/wCSuP7/APofav8Ag/8AT+x3/Oz/APLl/wAlcf3/APQ+1f8AB/6f2IWQ&#xA;eYVc1NiCCSB8Q32k7j/JP4nH9/8A0PtX/B/6f2NU8wA8a2G21N9gDx8P5XH0fPd/f/0PtX/B/wCn&#xA;9jX/ADsRH2rEt0rvWpFPD+aP7/lj+/8A6H2r/g/9P7HA+YKlg1hTrXfoDz/4i5+jH9//AEPtX/B/&#xA;6f2O4+YKceVhT7JO+5/u6dPGn4D2x/f/AND7V/wf+n9juXmGnKtiK/EBU79JP+NT+Jx/f/0PtX/B&#xA;/wCn9jqa+DSthQGlN9gDx8P5ZB9Hz3f3/wDQ+1f8H/p/YqxWetXF7YXNy9qI7RnLelzLMGjaMr/L&#xA;9qh+jI+FllOMpcPp7r7qZ+LhjjlGPFcgOddDf496dZmOA7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FVGWocEVNQDtzps1D9kHs30/Riqn8XGg5VpQ7yeBXrTxX+OKtlj&#xA;u1Gp9r/dns/Snz2+jFXb/Z+KgIXrJXqU609wfx98Va5MRWjVIqP7ym6g+Hin+dcVbqQx+11/4s6B&#xA;q+Hg/wDnTFWvipT4q0p1k60K9aeK/wAcVVoWqG2PWoryHUA/tAeOKqmKuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2Kv/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:bce50ca8-ee70-bb4c-9ff5-6b7f9af3609f</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2fb6c04f-a105-634c-a407-0ca07d463a3c</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:2564c8cf-cd9e-3449-8840-21e47597b263</stRef:instanceID>
            <stRef:documentID>xmp.did:2564c8cf-cd9e-3449-8840-21e47597b263</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:28c83b25-d31c-0d44-9a20-fab4840af1fb</stEvt:instanceID>
                  <stEvt:when>2019-02-16T15:08:04+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bce50ca8-ee70-bb4c-9ff5-6b7f9af3609f</stEvt:instanceID>
                  <stEvt:when>2020-12-03T19:43:58+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b1af3e1f-ac8d-3340-a535-f3513f8b0916</stEvt:instanceID>
                  <stEvt:when>2022-07-30T11:19:18+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge 2022 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2fb6c04f-a105-634c-a407-0ca07d463a3c</stEvt:instanceID>
                  <stEvt:when>2022-07-30T11:24:19+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge 2022 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>32.944444</stDim:w>
            <stDim:h>26.361111</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -1898 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1898 li
2372 1898 li
2372 0 li
cp
clp
2371.71 1897.37 mo
0 1897.37 li
0 0 li
2371.71 0 li
2371.71 1897.37 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
465.122 490.949 mo
470.218 490.949 475.199 486.818 476.247 481.722 cv
477.295 476.625 474.013 472.494 468.916 472.494 cv
463.82 472.494 458.839 476.625 457.791 481.722 cv
456.743 486.818 460.025 490.949 465.122 490.949 cv
cp
0 .747768 1 0 cmyk
f
524.548 490.949 mo
529.643 490.949 534.625 486.818 535.673 481.722 cv
536.72 476.625 533.438 472.494 528.342 472.494 cv
523.246 472.494 518.265 476.625 517.217 481.722 cv
516.169 486.818 519.451 490.949 524.548 490.949 cv
cp
f
583.974 490.949 mo
589.069 490.949 594.051 486.818 595.099 481.722 cv
596.146 476.625 592.864 472.494 587.768 472.494 cv
582.671 472.494 577.69 476.625 576.642 481.722 cv
575.595 486.818 578.877 490.949 583.974 490.949 cv
cp
f
643.398 490.949 mo
648.495 490.949 653.477 486.818 654.523 481.722 cv
655.572 476.625 652.29 472.494 647.193 472.494 cv
642.097 472.494 637.116 476.625 636.067 481.722 cv
635.019 486.818 638.302 490.949 643.398 490.949 cv
cp
f
702.824 490.949 mo
707.921 490.949 712.901 486.818 713.949 481.722 cv
714.997 476.625 711.715 472.494 706.619 472.494 cv
701.522 472.494 696.541 476.625 695.493 481.722 cv
694.445 486.818 697.727 490.949 702.824 490.949 cv
cp
f
762.249 490.949 mo
767.346 490.949 772.327 486.818 773.375 481.722 cv
774.423 476.625 771.141 472.494 766.044 472.494 cv
760.947 472.494 755.967 476.625 754.919 481.722 cv
753.871 486.818 757.152 490.949 762.249 490.949 cv
cp
f
821.675 490.949 mo
826.771 490.949 831.752 486.818 832.801 481.722 cv
833.848 476.625 830.566 472.494 825.47 472.494 cv
820.373 472.494 815.392 476.625 814.345 481.722 cv
813.296 486.818 816.578 490.949 821.675 490.949 cv
cp
f
881.101 490.949 mo
886.196 490.949 891.178 486.818 892.226 481.722 cv
893.273 476.625 889.991 472.494 884.894 472.494 cv
879.799 472.494 874.817 476.625 873.769 481.722 cv
872.722 486.818 876.004 490.949 881.101 490.949 cv
cp
f
940.526 490.949 mo
945.622 490.949 950.603 486.818 951.651 481.722 cv
952.699 476.625 949.417 472.494 944.32 472.494 cv
939.225 472.494 934.243 476.625 933.195 481.722 cv
932.147 486.818 935.43 490.949 940.526 490.949 cv
cp
f
999.952 490.949 mo
1005.05 490.949 1010.03 486.818 1011.08 481.722 cv
1012.12 476.625 1008.84 472.494 1003.75 472.494 cv
998.65 472.494 993.669 476.625 992.62 481.722 cv
991.573 486.818 994.855 490.949 999.952 490.949 cv
cp
f
1059.38 490.949 mo
1064.47 490.949 1069.45 486.818 1070.5 481.722 cv
1071.55 476.625 1068.27 472.494 1063.17 472.494 cv
1058.08 472.494 1053.09 476.625 1052.05 481.722 cv
1051 486.818 1054.28 490.949 1059.38 490.949 cv
cp
f
1118.8 490.949 mo
1123.9 490.949 1128.88 486.818 1129.93 481.722 cv
1130.98 476.625 1127.69 472.494 1122.6 472.494 cv
1117.5 472.494 1112.52 476.625 1111.47 481.722 cv
1110.42 486.818 1113.71 490.949 1118.8 490.949 cv
cp
f
1178.23 490.949 mo
1183.32 490.949 1188.31 486.818 1189.35 481.722 cv
1190.4 476.625 1187.12 472.494 1182.02 472.494 cv
1176.93 472.494 1171.95 476.625 1170.9 481.722 cv
1169.85 486.818 1173.13 490.949 1178.23 490.949 cv
cp
f
1237.65 490.949 mo
1242.75 490.949 1247.73 486.818 1248.78 481.722 cv
1249.83 476.625 1246.54 472.494 1241.45 472.494 cv
1236.35 472.494 1231.37 476.625 1230.32 481.722 cv
1229.27 486.818 1232.56 490.949 1237.65 490.949 cv
cp
f
1297.08 490.949 mo
1302.17 490.949 1307.16 486.818 1308.2 481.722 cv
1309.25 476.625 1305.97 472.494 1300.87 472.494 cv
1295.78 472.494 1290.8 476.625 1289.75 481.722 cv
1288.7 486.818 1291.98 490.949 1297.08 490.949 cv
cp
f
1356.5 490.949 mo
1361.6 490.949 1366.58 486.818 1367.63 481.722 cv
1368.68 476.625 1365.4 472.494 1360.3 472.494 cv
1355.2 472.494 1350.22 476.625 1349.17 481.722 cv
1348.13 486.818 1351.41 490.949 1356.5 490.949 cv
cp
f
1415.93 490.949 mo
1421.03 490.949 1426.01 486.818 1427.06 481.722 cv
1428.1 476.625 1424.82 472.494 1419.72 472.494 cv
1414.63 472.494 1409.65 476.625 1408.6 481.722 cv
1407.55 486.818 1410.83 490.949 1415.93 490.949 cv
cp
f
1475.36 490.949 mo
1480.45 490.949 1485.43 486.818 1486.48 481.722 cv
1487.53 476.625 1484.25 472.494 1479.15 472.494 cv
1474.05 472.494 1469.07 476.625 1468.02 481.722 cv
1466.98 486.818 1470.26 490.949 1475.36 490.949 cv
cp
f
1534.78 490.949 mo
1539.88 490.949 1544.86 486.818 1545.91 481.722 cv
1546.95 476.625 1543.67 472.494 1538.58 472.494 cv
1533.48 472.494 1528.5 476.625 1527.45 481.722 cv
1526.4 486.818 1529.68 490.949 1534.78 490.949 cv
cp
f
1594.21 490.949 mo
1599.3 490.949 1604.28 486.818 1605.33 481.722 cv
1606.38 476.625 1603.1 472.494 1598 472.494 cv
1592.9 472.494 1587.92 476.625 1586.88 481.722 cv
1585.83 486.818 1589.11 490.949 1594.21 490.949 cv
cp
f
1653.63 490.949 mo
1658.73 490.949 1663.71 486.818 1664.76 481.722 cv
1665.81 476.625 1662.52 472.494 1657.43 472.494 cv
1652.33 472.494 1647.35 476.625 1646.3 481.722 cv
1645.25 486.818 1648.54 490.949 1653.63 490.949 cv
cp
f
1713.06 490.949 mo
1718.15 490.949 1723.13 486.818 1724.18 481.722 cv
1725.23 476.625 1721.95 472.494 1716.85 472.494 cv
1711.76 472.494 1706.77 476.625 1705.73 481.722 cv
1704.68 486.818 1707.96 490.949 1713.06 490.949 cv
cp
f
1772.48 490.949 mo
1777.58 490.949 1782.56 486.818 1783.61 481.722 cv
1784.66 476.625 1781.37 472.494 1776.28 472.494 cv
1771.18 472.494 1766.2 476.625 1765.15 481.722 cv
1764.1 486.818 1767.39 490.949 1772.48 490.949 cv
cp
f
1831.91 490.949 mo
1837 490.949 1841.99 486.818 1843.03 481.722 cv
1844.08 476.625 1840.8 472.494 1835.7 472.494 cv
1830.61 472.494 1825.63 476.625 1824.58 481.722 cv
1823.53 486.818 1826.81 490.949 1831.91 490.949 cv
cp
f
452.904 550.375 mo
458 550.375 462.981 546.243 464.029 541.146 cv
465.077 536.05 461.795 531.919 456.698 531.919 cv
451.602 531.919 446.621 536.05 445.573 541.146 cv
444.525 546.243 447.808 550.375 452.904 550.375 cv
cp
f
512.329 550.375 mo
517.426 550.375 522.407 546.243 523.454 541.146 cv
524.503 536.05 521.221 531.919 516.124 531.919 cv
511.027 531.919 506.047 536.05 504.999 541.146 cv
503.95 546.243 507.232 550.375 512.329 550.375 cv
cp
f
571.755 550.375 mo
576.852 550.375 581.832 546.243 582.88 541.146 cv
583.928 536.05 580.645 531.919 575.55 531.919 cv
570.453 531.919 565.472 536.05 564.425 541.146 cv
563.376 546.243 566.658 550.375 571.755 550.375 cv
cp
f
631.18 550.375 mo
636.276 550.375 641.258 546.243 642.306 541.146 cv
643.353 536.05 640.071 531.919 634.975 531.919 cv
629.878 531.919 624.897 536.05 623.85 541.146 cv
622.802 546.243 626.084 550.375 631.18 550.375 cv
cp
f
690.605 550.375 mo
695.702 550.375 700.683 546.243 701.731 541.146 cv
702.778 536.05 699.497 531.919 694.4 531.919 cv
689.304 531.919 684.323 536.05 683.275 541.146 cv
682.227 546.243 685.51 550.375 690.605 550.375 cv
cp
f
750.031 550.375 mo
755.128 550.375 760.108 546.243 761.156 541.146 cv
762.204 536.05 758.922 531.919 753.826 531.919 cv
748.729 531.919 743.749 536.05 742.7 541.146 cv
741.653 546.243 744.935 550.375 750.031 550.375 cv
cp
f
809.457 550.375 mo
814.554 550.375 819.534 546.243 820.582 541.146 cv
821.63 536.05 818.348 531.919 813.252 531.919 cv
808.155 531.919 803.174 536.05 802.126 541.146 cv
801.078 546.243 804.36 550.375 809.457 550.375 cv
cp
f
868.883 550.375 mo
873.979 550.375 878.96 546.243 880.008 541.146 cv
881.056 536.05 877.773 531.919 872.677 531.919 cv
867.581 531.919 862.6 536.05 861.552 541.146 cv
860.504 546.243 863.786 550.375 868.883 550.375 cv
cp
f
928.308 550.375 mo
933.404 550.375 938.386 546.243 939.433 541.146 cv
940.481 536.05 937.199 531.919 932.102 531.919 cv
927.006 531.919 922.025 536.05 920.977 541.146 cv
919.93 546.243 923.211 550.375 928.308 550.375 cv
cp
f
987.733 550.375 mo
992.83 550.375 997.81 546.243 998.858 541.146 cv
999.906 536.05 996.625 531.919 991.528 531.919 cv
986.432 531.919 981.45 536.05 980.403 541.146 cv
979.354 546.243 982.637 550.375 987.733 550.375 cv
cp
f
1047.16 550.375 mo
1052.25 550.375 1057.24 546.243 1058.28 541.146 cv
1059.33 536.05 1056.05 531.919 1050.95 531.919 cv
1045.86 531.919 1040.88 536.05 1039.83 541.146 cv
1038.78 546.243 1042.06 550.375 1047.16 550.375 cv
cp
f
1106.58 550.375 mo
1111.68 550.375 1116.66 546.243 1117.71 541.146 cv
1118.76 536.05 1115.48 531.919 1110.38 531.919 cv
1105.28 531.919 1100.3 536.05 1099.25 541.146 cv
1098.21 546.243 1101.49 550.375 1106.58 550.375 cv
cp
f
1166.01 550.375 mo
1171.11 550.375 1176.09 546.243 1177.14 541.146 cv
1178.18 536.05 1174.9 531.919 1169.8 531.919 cv
1164.71 531.919 1159.73 536.05 1158.68 541.146 cv
1157.63 546.243 1160.91 550.375 1166.01 550.375 cv
cp
f
1225.44 550.375 mo
1230.53 550.375 1235.51 546.243 1236.56 541.146 cv
1237.61 536.05 1234.33 531.919 1229.23 531.919 cv
1224.13 531.919 1219.15 536.05 1218.1 541.146 cv
1217.06 546.243 1220.34 550.375 1225.44 550.375 cv
cp
f
1284.86 550.375 mo
1289.96 550.375 1294.94 546.243 1295.99 541.146 cv
1297.03 536.05 1293.75 531.919 1288.66 531.919 cv
1283.56 531.919 1278.58 536.05 1277.53 541.146 cv
1276.48 546.243 1279.76 550.375 1284.86 550.375 cv
cp
f
1344.29 550.375 mo
1349.38 550.375 1354.36 546.243 1355.41 541.146 cv
1356.46 536.05 1353.18 531.919 1348.08 531.919 cv
1342.98 531.919 1338 536.05 1336.96 541.146 cv
1335.91 546.243 1339.19 550.375 1344.29 550.375 cv
cp
f
1403.71 550.375 mo
1408.81 550.375 1413.79 546.243 1414.84 541.146 cv
1415.88 536.05 1412.6 531.919 1407.51 531.919 cv
1402.41 531.919 1397.43 536.05 1396.38 541.146 cv
1395.33 546.243 1398.62 550.375 1403.71 550.375 cv
cp
f
1463.14 550.375 mo
1468.23 550.375 1473.21 546.243 1474.26 541.146 cv
1475.31 536.05 1472.03 531.919 1466.93 531.919 cv
1461.83 531.919 1456.85 536.05 1455.81 541.146 cv
1454.76 546.243 1458.04 550.375 1463.14 550.375 cv
cp
f
1522.56 550.375 mo
1527.66 550.375 1532.64 546.243 1533.69 541.146 cv
1534.74 536.05 1531.45 531.919 1526.36 531.919 cv
1521.26 531.919 1516.28 536.05 1515.23 541.146 cv
1514.18 546.243 1517.47 550.375 1522.56 550.375 cv
cp
f
1581.99 550.375 mo
1587.08 550.375 1592.07 546.243 1593.11 541.146 cv
1594.16 536.05 1590.88 531.919 1585.78 531.919 cv
1580.69 531.919 1575.71 536.05 1574.66 541.146 cv
1573.61 546.243 1576.89 550.375 1581.99 550.375 cv
cp
f
1641.41 550.375 mo
1646.51 550.375 1651.49 546.243 1652.54 541.146 cv
1653.59 536.05 1650.3 531.919 1645.21 531.919 cv
1640.11 531.919 1635.13 536.05 1634.08 541.146 cv
1633.04 546.243 1636.32 550.375 1641.41 550.375 cv
cp
f
1700.84 550.375 mo
1705.94 550.375 1710.92 546.243 1711.96 541.146 cv
1713.01 536.05 1709.73 531.919 1704.63 531.919 cv
1699.54 531.919 1694.56 536.05 1693.51 541.146 cv
1692.46 546.243 1695.74 550.375 1700.84 550.375 cv
cp
f
1760.26 550.375 mo
1765.36 550.375 1770.34 546.243 1771.39 541.146 cv
1772.44 536.05 1769.16 531.919 1764.06 531.919 cv
1758.96 531.919 1753.98 536.05 1752.93 541.146 cv
1751.89 546.243 1755.17 550.375 1760.26 550.375 cv
cp
f
1819.69 550.375 mo
1824.79 550.375 1829.77 546.243 1830.82 541.146 cv
1831.86 536.05 1828.58 531.919 1823.49 531.919 cv
1818.39 531.919 1813.41 536.05 1812.36 541.146 cv
1811.31 546.243 1814.59 550.375 1819.69 550.375 cv
cp
f
440.686 609.801 mo
445.782 609.801 450.763 605.669 451.811 600.572 cv
452.858 595.476 449.576 591.345 444.48 591.345 cv
439.384 591.345 434.402 595.476 433.355 600.572 cv
432.307 605.669 435.589 609.801 440.686 609.801 cv
cp
f
500.111 609.801 mo
505.207 609.801 510.188 605.669 511.236 600.572 cv
512.284 595.476 509.002 591.345 503.905 591.345 cv
498.81 591.345 493.828 595.476 492.78 600.572 cv
491.732 605.669 495.015 609.801 500.111 609.801 cv
cp
f
559.537 609.801 mo
564.633 609.801 569.614 605.669 570.662 600.572 cv
571.71 595.476 568.428 591.345 563.331 591.345 cv
558.235 591.345 553.254 595.476 552.206 600.572 cv
551.158 605.669 554.44 609.801 559.537 609.801 cv
cp
f
618.962 609.801 mo
624.059 609.801 629.04 605.669 630.087 600.572 cv
631.136 595.476 627.853 591.345 622.757 591.345 cv
617.66 591.345 612.68 595.476 611.631 600.572 cv
610.584 605.669 613.866 609.801 618.962 609.801 cv
cp
f
678.388 609.801 mo
683.484 609.801 688.465 605.669 689.513 600.572 cv
690.561 595.476 687.279 591.345 682.183 591.345 cv
677.086 591.345 672.104 595.476 671.057 600.572 cv
670.009 605.669 673.291 609.801 678.388 609.801 cv
cp
f
737.813 609.801 mo
742.91 609.801 747.891 605.669 748.938 600.572 cv
749.986 595.476 746.704 591.345 741.607 591.345 cv
736.512 591.345 731.53 595.476 730.482 600.572 cv
729.435 605.669 732.717 609.801 737.813 609.801 cv
cp
f
797.238 609.801 mo
802.335 609.801 807.316 605.669 808.364 600.572 cv
809.412 595.476 806.13 591.345 801.033 591.345 cv
795.936 591.345 790.956 595.476 789.908 600.572 cv
788.86 605.669 792.142 609.801 797.238 609.801 cv
cp
f
856.664 609.801 mo
861.761 609.801 866.741 605.669 867.79 600.572 cv
868.837 595.476 865.556 591.345 860.459 591.345 cv
855.362 591.345 850.381 595.476 849.334 600.572 cv
848.285 605.669 851.567 609.801 856.664 609.801 cv
cp
f
916.09 609.801 mo
921.185 609.801 926.167 605.669 927.215 600.572 cv
928.263 595.476 924.98 591.345 919.884 591.345 cv
914.788 591.345 909.807 595.476 908.759 600.572 cv
907.711 605.669 910.993 609.801 916.09 609.801 cv
cp
f
975.516 609.801 mo
980.611 609.801 985.593 605.669 986.641 600.572 cv
987.688 595.476 984.406 591.345 979.31 591.345 cv
974.214 591.345 969.232 595.476 968.185 600.572 cv
967.137 605.669 970.419 609.801 975.516 609.801 cv
cp
f
1034.94 609.801 mo
1040.04 609.801 1045.02 605.669 1046.07 600.572 cv
1047.11 595.476 1043.83 591.345 1038.74 591.345 cv
1033.64 591.345 1028.66 595.476 1027.61 600.572 cv
1026.56 605.669 1029.84 609.801 1034.94 609.801 cv
cp
f
1094.37 609.801 mo
1099.46 609.801 1104.44 605.669 1105.49 600.572 cv
1106.54 595.476 1103.26 591.345 1098.16 591.345 cv
1093.06 591.345 1088.08 595.476 1087.04 600.572 cv
1085.99 605.669 1089.27 609.801 1094.37 609.801 cv
cp
f
1153.79 609.801 mo
1158.89 609.801 1163.87 605.669 1164.92 600.572 cv
1165.96 595.476 1162.68 591.345 1157.59 591.345 cv
1152.49 591.345 1147.51 595.476 1146.46 600.572 cv
1145.41 605.669 1148.7 609.801 1153.79 609.801 cv
cp
f
1213.22 609.801 mo
1218.31 609.801 1223.29 605.669 1224.34 600.572 cv
1225.39 595.476 1222.11 591.345 1217.01 591.345 cv
1211.91 591.345 1206.93 595.476 1205.89 600.572 cv
1204.84 605.669 1208.12 609.801 1213.22 609.801 cv
cp
f
1272.64 609.801 mo
1277.74 609.801 1282.72 605.669 1283.77 600.572 cv
1284.82 595.476 1281.53 591.345 1276.44 591.345 cv
1271.34 591.345 1266.36 595.476 1265.31 600.572 cv
1264.26 605.669 1267.55 609.801 1272.64 609.801 cv
cp
f
1332.07 609.801 mo
1337.16 609.801 1342.15 605.669 1343.19 600.572 cv
1344.24 595.476 1340.96 591.345 1335.86 591.345 cv
1330.77 591.345 1325.79 595.476 1324.74 600.572 cv
1323.69 605.669 1326.97 609.801 1332.07 609.801 cv
cp
f
1391.49 609.801 mo
1396.59 609.801 1401.57 605.669 1402.62 600.572 cv
1403.67 595.476 1400.38 591.345 1395.29 591.345 cv
1390.19 591.345 1385.21 595.476 1384.16 600.572 cv
1383.12 605.669 1386.4 609.801 1391.49 609.801 cv
cp
f
1450.92 609.801 mo
1456.02 609.801 1461 605.669 1462.04 600.572 cv
1463.09 595.476 1459.81 591.345 1454.71 591.345 cv
1449.62 591.345 1444.64 595.476 1443.59 600.572 cv
1442.54 605.669 1445.82 609.801 1450.92 609.801 cv
cp
f
1510.34 609.801 mo
1515.44 609.801 1520.42 605.669 1521.47 600.572 cv
1522.52 595.476 1519.24 591.345 1514.14 591.345 cv
1509.04 591.345 1504.06 595.476 1503.01 600.572 cv
1501.97 605.669 1505.25 609.801 1510.34 609.801 cv
cp
f
1569.77 609.801 mo
1574.87 609.801 1579.85 605.669 1580.9 600.572 cv
1581.94 595.476 1578.66 591.345 1573.57 591.345 cv
1568.47 591.345 1563.49 595.476 1562.44 600.572 cv
1561.39 605.669 1564.67 609.801 1569.77 609.801 cv
cp
f
1629.2 609.801 mo
1634.29 609.801 1639.27 605.669 1640.32 600.572 cv
1641.37 595.476 1638.09 591.345 1632.99 591.345 cv
1627.89 591.345 1622.91 595.476 1621.87 600.572 cv
1620.82 605.669 1624.1 609.801 1629.2 609.801 cv
cp
f
1688.62 609.801 mo
1693.72 609.801 1698.7 605.669 1699.75 600.572 cv
1700.79 595.476 1697.51 591.345 1692.42 591.345 cv
1687.32 591.345 1682.34 595.476 1681.29 600.572 cv
1680.24 605.669 1683.52 609.801 1688.62 609.801 cv
cp
f
1748.05 609.801 mo
1753.14 609.801 1758.12 605.669 1759.17 600.572 cv
1760.22 595.476 1756.94 591.345 1751.84 591.345 cv
1746.74 591.345 1741.76 595.476 1740.72 600.572 cv
1739.67 605.669 1742.95 609.801 1748.05 609.801 cv
cp
f
1807.47 609.801 mo
1812.57 609.801 1817.55 605.669 1818.6 600.572 cv
1819.65 595.476 1816.36 591.345 1811.27 591.345 cv
1806.17 591.345 1801.19 595.476 1800.14 600.572 cv
1799.09 605.669 1802.38 609.801 1807.47 609.801 cv
cp
f
428.468 669.227 mo
433.564 669.227 438.545 665.094 439.593 659.998 cv
440.641 654.901 437.358 650.769 432.263 650.769 cv
427.166 650.769 422.185 654.901 421.137 659.998 cv
420.089 665.094 423.371 669.227 428.468 669.227 cv
cp
f
487.893 669.227 mo
492.989 669.227 497.971 665.094 499.018 659.998 cv
500.066 654.901 496.784 650.769 491.687 650.769 cv
486.591 650.769 481.61 654.901 480.562 659.998 cv
479.515 665.094 482.797 669.227 487.893 669.227 cv
cp
f
547.318 669.227 mo
552.415 669.227 557.395 665.094 558.443 659.998 cv
559.492 654.901 556.21 650.769 551.113 650.769 cv
546.017 650.769 541.035 654.901 539.988 659.998 cv
538.939 665.094 542.222 669.227 547.318 669.227 cv
cp
f
606.744 669.227 mo
611.841 669.227 616.821 665.094 617.869 659.998 cv
618.917 654.901 615.635 650.769 610.538 650.769 cv
605.442 650.769 600.461 654.901 599.413 659.998 cv
598.365 665.094 601.647 669.227 606.744 669.227 cv
cp
f
666.169 669.227 mo
671.266 669.227 676.247 665.094 677.295 659.998 cv
678.343 654.901 675.06 650.769 669.964 650.769 cv
664.867 650.769 659.887 654.901 658.839 659.998 cv
657.791 665.094 661.073 669.227 666.169 669.227 cv
cp
f
725.595 669.227 mo
730.691 669.227 735.672 665.094 736.721 659.998 cv
737.768 654.901 734.486 650.769 729.39 650.769 cv
724.293 650.769 719.312 654.901 718.265 659.998 cv
717.217 665.094 720.499 669.227 725.595 669.227 cv
cp
f
785.02 669.227 mo
790.117 669.227 795.098 665.094 796.145 659.998 cv
797.193 654.901 793.911 650.769 788.815 650.769 cv
783.719 650.769 778.738 654.901 777.689 659.998 cv
776.643 665.094 779.924 669.227 785.02 669.227 cv
cp
f
844.446 669.227 mo
849.543 669.227 854.523 665.094 855.571 659.998 cv
856.619 654.901 853.337 650.769 848.241 650.769 cv
843.144 650.769 838.163 654.901 837.115 659.998 cv
836.067 665.094 839.35 669.227 844.446 669.227 cv
cp
f
903.872 669.227 mo
908.968 669.227 913.949 665.094 914.997 659.998 cv
916.045 654.901 912.763 650.769 907.666 650.769 cv
902.569 650.769 897.589 654.901 896.541 659.998 cv
895.493 665.094 898.775 669.227 903.872 669.227 cv
cp
f
963.297 669.227 mo
968.393 669.227 973.375 665.094 974.422 659.998 cv
975.471 654.901 972.188 650.769 967.092 650.769 cv
961.995 650.769 957.015 654.901 955.967 659.998 cv
954.918 665.094 958.2 669.227 963.297 669.227 cv
cp
f
1022.72 669.227 mo
1027.82 669.227 1032.8 665.094 1033.85 659.998 cv
1034.9 654.901 1031.61 650.769 1026.52 650.769 cv
1021.42 650.769 1016.44 654.901 1015.39 659.998 cv
1014.34 665.094 1017.63 669.227 1022.72 669.227 cv
cp
f
1082.15 669.227 mo
1087.24 669.227 1092.23 665.094 1093.27 659.998 cv
1094.32 654.901 1091.04 650.769 1085.94 650.769 cv
1080.85 650.769 1075.87 654.901 1074.82 659.998 cv
1073.77 665.094 1077.05 669.227 1082.15 669.227 cv
cp
f
1141.57 669.227 mo
1146.67 669.227 1151.65 665.094 1152.7 659.998 cv
1153.75 654.901 1150.46 650.769 1145.37 650.769 cv
1140.27 650.769 1135.29 654.901 1134.24 659.998 cv
1133.2 665.094 1136.48 669.227 1141.57 669.227 cv
cp
f
1201 669.227 mo
1206.1 669.227 1211.08 665.094 1212.12 659.998 cv
1213.17 654.901 1209.89 650.769 1204.79 650.769 cv
1199.7 650.769 1194.72 654.901 1193.67 659.998 cv
1192.62 665.094 1195.9 669.227 1201 669.227 cv
cp
f
1260.42 669.227 mo
1265.52 669.227 1270.5 665.094 1271.55 659.998 cv
1272.6 654.901 1269.32 650.769 1264.22 650.769 cv
1259.12 650.769 1254.14 654.901 1253.09 659.998 cv
1252.05 665.094 1255.33 669.227 1260.42 669.227 cv
cp
f
1319.85 669.227 mo
1324.95 669.227 1329.93 665.094 1330.98 659.998 cv
1332.02 654.901 1328.74 650.769 1323.64 650.769 cv
1318.55 650.769 1313.57 654.901 1312.52 659.998 cv
1311.47 665.094 1314.75 669.227 1319.85 669.227 cv
cp
f
1379.28 669.227 mo
1384.37 669.227 1389.35 665.094 1390.4 659.998 cv
1391.45 654.901 1388.17 650.769 1383.07 650.769 cv
1377.97 650.769 1372.99 654.901 1371.95 659.998 cv
1370.9 665.094 1374.18 669.227 1379.28 669.227 cv
cp
f
1438.7 669.227 mo
1443.8 669.227 1448.78 665.094 1449.83 659.998 cv
1450.87 654.901 1447.59 650.769 1442.5 650.769 cv
1437.4 650.769 1432.42 654.901 1431.37 659.998 cv
1430.32 665.094 1433.6 669.227 1438.7 669.227 cv
cp
f
1498.13 669.227 mo
1503.22 669.227 1508.2 665.094 1509.25 659.998 cv
1510.3 654.901 1507.02 650.769 1501.92 650.769 cv
1496.82 650.769 1491.84 654.901 1490.8 659.998 cv
1489.75 665.094 1493.03 669.227 1498.13 669.227 cv
cp
f
1557.55 669.227 mo
1562.65 669.227 1567.63 665.094 1568.68 659.998 cv
1569.72 654.901 1566.44 650.769 1561.35 650.769 cv
1556.25 650.769 1551.27 654.901 1550.22 659.998 cv
1549.17 665.094 1552.46 669.227 1557.55 669.227 cv
cp
f
1616.98 669.227 mo
1622.07 669.227 1627.05 665.094 1628.1 659.998 cv
1629.15 654.901 1625.87 650.769 1620.77 650.769 cv
1615.68 650.769 1610.7 654.901 1609.65 659.998 cv
1608.6 665.094 1611.88 669.227 1616.98 669.227 cv
cp
f
1676.4 669.227 mo
1681.5 669.227 1686.48 665.094 1687.53 659.998 cv
1688.58 654.901 1685.29 650.769 1680.2 650.769 cv
1675.1 650.769 1670.12 654.901 1669.07 659.998 cv
1668.02 665.094 1671.31 669.227 1676.4 669.227 cv
cp
f
1735.83 669.227 mo
1740.93 669.227 1745.91 665.094 1746.95 659.998 cv
1748 654.901 1744.72 650.769 1739.62 650.769 cv
1734.53 650.769 1729.55 654.901 1728.5 659.998 cv
1727.45 665.094 1730.73 669.227 1735.83 669.227 cv
cp
f
1795.25 669.227 mo
1800.35 669.227 1805.33 665.094 1806.38 659.998 cv
1807.43 654.901 1804.15 650.769 1799.05 650.769 cv
1793.95 650.769 1788.97 654.901 1787.92 659.998 cv
1786.88 665.094 1790.16 669.227 1795.25 669.227 cv
cp
f
416.249 728.651 mo
421.346 728.651 426.326 724.519 427.375 719.424 cv
428.423 714.327 425.141 710.195 420.044 710.195 cv
414.947 710.195 409.966 714.327 408.919 719.424 cv
407.87 724.519 411.152 728.651 416.249 728.651 cv
cp
f
475.675 728.651 mo
480.771 728.651 485.752 724.519 486.801 719.424 cv
487.848 714.327 484.565 710.195 479.469 710.195 cv
474.373 710.195 469.392 714.327 468.344 719.424 cv
467.296 724.519 470.578 728.651 475.675 728.651 cv
cp
f
535.101 728.651 mo
540.196 728.651 545.178 724.519 546.226 719.424 cv
547.273 714.327 543.991 710.195 538.894 710.195 cv
533.799 710.195 528.817 714.327 527.769 719.424 cv
526.722 724.519 530.004 728.651 535.101 728.651 cv
cp
f
594.526 728.651 mo
599.622 728.651 604.603 724.519 605.651 719.424 cv
606.699 714.327 603.417 710.195 598.32 710.195 cv
593.225 710.195 588.243 714.327 587.195 719.424 cv
586.147 724.519 589.43 728.651 594.526 728.651 cv
cp
f
653.951 728.651 mo
659.048 728.651 664.029 724.519 665.076 719.424 cv
666.125 714.327 662.843 710.195 657.746 710.195 cv
652.649 710.195 647.669 714.327 646.62 719.424 cv
645.573 724.519 648.854 728.651 653.951 728.651 cv
cp
f
713.377 728.651 mo
718.474 728.651 723.454 724.519 724.502 719.424 cv
725.55 714.327 722.268 710.195 717.172 710.195 cv
712.075 710.195 707.094 714.327 706.046 719.424 cv
704.998 724.519 708.28 728.651 713.377 728.651 cv
cp
f
772.803 728.651 mo
777.898 728.651 782.88 724.519 783.928 719.424 cv
784.976 714.327 781.693 710.195 776.597 710.195 cv
771.5 710.195 766.519 714.327 765.472 719.424 cv
764.424 724.519 767.706 728.651 772.803 728.651 cv
cp
f
832.227 728.651 mo
837.324 728.651 842.306 724.519 843.353 719.424 cv
844.401 714.327 841.119 710.195 836.022 710.195 cv
830.926 710.195 825.945 714.327 824.897 719.424 cv
823.849 724.519 827.131 728.651 832.227 728.651 cv
cp
f
891.653 728.651 mo
896.75 728.651 901.73 724.519 902.779 719.424 cv
903.826 714.327 900.544 710.195 895.448 710.195 cv
890.352 710.195 885.37 714.327 884.323 719.424 cv
883.274 724.519 886.557 728.651 891.653 728.651 cv
cp
f
951.079 728.651 mo
956.175 728.651 961.156 724.519 962.204 719.424 cv
963.252 714.327 959.97 710.195 954.873 710.195 cv
949.777 710.195 944.796 714.327 943.748 719.424 cv
942.7 724.519 945.982 728.651 951.079 728.651 cv
cp
f
1010.5 728.651 mo
1015.6 728.651 1020.58 724.519 1021.63 719.424 cv
1022.68 714.327 1019.4 710.195 1014.3 710.195 cv
1009.2 710.195 1004.22 714.327 1003.17 719.424 cv
1002.13 724.519 1005.41 728.651 1010.5 728.651 cv
cp
f
1069.93 728.651 mo
1075.03 728.651 1080.01 724.519 1081.05 719.424 cv
1082.1 714.327 1078.82 710.195 1073.72 710.195 cv
1068.63 710.195 1063.65 714.327 1062.6 719.424 cv
1061.55 724.519 1064.83 728.651 1069.93 728.651 cv
cp
f
1129.36 728.651 mo
1134.45 728.651 1139.43 724.519 1140.48 719.424 cv
1141.53 714.327 1138.25 710.195 1133.15 710.195 cv
1128.05 710.195 1123.07 714.327 1122.02 719.424 cv
1120.98 724.519 1124.26 728.651 1129.36 728.651 cv
cp
f
1188.78 728.651 mo
1193.88 728.651 1198.86 724.519 1199.91 719.424 cv
1200.95 714.327 1197.67 710.195 1192.58 710.195 cv
1187.48 710.195 1182.5 714.327 1181.45 719.424 cv
1180.4 724.519 1183.68 728.651 1188.78 728.651 cv
cp
f
1248.21 728.651 mo
1253.3 728.651 1258.28 724.519 1259.33 719.424 cv
1260.38 714.327 1257.1 710.195 1252 710.195 cv
1246.9 710.195 1241.92 714.327 1240.88 719.424 cv
1239.83 724.519 1243.11 728.651 1248.21 728.651 cv
cp
f
1307.63 728.651 mo
1312.73 728.651 1317.71 724.519 1318.76 719.424 cv
1319.8 714.327 1316.52 710.195 1311.43 710.195 cv
1306.33 710.195 1301.35 714.327 1300.3 719.424 cv
1299.25 724.519 1302.54 728.651 1307.63 728.651 cv
cp
f
1367.06 728.651 mo
1372.15 728.651 1377.13 724.519 1378.18 719.424 cv
1379.23 714.327 1375.95 710.195 1370.85 710.195 cv
1365.76 710.195 1360.77 714.327 1359.73 719.424 cv
1358.68 724.519 1361.96 728.651 1367.06 728.651 cv
cp
f
1426.48 728.651 mo
1431.58 728.651 1436.56 724.519 1437.61 719.424 cv
1438.66 714.327 1435.37 710.195 1430.28 710.195 cv
1425.18 710.195 1420.2 714.327 1419.15 719.424 cv
1418.1 724.519 1421.39 728.651 1426.48 728.651 cv
cp
f
1485.91 728.651 mo
1491 728.651 1495.99 724.519 1497.03 719.424 cv
1498.08 714.327 1494.8 710.195 1489.7 710.195 cv
1484.61 710.195 1479.63 714.327 1478.58 719.424 cv
1477.53 724.519 1480.81 728.651 1485.91 728.651 cv
cp
f
1545.33 728.651 mo
1550.43 728.651 1555.41 724.519 1556.46 719.424 cv
1557.51 714.327 1554.23 710.195 1549.13 710.195 cv
1544.03 710.195 1539.05 714.327 1538 719.424 cv
1536.95 724.519 1540.24 728.651 1545.33 728.651 cv
cp
f
1604.76 728.651 mo
1609.86 728.651 1614.84 724.519 1615.88 719.424 cv
1616.93 714.327 1613.65 710.195 1608.55 710.195 cv
1603.46 710.195 1598.48 714.327 1597.43 719.424 cv
1596.38 724.519 1599.66 728.651 1604.76 728.651 cv
cp
f
1664.18 728.651 mo
1669.28 728.651 1674.26 724.519 1675.31 719.424 cv
1676.36 714.327 1673.08 710.195 1667.98 710.195 cv
1662.88 710.195 1657.9 714.327 1656.85 719.424 cv
1655.81 724.519 1659.09 728.651 1664.18 728.651 cv
cp
f
1723.61 728.651 mo
1728.71 728.651 1733.69 724.519 1734.74 719.424 cv
1735.78 714.327 1732.5 710.195 1727.41 710.195 cv
1722.31 710.195 1717.33 714.327 1716.28 719.424 cv
1715.23 724.519 1718.51 728.651 1723.61 728.651 cv
cp
f
1783.04 728.651 mo
1788.13 728.651 1793.11 724.519 1794.16 719.424 cv
1795.21 714.327 1791.93 710.195 1786.83 710.195 cv
1781.73 710.195 1776.75 714.327 1775.7 719.424 cv
1774.66 724.519 1777.94 728.651 1783.04 728.651 cv
cp
f
404.031 788.077 mo
409.128 788.077 414.108 783.945 415.156 778.85 cv
416.204 773.753 412.922 769.621 407.826 769.621 cv
402.729 769.621 397.749 773.753 396.7 778.85 cv
395.653 783.945 398.935 788.077 404.031 788.077 cv
cp
f
463.457 788.077 mo
468.554 788.077 473.534 783.945 474.582 778.85 cv
475.63 773.753 472.348 769.621 467.252 769.621 cv
462.155 769.621 457.174 773.753 456.126 778.85 cv
455.078 783.945 458.36 788.077 463.457 788.077 cv
cp
f
522.882 788.077 mo
527.978 788.077 532.96 783.945 534.007 778.85 cv
535.056 773.753 531.773 769.621 526.677 769.621 cv
521.58 769.621 516.6 773.753 515.552 778.85 cv
514.504 783.945 517.785 788.077 522.882 788.077 cv
cp
f
582.308 788.077 mo
587.404 788.077 592.385 783.945 593.433 778.85 cv
594.48 773.753 591.199 769.621 586.102 769.621 cv
581.006 769.621 576.024 773.753 574.977 778.85 cv
573.929 783.945 577.211 788.077 582.308 788.077 cv
cp
f
641.733 788.077 mo
646.829 788.077 651.81 783.945 652.858 778.85 cv
653.906 773.753 650.624 769.621 645.527 769.621 cv
640.431 769.621 635.45 773.753 634.402 778.85 cv
633.354 783.945 636.637 788.077 641.733 788.077 cv
cp
f
701.158 788.077 mo
706.255 788.077 711.236 783.945 712.284 778.85 cv
713.332 773.753 710.05 769.621 704.953 769.621 cv
699.856 769.621 694.876 773.753 693.828 778.85 cv
692.78 783.945 696.062 788.077 701.158 788.077 cv
cp
f
760.584 788.077 mo
765.681 788.077 770.661 783.945 771.71 778.85 cv
772.757 773.753 769.475 769.621 764.379 769.621 cv
759.282 769.621 754.302 773.753 753.254 778.85 cv
752.206 783.945 755.488 788.077 760.584 788.077 cv
cp
f
820.01 788.077 mo
825.106 788.077 830.087 783.945 831.135 778.85 cv
832.183 773.753 828.9 769.621 823.805 769.621 cv
818.708 769.621 813.727 773.753 812.679 778.85 cv
811.632 783.945 814.913 788.077 820.01 788.077 cv
cp
f
879.435 788.077 mo
884.532 788.077 889.513 783.945 890.56 778.85 cv
891.608 773.753 888.326 769.621 883.23 769.621 cv
878.134 769.621 873.152 773.753 872.104 778.85 cv
871.057 783.945 874.339 788.077 879.435 788.077 cv
cp
f
938.86 788.077 mo
943.957 788.077 948.938 783.945 949.985 778.85 cv
951.034 773.753 947.752 769.621 942.655 769.621 cv
937.559 769.621 932.578 773.753 931.53 778.85 cv
930.482 783.945 933.765 788.077 938.86 788.077 cv
cp
f
998.286 788.077 mo
1003.38 788.077 1008.36 783.945 1009.41 778.85 cv
1010.46 773.753 1007.18 769.621 1002.08 769.621 cv
996.984 769.621 992.003 773.753 990.956 778.85 cv
989.907 783.945 993.189 788.077 998.286 788.077 cv
cp
f
1057.71 788.077 mo
1062.81 788.077 1067.79 783.945 1068.84 778.85 cv
1069.88 773.753 1066.6 769.621 1061.51 769.621 cv
1056.41 769.621 1051.43 773.753 1050.38 778.85 cv
1049.33 783.945 1052.62 788.077 1057.71 788.077 cv
cp
f
1117.14 788.077 mo
1122.23 788.077 1127.21 783.945 1128.26 778.85 cv
1129.31 773.753 1126.03 769.621 1120.93 769.621 cv
1115.83 769.621 1110.85 773.753 1109.81 778.85 cv
1108.76 783.945 1112.04 788.077 1117.14 788.077 cv
cp
f
1176.56 788.077 mo
1181.66 788.077 1186.64 783.945 1187.69 778.85 cv
1188.74 773.753 1185.45 769.621 1180.36 769.621 cv
1175.26 769.621 1170.28 773.753 1169.23 778.85 cv
1168.18 783.945 1171.47 788.077 1176.56 788.077 cv
cp
f
1235.99 788.077 mo
1241.08 788.077 1246.07 783.945 1247.11 778.85 cv
1248.16 773.753 1244.88 769.621 1239.78 769.621 cv
1234.69 769.621 1229.71 773.753 1228.66 778.85 cv
1227.61 783.945 1230.89 788.077 1235.99 788.077 cv
cp
f
1295.41 788.077 mo
1300.51 788.077 1305.49 783.945 1306.54 778.85 cv
1307.59 773.753 1304.3 769.621 1299.21 769.621 cv
1294.11 769.621 1289.13 773.753 1288.08 778.85 cv
1287.04 783.945 1290.32 788.077 1295.41 788.077 cv
cp
f
1354.84 788.077 mo
1359.94 788.077 1364.92 783.945 1365.96 778.85 cv
1367.01 773.753 1363.73 769.621 1358.63 769.621 cv
1353.54 769.621 1348.56 773.753 1347.51 778.85 cv
1346.46 783.945 1349.74 788.077 1354.84 788.077 cv
cp
f
1414.26 788.077 mo
1419.36 788.077 1424.34 783.945 1425.39 778.85 cv
1426.44 773.753 1423.16 769.621 1418.06 769.621 cv
1412.96 769.621 1407.98 773.753 1406.93 778.85 cv
1405.89 783.945 1409.17 788.077 1414.26 788.077 cv
cp
f
1473.69 788.077 mo
1478.79 788.077 1483.77 783.945 1484.82 778.85 cv
1485.86 773.753 1482.58 769.621 1477.49 769.621 cv
1472.39 769.621 1467.41 773.753 1466.36 778.85 cv
1465.31 783.945 1468.59 788.077 1473.69 788.077 cv
cp
f
1533.12 788.077 mo
1538.21 788.077 1543.19 783.945 1544.24 778.85 cv
1545.29 773.753 1542.01 769.621 1536.91 769.621 cv
1531.81 769.621 1526.83 773.753 1525.79 778.85 cv
1524.74 783.945 1528.02 788.077 1533.12 788.077 cv
cp
f
1592.54 788.077 mo
1597.64 788.077 1602.62 783.945 1603.67 778.85 cv
1604.71 773.753 1601.43 769.621 1596.34 769.621 cv
1591.24 769.621 1586.26 773.753 1585.21 778.85 cv
1584.16 783.945 1587.45 788.077 1592.54 788.077 cv
cp
f
1651.97 788.077 mo
1657.06 788.077 1662.04 783.945 1663.09 778.85 cv
1664.14 773.753 1660.86 769.621 1655.76 769.621 cv
1650.66 769.621 1645.68 773.753 1644.64 778.85 cv
1643.59 783.945 1646.87 788.077 1651.97 788.077 cv
cp
f
1711.39 788.077 mo
1716.49 788.077 1721.47 783.945 1722.52 778.85 cv
1723.57 773.753 1720.28 769.621 1715.19 769.621 cv
1710.09 769.621 1705.11 773.753 1704.06 778.85 cv
1703.01 783.945 1706.3 788.077 1711.39 788.077 cv
cp
f
1770.82 788.077 mo
1775.91 788.077 1780.9 783.945 1781.94 778.85 cv
1782.99 773.753 1779.71 769.621 1774.61 769.621 cv
1769.52 769.621 1764.54 773.753 1763.49 778.85 cv
1762.44 783.945 1765.72 788.077 1770.82 788.077 cv
cp
f
391.812 847.502 mo
396.909 847.502 401.891 843.371 402.938 838.274 cv
403.986 833.178 400.704 829.047 395.607 829.047 cv
390.511 829.047 385.53 833.178 384.482 838.274 cv
383.435 843.371 386.716 847.502 391.812 847.502 cv
cp
f
451.238 847.502 mo
456.335 847.502 461.315 843.371 462.364 838.274 cv
463.411 833.178 460.13 829.047 455.033 829.047 cv
449.936 829.047 444.955 833.178 443.908 838.274 cv
442.859 843.371 446.142 847.502 451.238 847.502 cv
cp
f
510.664 847.502 mo
515.76 847.502 520.741 843.371 521.79 838.274 cv
522.837 833.178 519.555 829.047 514.458 829.047 cv
509.362 829.047 504.381 833.178 503.333 838.274 cv
502.285 843.371 505.567 847.502 510.664 847.502 cv
cp
f
570.09 847.502 mo
575.185 847.502 580.167 843.371 581.215 838.274 cv
582.263 833.178 578.98 829.047 573.884 829.047 cv
568.788 829.047 563.807 833.178 562.759 838.274 cv
561.711 843.371 564.993 847.502 570.09 847.502 cv
cp
f
629.516 847.502 mo
634.611 847.502 639.593 843.371 640.641 838.274 cv
641.688 833.178 638.406 829.047 633.31 829.047 cv
628.214 829.047 623.232 833.178 622.185 838.274 cv
621.137 843.371 624.419 847.502 629.516 847.502 cv
cp
f
688.94 847.502 mo
694.037 847.502 699.018 843.371 700.065 838.274 cv
701.114 833.178 697.832 829.047 692.735 829.047 cv
687.639 829.047 682.658 833.178 681.609 838.274 cv
680.562 843.371 683.844 847.502 688.94 847.502 cv
cp
f
748.366 847.502 mo
753.463 847.502 758.443 843.371 759.491 838.274 cv
760.539 833.178 757.258 829.047 752.161 829.047 cv
747.064 829.047 742.083 833.178 741.035 838.274 cv
739.987 843.371 743.269 847.502 748.366 847.502 cv
cp
f
807.791 847.502 mo
812.888 847.502 817.869 843.371 818.917 838.274 cv
819.965 833.178 816.683 829.047 811.586 829.047 cv
806.489 829.047 801.509 833.178 800.461 838.274 cv
799.413 843.371 802.695 847.502 807.791 847.502 cv
cp
f
867.217 847.502 mo
872.313 847.502 877.294 843.371 878.343 838.274 cv
879.391 833.178 876.108 829.047 871.012 829.047 cv
865.915 829.047 860.934 833.178 859.887 838.274 cv
858.838 843.371 862.12 847.502 867.217 847.502 cv
cp
f
926.643 847.502 mo
931.738 847.502 936.72 843.371 937.768 838.274 cv
938.815 833.178 935.533 829.047 930.436 829.047 cv
925.341 829.047 920.359 833.178 919.311 838.274 cv
918.265 843.371 921.546 847.502 926.643 847.502 cv
cp
f
986.068 847.502 mo
991.164 847.502 996.145 843.371 997.193 838.274 cv
998.241 833.178 994.959 829.047 989.862 829.047 cv
984.767 829.047 979.785 833.178 978.737 838.274 cv
977.69 843.371 980.972 847.502 986.068 847.502 cv
cp
f
1045.49 847.502 mo
1050.59 847.502 1055.57 843.371 1056.62 838.274 cv
1057.67 833.178 1054.38 829.047 1049.29 829.047 cv
1044.19 829.047 1039.21 833.178 1038.16 838.274 cv
1037.12 843.371 1040.4 847.502 1045.49 847.502 cv
cp
f
1104.92 847.502 mo
1110.02 847.502 1115 843.371 1116.04 838.274 cv
1117.09 833.178 1113.81 829.047 1108.71 829.047 cv
1103.62 829.047 1098.64 833.178 1097.59 838.274 cv
1096.54 843.371 1099.82 847.502 1104.92 847.502 cv
cp
f
1164.34 847.502 mo
1169.44 847.502 1174.42 843.371 1175.47 838.274 cv
1176.52 833.178 1173.24 829.047 1168.14 829.047 cv
1163.04 829.047 1158.06 833.178 1157.01 838.274 cv
1155.97 843.371 1159.25 847.502 1164.34 847.502 cv
cp
f
1223.77 847.502 mo
1228.87 847.502 1233.85 843.371 1234.9 838.274 cv
1235.94 833.178 1232.66 829.047 1227.56 829.047 cv
1222.47 829.047 1217.49 833.178 1216.44 838.274 cv
1215.39 843.371 1218.67 847.502 1223.77 847.502 cv
cp
f
1283.2 847.502 mo
1288.29 847.502 1293.27 843.371 1294.32 838.274 cv
1295.37 833.178 1292.09 829.047 1286.99 829.047 cv
1281.89 829.047 1276.91 833.178 1275.87 838.274 cv
1274.82 843.371 1278.1 847.502 1283.2 847.502 cv
cp
f
1342.62 847.502 mo
1347.72 847.502 1352.7 843.371 1353.75 838.274 cv
1354.79 833.178 1351.51 829.047 1346.42 829.047 cv
1341.32 829.047 1336.34 833.178 1335.29 838.274 cv
1334.24 843.371 1337.52 847.502 1342.62 847.502 cv
cp
f
1402.05 847.502 mo
1407.14 847.502 1412.12 843.371 1413.17 838.274 cv
1414.22 833.178 1410.94 829.047 1405.84 829.047 cv
1400.74 829.047 1395.76 833.178 1394.72 838.274 cv
1393.67 843.371 1396.95 847.502 1402.05 847.502 cv
cp
f
1461.47 847.502 mo
1466.57 847.502 1471.55 843.371 1472.6 838.274 cv
1473.65 833.178 1470.36 829.047 1465.27 829.047 cv
1460.17 829.047 1455.19 833.178 1454.14 838.274 cv
1453.09 843.371 1456.38 847.502 1461.47 847.502 cv
cp
f
1520.9 847.502 mo
1525.99 847.502 1530.98 843.371 1532.02 838.274 cv
1533.07 833.178 1529.79 829.047 1524.69 829.047 cv
1519.6 829.047 1514.62 833.178 1513.57 838.274 cv
1512.52 843.371 1515.8 847.502 1520.9 847.502 cv
cp
f
1580.32 847.502 mo
1585.42 847.502 1590.4 843.371 1591.45 838.274 cv
1592.5 833.178 1589.21 829.047 1584.12 829.047 cv
1579.02 829.047 1574.04 833.178 1572.99 838.274 cv
1571.94 843.371 1575.23 847.502 1580.32 847.502 cv
cp
f
1639.75 847.502 mo
1644.84 847.502 1649.83 843.371 1650.87 838.274 cv
1651.92 833.178 1648.64 829.047 1643.54 829.047 cv
1638.45 829.047 1633.47 833.178 1632.42 838.274 cv
1631.37 843.371 1634.65 847.502 1639.75 847.502 cv
cp
f
1699.17 847.502 mo
1704.27 847.502 1709.25 843.371 1710.3 838.274 cv
1711.35 833.178 1708.07 829.047 1702.97 829.047 cv
1697.87 829.047 1692.89 833.178 1691.84 838.274 cv
1690.8 843.371 1694.08 847.502 1699.17 847.502 cv
cp
f
1758.6 847.502 mo
1763.7 847.502 1768.68 843.371 1769.73 838.274 cv
1770.77 833.178 1767.49 829.047 1762.39 829.047 cv
1757.3 829.047 1752.32 833.178 1751.27 838.274 cv
1750.22 843.371 1753.5 847.502 1758.6 847.502 cv
cp
f
1777.58 1415.09 mo
1775.71 1415.09 1773.88 1413.57 1773.5 1411.7 cv
1773.11 1409.83 1774.32 1408.32 1776.19 1408.32 cv
1778.06 1408.32 1779.89 1409.83 1780.27 1411.7 cv
1780.66 1413.57 1779.45 1415.09 1777.58 1415.09 cv
cp
.252415 .199252 .203769 0 cmyk
f
1755.77 1415.09 mo
1753.9 1415.09 1752.07 1413.57 1751.69 1411.7 cv
1751.3 1409.83 1752.51 1408.32 1754.38 1408.32 cv
1756.25 1408.32 1758.08 1409.83 1758.46 1411.7 cv
1758.85 1413.57 1757.64 1415.09 1755.77 1415.09 cv
cp
f
1733.96 1415.09 mo
1732.09 1415.09 1730.26 1413.57 1729.88 1411.7 cv
1729.49 1409.83 1730.7 1408.32 1732.57 1408.32 cv
1734.44 1408.32 1736.27 1409.83 1736.65 1411.7 cv
1737.04 1413.57 1735.83 1415.09 1733.96 1415.09 cv
cp
f
1712.15 1415.09 mo
1710.28 1415.09 1708.45 1413.57 1708.07 1411.7 cv
1707.68 1409.83 1708.89 1408.32 1710.76 1408.32 cv
1712.63 1408.32 1714.46 1409.83 1714.84 1411.7 cv
1715.23 1413.57 1714.02 1415.09 1712.15 1415.09 cv
cp
f
1690.34 1415.09 mo
1688.47 1415.09 1686.64 1413.57 1686.26 1411.7 cv
1685.87 1409.83 1687.08 1408.32 1688.95 1408.32 cv
1690.82 1408.32 1692.65 1409.83 1693.03 1411.7 cv
1693.42 1413.57 1692.21 1415.09 1690.34 1415.09 cv
cp
f
1668.53 1415.09 mo
1666.66 1415.09 1664.83 1413.57 1664.45 1411.7 cv
1664.07 1409.83 1665.27 1408.32 1667.14 1408.32 cv
1669.01 1408.32 1670.84 1409.83 1671.22 1411.7 cv
1671.61 1413.57 1670.4 1415.09 1668.53 1415.09 cv
cp
f
1646.72 1415.09 mo
1644.85 1415.09 1643.03 1413.57 1642.64 1411.7 cv
1642.26 1409.83 1643.46 1408.32 1645.33 1408.32 cv
1647.2 1408.32 1649.03 1409.83 1649.41 1411.7 cv
1649.8 1413.57 1648.59 1415.09 1646.72 1415.09 cv
cp
f
1624.91 1415.09 mo
1623.04 1415.09 1621.22 1413.57 1620.83 1411.7 cv
1620.45 1409.83 1621.65 1408.32 1623.52 1408.32 cv
1625.39 1408.32 1627.22 1409.83 1627.6 1411.7 cv
1627.99 1413.57 1626.78 1415.09 1624.91 1415.09 cv
cp
f
1603.1 1415.09 mo
1601.23 1415.09 1599.41 1413.57 1599.02 1411.7 cv
1598.64 1409.83 1599.84 1408.32 1601.71 1408.32 cv
1603.58 1408.32 1605.41 1409.83 1605.79 1411.7 cv
1606.18 1413.57 1604.98 1415.09 1603.1 1415.09 cv
cp
f
1581.29 1415.09 mo
1579.42 1415.09 1577.6 1413.57 1577.21 1411.7 cv
1576.83 1409.83 1578.03 1408.32 1579.9 1408.32 cv
1581.77 1408.32 1583.6 1409.83 1583.99 1411.7 cv
1584.37 1413.57 1583.16 1415.09 1581.29 1415.09 cv
cp
f
1559.49 1415.09 mo
1557.62 1415.09 1555.79 1413.57 1555.4 1411.7 cv
1555.02 1409.83 1556.22 1408.32 1558.09 1408.32 cv
1559.96 1408.32 1561.79 1409.83 1562.18 1411.7 cv
1562.56 1413.57 1561.36 1415.09 1559.49 1415.09 cv
cp
f
1537.68 1415.09 mo
1535.81 1415.09 1533.98 1413.57 1533.59 1411.7 cv
1533.21 1409.83 1534.41 1408.32 1536.28 1408.32 cv
1538.15 1408.32 1539.98 1409.83 1540.37 1411.7 cv
1540.75 1413.57 1539.55 1415.09 1537.68 1415.09 cv
cp
f
1515.87 1415.09 mo
1514 1415.09 1512.17 1413.57 1511.78 1411.7 cv
1511.4 1409.83 1512.6 1408.32 1514.47 1408.32 cv
1516.34 1408.32 1518.17 1409.83 1518.56 1411.7 cv
1518.94 1413.57 1517.74 1415.09 1515.87 1415.09 cv
cp
f
1494.06 1415.09 mo
1492.19 1415.09 1490.36 1413.57 1489.97 1411.7 cv
1489.59 1409.83 1490.79 1408.32 1492.66 1408.32 cv
1494.53 1408.32 1496.36 1409.83 1496.75 1411.7 cv
1497.13 1413.57 1495.93 1415.09 1494.06 1415.09 cv
cp
f
1472.25 1415.09 mo
1470.38 1415.09 1468.55 1413.57 1468.16 1411.7 cv
1467.78 1409.83 1468.98 1408.32 1470.85 1408.32 cv
1472.72 1408.32 1474.55 1409.83 1474.94 1411.7 cv
1475.32 1413.57 1474.12 1415.09 1472.25 1415.09 cv
cp
f
1450.44 1415.09 mo
1448.57 1415.09 1446.74 1413.57 1446.35 1411.7 cv
1445.97 1409.83 1447.17 1408.32 1449.04 1408.32 cv
1450.92 1408.32 1452.74 1409.83 1453.13 1411.7 cv
1453.51 1413.57 1452.31 1415.09 1450.44 1415.09 cv
cp
f
1428.63 1415.09 mo
1426.76 1415.09 1424.93 1413.57 1424.54 1411.7 cv
1424.16 1409.83 1425.37 1408.32 1427.24 1408.32 cv
1429.11 1408.32 1430.93 1409.83 1431.32 1411.7 cv
1431.7 1413.57 1430.5 1415.09 1428.63 1415.09 cv
cp
f
1406.82 1415.09 mo
1404.95 1415.09 1403.12 1413.57 1402.74 1411.7 cv
1402.35 1409.83 1403.56 1408.32 1405.43 1408.32 cv
1407.3 1408.32 1409.12 1409.83 1409.51 1411.7 cv
1409.89 1413.57 1408.69 1415.09 1406.82 1415.09 cv
cp
f
1385.01 1415.09 mo
1383.14 1415.09 1381.31 1413.57 1380.93 1411.7 cv
1380.54 1409.83 1381.75 1408.32 1383.62 1408.32 cv
1385.49 1408.32 1387.31 1409.83 1387.7 1411.7 cv
1388.08 1413.57 1386.88 1415.09 1385.01 1415.09 cv
cp
f
1363.2 1415.09 mo
1361.33 1415.09 1359.5 1413.57 1359.12 1411.7 cv
1358.73 1409.83 1359.94 1408.32 1361.81 1408.32 cv
1363.68 1408.32 1365.5 1409.83 1365.89 1411.7 cv
1366.27 1413.57 1365.07 1415.09 1363.2 1415.09 cv
cp
f
1341.39 1415.09 mo
1339.52 1415.09 1337.69 1413.57 1337.31 1411.7 cv
1336.92 1409.83 1338.13 1408.32 1340 1408.32 cv
1341.87 1408.32 1343.7 1409.83 1344.08 1411.7 cv
1344.46 1413.57 1343.26 1415.09 1341.39 1415.09 cv
cp
f
1319.58 1415.09 mo
1317.71 1415.09 1315.88 1413.57 1315.5 1411.7 cv
1315.11 1409.83 1316.32 1408.32 1318.19 1408.32 cv
1320.06 1408.32 1321.89 1409.83 1322.27 1411.7 cv
1322.66 1413.57 1321.45 1415.09 1319.58 1415.09 cv
cp
f
1297.77 1415.09 mo
1295.9 1415.09 1294.07 1413.57 1293.69 1411.7 cv
1293.3 1409.83 1294.51 1408.32 1296.38 1408.32 cv
1298.25 1408.32 1300.08 1409.83 1300.46 1411.7 cv
1300.85 1413.57 1299.64 1415.09 1297.77 1415.09 cv
cp
f
1275.96 1415.09 mo
1274.09 1415.09 1272.26 1413.57 1271.88 1411.7 cv
1271.49 1409.83 1272.7 1408.32 1274.57 1408.32 cv
1276.44 1408.32 1278.27 1409.83 1278.65 1411.7 cv
1279.04 1413.57 1277.83 1415.09 1275.96 1415.09 cv
cp
f
1782.07 1436.9 mo
1780.2 1436.9 1778.37 1435.38 1777.98 1433.51 cv
1777.6 1431.64 1778.8 1430.13 1780.67 1430.13 cv
1782.54 1430.13 1784.37 1431.64 1784.76 1433.51 cv
1785.14 1435.38 1783.94 1436.9 1782.07 1436.9 cv
cp
f
1760.26 1436.9 mo
1758.38 1436.9 1756.56 1435.38 1756.17 1433.51 cv
1755.79 1431.64 1756.99 1430.13 1758.86 1430.13 cv
1760.73 1430.13 1762.56 1431.64 1762.95 1433.51 cv
1763.33 1435.38 1762.13 1436.9 1760.26 1436.9 cv
cp
f
1738.45 1436.9 mo
1736.58 1436.9 1734.75 1435.38 1734.36 1433.51 cv
1733.98 1431.64 1735.18 1430.13 1737.05 1430.13 cv
1738.92 1430.13 1740.75 1431.64 1741.14 1433.51 cv
1741.52 1435.38 1740.32 1436.9 1738.45 1436.9 cv
cp
f
1716.64 1436.9 mo
1714.77 1436.9 1712.94 1435.38 1712.55 1433.51 cv
1712.17 1431.64 1713.37 1430.13 1715.24 1430.13 cv
1717.11 1430.13 1718.94 1431.64 1719.33 1433.51 cv
1719.71 1435.38 1718.51 1436.9 1716.64 1436.9 cv
cp
f
1694.83 1436.9 mo
1692.96 1436.9 1691.13 1435.38 1690.74 1433.51 cv
1690.36 1431.64 1691.56 1430.13 1693.43 1430.13 cv
1695.3 1430.13 1697.13 1431.64 1697.52 1433.51 cv
1697.9 1435.38 1696.7 1436.9 1694.83 1436.9 cv
cp
f
1673.02 1436.9 mo
1671.15 1436.9 1669.32 1435.38 1668.93 1433.51 cv
1668.55 1431.64 1669.75 1430.13 1671.62 1430.13 cv
1673.49 1430.13 1675.32 1431.64 1675.71 1433.51 cv
1676.09 1435.38 1674.89 1436.9 1673.02 1436.9 cv
cp
f
1651.21 1436.9 mo
1649.34 1436.9 1647.51 1435.38 1647.12 1433.51 cv
1646.74 1431.64 1647.94 1430.13 1649.81 1430.13 cv
1651.69 1430.13 1653.51 1431.64 1653.9 1433.51 cv
1654.28 1435.38 1653.08 1436.9 1651.21 1436.9 cv
cp
f
1629.4 1436.9 mo
1627.53 1436.9 1625.7 1435.38 1625.32 1433.51 cv
1624.93 1431.64 1626.14 1430.13 1628.01 1430.13 cv
1629.88 1430.13 1631.7 1431.64 1632.09 1433.51 cv
1632.47 1435.38 1631.27 1436.9 1629.4 1436.9 cv
cp
f
1607.59 1436.9 mo
1605.72 1436.9 1603.89 1435.38 1603.5 1433.51 cv
1603.12 1431.64 1604.33 1430.13 1606.2 1430.13 cv
1608.07 1430.13 1609.89 1431.64 1610.28 1433.51 cv
1610.66 1435.38 1609.46 1436.9 1607.59 1436.9 cv
cp
f
1585.78 1436.9 mo
1583.91 1436.9 1582.08 1435.38 1581.7 1433.51 cv
1581.31 1431.64 1582.52 1430.13 1584.39 1430.13 cv
1586.26 1430.13 1588.08 1431.64 1588.47 1433.51 cv
1588.85 1435.38 1587.65 1436.9 1585.78 1436.9 cv
cp
f
1563.97 1436.9 mo
1562.1 1436.9 1560.27 1435.38 1559.89 1433.51 cv
1559.5 1431.64 1560.71 1430.13 1562.58 1430.13 cv
1564.45 1430.13 1566.28 1431.64 1566.66 1433.51 cv
1567.04 1435.38 1565.84 1436.9 1563.97 1436.9 cv
cp
f
1542.16 1436.9 mo
1540.29 1436.9 1538.46 1435.38 1538.08 1433.51 cv
1537.69 1431.64 1538.9 1430.13 1540.77 1430.13 cv
1542.64 1430.13 1544.47 1431.64 1544.85 1433.51 cv
1545.24 1435.38 1544.03 1436.9 1542.16 1436.9 cv
cp
f
1520.35 1436.9 mo
1518.48 1436.9 1516.65 1435.38 1516.27 1433.51 cv
1515.88 1431.64 1517.09 1430.13 1518.96 1430.13 cv
1520.83 1430.13 1522.66 1431.64 1523.04 1433.51 cv
1523.42 1435.38 1522.22 1436.9 1520.35 1436.9 cv
cp
f
1498.54 1436.9 mo
1496.67 1436.9 1494.84 1435.38 1494.46 1433.51 cv
1494.07 1431.64 1495.28 1430.13 1497.15 1430.13 cv
1499.02 1430.13 1500.85 1431.64 1501.23 1433.51 cv
1501.62 1435.38 1500.41 1436.9 1498.54 1436.9 cv
cp
f
1476.73 1436.9 mo
1474.86 1436.9 1473.03 1435.38 1472.65 1433.51 cv
1472.26 1431.64 1473.47 1430.13 1475.34 1430.13 cv
1477.21 1430.13 1479.04 1431.64 1479.42 1433.51 cv
1479.81 1435.38 1478.6 1436.9 1476.73 1436.9 cv
cp
f
1454.92 1436.9 mo
1453.05 1436.9 1451.22 1435.38 1450.84 1433.51 cv
1450.45 1431.64 1451.66 1430.13 1453.53 1430.13 cv
1455.4 1430.13 1457.23 1431.64 1457.61 1433.51 cv
1458 1435.38 1456.79 1436.9 1454.92 1436.9 cv
cp
f
1433.11 1436.9 mo
1431.24 1436.9 1429.41 1435.38 1429.03 1433.51 cv
1428.64 1431.64 1429.85 1430.13 1431.72 1430.13 cv
1433.59 1430.13 1435.42 1431.64 1435.8 1433.51 cv
1436.19 1435.38 1434.98 1436.9 1433.11 1436.9 cv
cp
f
1411.3 1436.9 mo
1409.43 1436.9 1407.6 1435.38 1407.22 1433.51 cv
1406.83 1431.64 1408.04 1430.13 1409.91 1430.13 cv
1411.78 1430.13 1413.61 1431.64 1413.99 1433.51 cv
1414.38 1435.38 1413.17 1436.9 1411.3 1436.9 cv
cp
f
1389.49 1436.9 mo
1387.62 1436.9 1385.79 1435.38 1385.41 1433.51 cv
1385.03 1431.64 1386.23 1430.13 1388.1 1430.13 cv
1389.97 1430.13 1391.8 1431.64 1392.18 1433.51 cv
1392.57 1435.38 1391.36 1436.9 1389.49 1436.9 cv
cp
f
1367.68 1436.9 mo
1365.81 1436.9 1363.99 1435.38 1363.6 1433.51 cv
1363.22 1431.64 1364.42 1430.13 1366.29 1430.13 cv
1368.16 1430.13 1369.99 1431.64 1370.37 1433.51 cv
1370.76 1435.38 1369.55 1436.9 1367.68 1436.9 cv
cp
f
1345.87 1436.9 mo
1344 1436.9 1342.18 1435.38 1341.79 1433.51 cv
1341.41 1431.64 1342.61 1430.13 1344.48 1430.13 cv
1346.35 1430.13 1348.18 1431.64 1348.56 1433.51 cv
1348.95 1435.38 1347.74 1436.9 1345.87 1436.9 cv
cp
f
1324.06 1436.9 mo
1322.19 1436.9 1320.37 1435.38 1319.98 1433.51 cv
1319.6 1431.64 1320.8 1430.13 1322.67 1430.13 cv
1324.54 1430.13 1326.37 1431.64 1326.75 1433.51 cv
1327.14 1435.38 1325.94 1436.9 1324.06 1436.9 cv
cp
f
1302.25 1436.9 mo
1300.38 1436.9 1298.56 1435.38 1298.17 1433.51 cv
1297.79 1431.64 1298.99 1430.13 1300.86 1430.13 cv
1302.73 1430.13 1304.56 1431.64 1304.95 1433.51 cv
1305.33 1435.38 1304.12 1436.9 1302.25 1436.9 cv
cp
f
1280.45 1436.9 mo
1278.58 1436.9 1276.75 1435.38 1276.36 1433.51 cv
1275.98 1431.64 1277.18 1430.13 1279.05 1430.13 cv
1280.92 1430.13 1282.75 1431.64 1283.14 1433.51 cv
1283.52 1435.38 1282.32 1436.9 1280.45 1436.9 cv
cp
f
1786.55 1458.71 mo
1784.68 1458.71 1782.85 1457.19 1782.47 1455.32 cv
1782.08 1453.45 1783.29 1451.94 1785.16 1451.94 cv
1787.03 1451.94 1788.86 1453.45 1789.24 1455.32 cv
1789.62 1457.19 1788.42 1458.71 1786.55 1458.71 cv
cp
f
1764.74 1458.71 mo
1762.87 1458.71 1761.04 1457.19 1760.66 1455.32 cv
1760.27 1453.45 1761.48 1451.94 1763.35 1451.94 cv
1765.22 1451.94 1767.05 1453.45 1767.43 1455.32 cv
1767.81 1457.19 1766.61 1458.71 1764.74 1458.71 cv
cp
f
1742.93 1458.71 mo
1741.06 1458.71 1739.23 1457.19 1738.85 1455.32 cv
1738.46 1453.45 1739.67 1451.94 1741.54 1451.94 cv
1743.41 1451.94 1745.24 1453.45 1745.62 1455.32 cv
1746.01 1457.19 1744.8 1458.71 1742.93 1458.71 cv
cp
f
1721.12 1458.71 mo
1719.25 1458.71 1717.42 1457.19 1717.04 1455.32 cv
1716.65 1453.45 1717.86 1451.94 1719.73 1451.94 cv
1721.6 1451.94 1723.43 1453.45 1723.81 1455.32 cv
1724.2 1457.19 1722.99 1458.71 1721.12 1458.71 cv
cp
f
1699.31 1458.71 mo
1697.44 1458.71 1695.61 1457.19 1695.23 1455.32 cv
1694.84 1453.45 1696.05 1451.94 1697.92 1451.94 cv
1699.79 1451.94 1701.62 1453.45 1702 1455.32 cv
1702.39 1457.19 1701.18 1458.71 1699.31 1458.71 cv
cp
f
1677.5 1458.71 mo
1675.63 1458.71 1673.8 1457.19 1673.42 1455.32 cv
1673.03 1453.45 1674.24 1451.94 1676.11 1451.94 cv
1677.98 1451.94 1679.81 1453.45 1680.19 1455.32 cv
1680.58 1457.19 1679.37 1458.71 1677.5 1458.71 cv
cp
f
1655.69 1458.71 mo
1653.82 1458.71 1651.99 1457.19 1651.61 1455.32 cv
1651.22 1453.45 1652.43 1451.94 1654.3 1451.94 cv
1656.17 1451.94 1658 1453.45 1658.38 1455.32 cv
1658.77 1457.19 1657.56 1458.71 1655.69 1458.71 cv
cp
f
1633.88 1458.71 mo
1632.01 1458.71 1630.18 1457.19 1629.8 1455.32 cv
1629.41 1453.45 1630.62 1451.94 1632.49 1451.94 cv
1634.36 1451.94 1636.19 1453.45 1636.57 1455.32 cv
1636.96 1457.19 1635.75 1458.71 1633.88 1458.71 cv
cp
f
1612.07 1458.71 mo
1610.2 1458.71 1608.37 1457.19 1607.99 1455.32 cv
1607.61 1453.45 1608.81 1451.94 1610.68 1451.94 cv
1612.55 1451.94 1614.38 1453.45 1614.76 1455.32 cv
1615.15 1457.19 1613.94 1458.71 1612.07 1458.71 cv
cp
f
1590.26 1458.71 mo
1588.39 1458.71 1586.56 1457.19 1586.18 1455.32 cv
1585.8 1453.45 1587 1451.94 1588.87 1451.94 cv
1590.74 1451.94 1592.57 1453.45 1592.95 1455.32 cv
1593.34 1457.19 1592.13 1458.71 1590.26 1458.71 cv
cp
f
1568.45 1458.71 mo
1566.58 1458.71 1564.75 1457.19 1564.37 1455.32 cv
1563.99 1453.45 1565.19 1451.94 1567.06 1451.94 cv
1568.93 1451.94 1570.76 1453.45 1571.14 1455.32 cv
1571.53 1457.19 1570.32 1458.71 1568.45 1458.71 cv
cp
f
1546.64 1458.71 mo
1544.77 1458.71 1542.95 1457.19 1542.56 1455.32 cv
1542.18 1453.45 1543.38 1451.94 1545.25 1451.94 cv
1547.12 1451.94 1548.95 1453.45 1549.33 1455.32 cv
1549.72 1457.19 1548.51 1458.71 1546.64 1458.71 cv
cp
f
1524.83 1458.71 mo
1522.96 1458.71 1521.14 1457.19 1520.75 1455.32 cv
1520.37 1453.45 1521.57 1451.94 1523.44 1451.94 cv
1525.31 1451.94 1527.14 1453.45 1527.53 1455.32 cv
1527.91 1457.19 1526.7 1458.71 1524.83 1458.71 cv
cp
f
1503.03 1458.71 mo
1501.15 1458.71 1499.33 1457.19 1498.94 1455.32 cv
1498.56 1453.45 1499.76 1451.94 1501.63 1451.94 cv
1503.5 1451.94 1505.33 1453.45 1505.71 1455.32 cv
1506.1 1457.19 1504.9 1458.71 1503.03 1458.71 cv
cp
f
1481.22 1458.71 mo
1479.34 1458.71 1477.52 1457.19 1477.13 1455.32 cv
1476.75 1453.45 1477.95 1451.94 1479.82 1451.94 cv
1481.69 1451.94 1483.52 1453.45 1483.91 1455.32 cv
1484.29 1457.19 1483.09 1458.71 1481.22 1458.71 cv
cp
f
1459.41 1458.71 mo
1457.54 1458.71 1455.71 1457.19 1455.32 1455.32 cv
1454.94 1453.45 1456.14 1451.94 1458.01 1451.94 cv
1459.88 1451.94 1461.71 1453.45 1462.1 1455.32 cv
1462.48 1457.19 1461.28 1458.71 1459.41 1458.71 cv
cp
f
1437.6 1458.71 mo
1435.73 1458.71 1433.9 1457.19 1433.51 1455.32 cv
1433.13 1453.45 1434.33 1451.94 1436.2 1451.94 cv
1438.07 1451.94 1439.9 1453.45 1440.29 1455.32 cv
1440.67 1457.19 1439.47 1458.71 1437.6 1458.71 cv
cp
f
1415.79 1458.71 mo
1413.92 1458.71 1412.09 1457.19 1411.7 1455.32 cv
1411.32 1453.45 1412.52 1451.94 1414.39 1451.94 cv
1416.26 1451.94 1418.09 1453.45 1418.48 1455.32 cv
1418.86 1457.19 1417.66 1458.71 1415.79 1458.71 cv
cp
f
1393.98 1458.71 mo
1392.11 1458.71 1390.28 1457.19 1389.89 1455.32 cv
1389.51 1453.45 1390.71 1451.94 1392.58 1451.94 cv
1394.45 1451.94 1396.28 1453.45 1396.67 1455.32 cv
1397.05 1457.19 1395.85 1458.71 1393.98 1458.71 cv
cp
f
1372.17 1458.71 mo
1370.3 1458.71 1368.47 1457.19 1368.08 1455.32 cv
1367.7 1453.45 1368.9 1451.94 1370.77 1451.94 cv
1372.65 1451.94 1374.47 1453.45 1374.86 1455.32 cv
1375.24 1457.19 1374.04 1458.71 1372.17 1458.71 cv
cp
f
1350.36 1458.71 mo
1348.49 1458.71 1346.66 1457.19 1346.28 1455.32 cv
1345.89 1453.45 1347.09 1451.94 1348.97 1451.94 cv
1350.84 1451.94 1352.66 1453.45 1353.05 1455.32 cv
1353.43 1457.19 1352.23 1458.71 1350.36 1458.71 cv
cp
f
1328.55 1458.71 mo
1326.68 1458.71 1324.85 1457.19 1324.46 1455.32 cv
1324.08 1453.45 1325.29 1451.94 1327.16 1451.94 cv
1329.03 1451.94 1330.85 1453.45 1331.24 1455.32 cv
1331.62 1457.19 1330.42 1458.71 1328.55 1458.71 cv
cp
f
1306.74 1458.71 mo
1304.87 1458.71 1303.04 1457.19 1302.66 1455.32 cv
1302.27 1453.45 1303.48 1451.94 1305.35 1451.94 cv
1307.22 1451.94 1309.04 1453.45 1309.43 1455.32 cv
1309.81 1457.19 1308.61 1458.71 1306.74 1458.71 cv
cp
f
1284.93 1458.71 mo
1283.06 1458.71 1281.23 1457.19 1280.85 1455.32 cv
1280.46 1453.45 1281.67 1451.94 1283.54 1451.94 cv
1285.41 1451.94 1287.24 1453.45 1287.62 1455.32 cv
1288 1457.19 1286.8 1458.71 1284.93 1458.71 cv
cp
f
1791.03 1480.52 mo
1789.16 1480.52 1787.33 1479 1786.95 1477.13 cv
1786.57 1475.26 1787.77 1473.74 1789.64 1473.74 cv
1791.51 1473.74 1793.34 1475.26 1793.72 1477.13 cv
1794.11 1479 1792.9 1480.52 1791.03 1480.52 cv
cp
f
1769.22 1480.52 mo
1767.35 1480.52 1765.53 1479 1765.14 1477.13 cv
1764.76 1475.26 1765.96 1473.74 1767.83 1473.74 cv
1769.7 1473.74 1771.53 1475.26 1771.91 1477.13 cv
1772.3 1479 1771.09 1480.52 1769.22 1480.52 cv
cp
f
1747.41 1480.52 mo
1745.54 1480.52 1743.72 1479 1743.33 1477.13 cv
1742.95 1475.26 1744.15 1473.74 1746.02 1473.74 cv
1747.89 1473.74 1749.72 1475.26 1750.1 1477.13 cv
1750.49 1479 1749.29 1480.52 1747.41 1480.52 cv
cp
f
1725.6 1480.52 mo
1723.73 1480.52 1721.91 1479 1721.52 1477.13 cv
1721.14 1475.26 1722.34 1473.74 1724.21 1473.74 cv
1726.08 1473.74 1727.91 1475.26 1728.3 1477.13 cv
1728.68 1479 1727.48 1480.52 1725.6 1480.52 cv
cp
f
1703.79 1480.52 mo
1701.92 1480.52 1700.1 1479 1699.71 1477.13 cv
1699.33 1475.26 1700.53 1473.74 1702.4 1473.74 cv
1704.27 1473.74 1706.1 1475.26 1706.49 1477.13 cv
1706.87 1479 1705.66 1480.52 1703.79 1480.52 cv
cp
f
1681.99 1480.52 mo
1680.12 1480.52 1678.29 1479 1677.9 1477.13 cv
1677.52 1475.26 1678.72 1473.74 1680.59 1473.74 cv
1682.46 1473.74 1684.29 1475.26 1684.68 1477.13 cv
1685.06 1479 1683.86 1480.52 1681.99 1480.52 cv
cp
f
1660.18 1480.52 mo
1658.31 1480.52 1656.48 1479 1656.09 1477.13 cv
1655.71 1475.26 1656.91 1473.74 1658.78 1473.74 cv
1660.65 1473.74 1662.48 1475.26 1662.87 1477.13 cv
1663.25 1479 1662.05 1480.52 1660.18 1480.52 cv
cp
f
1638.37 1480.52 mo
1636.5 1480.52 1634.67 1479 1634.28 1477.13 cv
1633.9 1475.26 1635.1 1473.74 1636.97 1473.74 cv
1638.84 1473.74 1640.67 1475.26 1641.06 1477.13 cv
1641.44 1479 1640.24 1480.52 1638.37 1480.52 cv
cp
f
1616.56 1480.52 mo
1614.69 1480.52 1612.86 1479 1612.47 1477.13 cv
1612.09 1475.26 1613.29 1473.74 1615.16 1473.74 cv
1617.03 1473.74 1618.86 1475.26 1619.25 1477.13 cv
1619.63 1479 1618.43 1480.52 1616.56 1480.52 cv
cp
f
1594.75 1480.52 mo
1592.88 1480.52 1591.05 1479 1590.66 1477.13 cv
1590.28 1475.26 1591.48 1473.74 1593.35 1473.74 cv
1595.23 1473.74 1597.05 1475.26 1597.44 1477.13 cv
1597.82 1479 1596.62 1480.52 1594.75 1480.52 cv
cp
f
1572.94 1480.52 mo
1571.07 1480.52 1569.24 1479 1568.85 1477.13 cv
1568.47 1475.26 1569.67 1473.74 1571.54 1473.74 cv
1573.42 1473.74 1575.24 1475.26 1575.63 1477.13 cv
1576.01 1479 1574.81 1480.52 1572.94 1480.52 cv
cp
f
1551.13 1480.52 mo
1549.26 1480.52 1547.43 1479 1547.05 1477.13 cv
1546.66 1475.26 1547.87 1473.74 1549.74 1473.74 cv
1551.61 1473.74 1553.43 1475.26 1553.82 1477.13 cv
1554.2 1479 1553 1480.52 1551.13 1480.52 cv
cp
f
1529.32 1480.52 mo
1527.45 1480.52 1525.62 1479 1525.24 1477.13 cv
1524.85 1475.26 1526.06 1473.74 1527.93 1473.74 cv
1529.8 1473.74 1531.62 1475.26 1532.01 1477.13 cv
1532.39 1479 1531.19 1480.52 1529.32 1480.52 cv
cp
f
1507.51 1480.52 mo
1505.64 1480.52 1503.81 1479 1503.43 1477.13 cv
1503.04 1475.26 1504.25 1473.74 1506.12 1473.74 cv
1507.99 1473.74 1509.82 1475.26 1510.2 1477.13 cv
1510.58 1479 1509.38 1480.52 1507.51 1480.52 cv
cp
f
1485.7 1480.52 mo
1483.83 1480.52 1482 1479 1481.62 1477.13 cv
1481.23 1475.26 1482.44 1473.74 1484.31 1473.74 cv
1486.18 1473.74 1488 1475.26 1488.39 1477.13 cv
1488.77 1479 1487.57 1480.52 1485.7 1480.52 cv
cp
f
1463.89 1480.52 mo
1462.02 1480.52 1460.19 1479 1459.81 1477.13 cv
1459.42 1475.26 1460.63 1473.74 1462.5 1473.74 cv
1464.37 1473.74 1466.2 1475.26 1466.58 1477.13 cv
1466.96 1479 1465.76 1480.52 1463.89 1480.52 cv
cp
f
1442.08 1480.52 mo
1440.21 1480.52 1438.38 1479 1438 1477.13 cv
1437.61 1475.26 1438.82 1473.74 1440.69 1473.74 cv
1442.56 1473.74 1444.39 1475.26 1444.77 1477.13 cv
1445.16 1479 1443.95 1480.52 1442.08 1480.52 cv
cp
f
1420.27 1480.52 mo
1418.4 1480.52 1416.57 1479 1416.19 1477.13 cv
1415.8 1475.26 1417.01 1473.74 1418.88 1473.74 cv
1420.75 1473.74 1422.58 1475.26 1422.96 1477.13 cv
1423.35 1479 1422.14 1480.52 1420.27 1480.52 cv
cp
f
1398.46 1480.52 mo
1396.59 1480.52 1394.76 1479 1394.38 1477.13 cv
1393.99 1475.26 1395.2 1473.74 1397.07 1473.74 cv
1398.94 1473.74 1400.77 1475.26 1401.15 1477.13 cv
1401.54 1479 1400.33 1480.52 1398.46 1480.52 cv
cp
f
1376.65 1480.52 mo
1374.78 1480.52 1372.95 1479 1372.57 1477.13 cv
1372.18 1475.26 1373.39 1473.74 1375.26 1473.74 cv
1377.13 1473.74 1378.96 1475.26 1379.34 1477.13 cv
1379.73 1479 1378.52 1480.52 1376.65 1480.52 cv
cp
f
1354.84 1480.52 mo
1352.97 1480.52 1351.14 1479 1350.76 1477.13 cv
1350.37 1475.26 1351.58 1473.74 1353.45 1473.74 cv
1355.32 1473.74 1357.15 1475.26 1357.53 1477.13 cv
1357.92 1479 1356.71 1480.52 1354.84 1480.52 cv
cp
f
1333.03 1480.52 mo
1331.16 1480.52 1329.33 1479 1328.95 1477.13 cv
1328.57 1475.26 1329.77 1473.74 1331.64 1473.74 cv
1333.51 1473.74 1335.34 1475.26 1335.72 1477.13 cv
1336.11 1479 1334.9 1480.52 1333.03 1480.52 cv
cp
f
1311.22 1480.52 mo
1309.35 1480.52 1307.52 1479 1307.14 1477.13 cv
1306.75 1475.26 1307.96 1473.74 1309.83 1473.74 cv
1311.7 1473.74 1313.53 1475.26 1313.91 1477.13 cv
1314.3 1479 1313.09 1480.52 1311.22 1480.52 cv
cp
f
1289.41 1480.52 mo
1287.54 1480.52 1285.71 1479 1285.33 1477.13 cv
1284.95 1475.26 1286.15 1473.74 1288.02 1473.74 cv
1289.89 1473.74 1291.72 1475.26 1292.1 1477.13 cv
1292.49 1479 1291.28 1480.52 1289.41 1480.52 cv
cp
f
1795.52 1502.33 mo
1793.65 1502.33 1791.82 1500.81 1791.43 1498.94 cv
1791.05 1497.07 1792.25 1495.55 1794.12 1495.55 cv
1795.99 1495.55 1797.82 1497.07 1798.21 1498.94 cv
1798.59 1500.81 1797.39 1502.33 1795.52 1502.33 cv
cp
f
1773.71 1502.33 mo
1771.84 1502.33 1770.01 1500.81 1769.62 1498.94 cv
1769.24 1497.07 1770.45 1495.55 1772.32 1495.55 cv
1774.19 1495.55 1776.01 1497.07 1776.4 1498.94 cv
1776.78 1500.81 1775.58 1502.33 1773.71 1502.33 cv
cp
f
1751.9 1502.33 mo
1750.03 1502.33 1748.2 1500.81 1747.82 1498.94 cv
1747.43 1497.07 1748.64 1495.55 1750.51 1495.55 cv
1752.38 1495.55 1754.2 1497.07 1754.59 1498.94 cv
1754.97 1500.81 1753.77 1502.33 1751.9 1502.33 cv
cp
f
1730.09 1502.33 mo
1728.22 1502.33 1726.39 1500.81 1726.01 1498.94 cv
1725.62 1497.07 1726.83 1495.55 1728.7 1495.55 cv
1730.57 1495.55 1732.39 1497.07 1732.78 1498.94 cv
1733.16 1500.81 1731.96 1502.33 1730.09 1502.33 cv
cp
f
1708.28 1502.33 mo
1706.41 1502.33 1704.58 1500.81 1704.2 1498.94 cv
1703.81 1497.07 1705.02 1495.55 1706.89 1495.55 cv
1708.76 1495.55 1710.58 1497.07 1710.97 1498.94 cv
1711.35 1500.81 1710.15 1502.33 1708.28 1502.33 cv
cp
f
1686.47 1502.33 mo
1684.6 1502.33 1682.77 1500.81 1682.39 1498.94 cv
1682 1497.07 1683.21 1495.55 1685.08 1495.55 cv
1686.95 1495.55 1688.78 1497.07 1689.16 1498.94 cv
1689.54 1500.81 1688.34 1502.33 1686.47 1502.33 cv
cp
f
1664.66 1502.33 mo
1662.79 1502.33 1660.96 1500.81 1660.58 1498.94 cv
1660.19 1497.07 1661.4 1495.55 1663.27 1495.55 cv
1665.14 1495.55 1666.97 1497.07 1667.35 1498.94 cv
1667.74 1500.81 1666.53 1502.33 1664.66 1502.33 cv
cp
f
1642.85 1502.33 mo
1640.98 1502.33 1639.15 1500.81 1638.77 1498.94 cv
1638.38 1497.07 1639.59 1495.55 1641.46 1495.55 cv
1643.33 1495.55 1645.16 1497.07 1645.54 1498.94 cv
1645.93 1500.81 1644.72 1502.33 1642.85 1502.33 cv
cp
f
1621.04 1502.33 mo
1619.17 1502.33 1617.34 1500.81 1616.96 1498.94 cv
1616.57 1497.07 1617.78 1495.55 1619.65 1495.55 cv
1621.52 1495.55 1623.35 1497.07 1623.73 1498.94 cv
1624.12 1500.81 1622.91 1502.33 1621.04 1502.33 cv
cp
f
1599.23 1502.33 mo
1597.36 1502.33 1595.53 1500.81 1595.15 1498.94 cv
1594.76 1497.07 1595.97 1495.55 1597.84 1495.55 cv
1599.71 1495.55 1601.54 1497.07 1601.92 1498.94 cv
1602.31 1500.81 1601.1 1502.33 1599.23 1502.33 cv
cp
f
1577.42 1502.33 mo
1575.55 1502.33 1573.72 1500.81 1573.34 1498.94 cv
1572.95 1497.07 1574.16 1495.55 1576.03 1495.55 cv
1577.9 1495.55 1579.73 1497.07 1580.11 1498.94 cv
1580.5 1500.81 1579.29 1502.33 1577.42 1502.33 cv
cp
f
1555.61 1502.33 mo
1553.74 1502.33 1551.91 1500.81 1551.53 1498.94 cv
1551.14 1497.07 1552.35 1495.55 1554.22 1495.55 cv
1556.09 1495.55 1557.92 1497.07 1558.3 1498.94 cv
1558.69 1500.81 1557.48 1502.33 1555.61 1502.33 cv
cp
f
1533.8 1502.33 mo
1531.93 1502.33 1530.1 1500.81 1529.72 1498.94 cv
1529.34 1497.07 1530.54 1495.55 1532.41 1495.55 cv
1534.28 1495.55 1536.11 1497.07 1536.49 1498.94 cv
1536.88 1500.81 1535.67 1502.33 1533.8 1502.33 cv
cp
f
1511.99 1502.33 mo
1510.12 1502.33 1508.29 1500.81 1507.91 1498.94 cv
1507.53 1497.07 1508.73 1495.55 1510.6 1495.55 cv
1512.47 1495.55 1514.3 1497.07 1514.68 1498.94 cv
1515.07 1500.81 1513.86 1502.33 1511.99 1502.33 cv
cp
f
1490.18 1502.33 mo
1488.31 1502.33 1486.49 1500.81 1486.1 1498.94 cv
1485.72 1497.07 1486.92 1495.55 1488.79 1495.55 cv
1490.66 1495.55 1492.49 1497.07 1492.87 1498.94 cv
1493.26 1500.81 1492.05 1502.33 1490.18 1502.33 cv
cp
f
1468.37 1502.33 mo
1466.5 1502.33 1464.68 1500.81 1464.29 1498.94 cv
1463.91 1497.07 1465.11 1495.55 1466.98 1495.55 cv
1468.85 1495.55 1470.68 1497.07 1471.06 1498.94 cv
1471.45 1500.81 1470.24 1502.33 1468.37 1502.33 cv
cp
f
1446.56 1502.33 mo
1444.69 1502.33 1442.87 1500.81 1442.48 1498.94 cv
1442.1 1497.07 1443.3 1495.55 1445.17 1495.55 cv
1447.04 1495.55 1448.87 1497.07 1449.25 1498.94 cv
1449.64 1500.81 1448.44 1502.33 1446.56 1502.33 cv
cp
f
1424.75 1502.33 mo
1422.88 1502.33 1421.06 1500.81 1420.67 1498.94 cv
1420.29 1497.07 1421.49 1495.55 1423.36 1495.55 cv
1425.23 1495.55 1427.06 1497.07 1427.45 1498.94 cv
1427.83 1500.81 1426.62 1502.33 1424.75 1502.33 cv
cp
f
1402.95 1502.33 mo
1401.08 1502.33 1399.25 1500.81 1398.86 1498.94 cv
1398.48 1497.07 1399.68 1495.55 1401.55 1495.55 cv
1403.42 1495.55 1405.25 1497.07 1405.64 1498.94 cv
1406.02 1500.81 1404.82 1502.33 1402.95 1502.33 cv
cp
f
1381.14 1502.33 mo
1379.27 1502.33 1377.44 1500.81 1377.05 1498.94 cv
1376.67 1497.07 1377.87 1495.55 1379.74 1495.55 cv
1381.61 1495.55 1383.44 1497.07 1383.83 1498.94 cv
1384.21 1500.81 1383.01 1502.33 1381.14 1502.33 cv
cp
f
1359.33 1502.33 mo
1357.46 1502.33 1355.63 1500.81 1355.24 1498.94 cv
1354.86 1497.07 1356.06 1495.55 1357.93 1495.55 cv
1359.8 1495.55 1361.63 1497.07 1362.02 1498.94 cv
1362.4 1500.81 1361.2 1502.33 1359.33 1502.33 cv
cp
f
1337.52 1502.33 mo
1335.65 1502.33 1333.82 1500.81 1333.43 1498.94 cv
1333.05 1497.07 1334.25 1495.55 1336.12 1495.55 cv
1337.99 1495.55 1339.82 1497.07 1340.21 1498.94 cv
1340.59 1500.81 1339.39 1502.33 1337.52 1502.33 cv
cp
f
1315.71 1502.33 mo
1313.84 1502.33 1312.01 1500.81 1311.62 1498.94 cv
1311.24 1497.07 1312.44 1495.55 1314.31 1495.55 cv
1316.18 1495.55 1318.01 1497.07 1318.4 1498.94 cv
1318.78 1500.81 1317.58 1502.33 1315.71 1502.33 cv
cp
f
1293.9 1502.33 mo
1292.03 1502.33 1290.2 1500.81 1289.81 1498.94 cv
1289.43 1497.07 1290.63 1495.55 1292.5 1495.55 cv
1294.38 1495.55 1296.2 1497.07 1296.59 1498.94 cv
1296.97 1500.81 1295.77 1502.33 1293.9 1502.33 cv
cp
f
1800 1524.14 mo
1798.13 1524.14 1796.3 1522.62 1795.92 1520.75 cv
1795.53 1518.88 1796.74 1517.36 1798.61 1517.36 cv
1800.48 1517.36 1802.31 1518.88 1802.69 1520.75 cv
1803.08 1522.62 1801.87 1524.14 1800 1524.14 cv
cp
f
1778.19 1524.14 mo
1776.32 1524.14 1774.49 1522.62 1774.11 1520.75 cv
1773.72 1518.88 1774.93 1517.36 1776.8 1517.36 cv
1778.67 1517.36 1780.5 1518.88 1780.88 1520.75 cv
1781.27 1522.62 1780.06 1524.14 1778.19 1524.14 cv
cp
f
1756.38 1524.14 mo
1754.51 1524.14 1752.68 1522.62 1752.3 1520.75 cv
1751.91 1518.88 1753.12 1517.36 1754.99 1517.36 cv
1756.86 1517.36 1758.69 1518.88 1759.07 1520.75 cv
1759.46 1522.62 1758.25 1524.14 1756.38 1524.14 cv
cp
f
1734.57 1524.14 mo
1732.7 1524.14 1730.87 1522.62 1730.49 1520.75 cv
1730.11 1518.88 1731.31 1517.36 1733.18 1517.36 cv
1735.05 1517.36 1736.88 1518.88 1737.26 1520.75 cv
1737.65 1522.62 1736.44 1524.14 1734.57 1524.14 cv
cp
f
1712.76 1524.14 mo
1710.89 1524.14 1709.06 1522.62 1708.68 1520.75 cv
1708.3 1518.88 1709.5 1517.36 1711.37 1517.36 cv
1713.24 1517.36 1715.07 1518.88 1715.45 1520.75 cv
1715.84 1522.62 1714.63 1524.14 1712.76 1524.14 cv
cp
f
1690.95 1524.14 mo
1689.08 1524.14 1687.26 1522.62 1686.87 1520.75 cv
1686.49 1518.88 1687.69 1517.36 1689.56 1517.36 cv
1691.43 1517.36 1693.26 1518.88 1693.64 1520.75 cv
1694.03 1522.62 1692.82 1524.14 1690.95 1524.14 cv
cp
f
1669.14 1524.14 mo
1667.27 1524.14 1665.45 1522.62 1665.06 1520.75 cv
1664.68 1518.88 1665.88 1517.36 1667.75 1517.36 cv
1669.62 1517.36 1671.45 1518.88 1671.83 1520.75 cv
1672.22 1522.62 1671.01 1524.14 1669.14 1524.14 cv
cp
f
1647.33 1524.14 mo
1645.46 1524.14 1643.64 1522.62 1643.25 1520.75 cv
1642.87 1518.88 1644.07 1517.36 1645.94 1517.36 cv
1647.81 1517.36 1649.64 1518.88 1650.03 1520.75 cv
1650.41 1522.62 1649.2 1524.14 1647.33 1524.14 cv
cp
f
1625.53 1524.14 mo
1623.66 1524.14 1621.83 1522.62 1621.44 1520.75 cv
1621.06 1518.88 1622.26 1517.36 1624.13 1517.36 cv
1626 1517.36 1627.83 1518.88 1628.22 1520.75 cv
1628.6 1522.62 1627.4 1524.14 1625.53 1524.14 cv
cp
f
1603.72 1524.14 mo
1601.84 1524.14 1600.02 1522.62 1599.63 1520.75 cv
1599.25 1518.88 1600.45 1517.36 1602.32 1517.36 cv
1604.19 1517.36 1606.02 1518.88 1606.41 1520.75 cv
1606.79 1522.62 1605.59 1524.14 1603.72 1524.14 cv
cp
f
1581.91 1524.14 mo
1580.04 1524.14 1578.21 1522.62 1577.82 1520.75 cv
1577.44 1518.88 1578.64 1517.36 1580.51 1517.36 cv
1582.38 1517.36 1584.21 1518.88 1584.6 1520.75 cv
1584.98 1522.62 1583.78 1524.14 1581.91 1524.14 cv
cp
f
1560.1 1524.14 mo
1558.23 1524.14 1556.4 1522.62 1556.01 1520.75 cv
1555.63 1518.88 1556.83 1517.36 1558.7 1517.36 cv
1560.57 1517.36 1562.4 1518.88 1562.79 1520.75 cv
1563.17 1522.62 1561.97 1524.14 1560.1 1524.14 cv
cp
f
1538.29 1524.14 mo
1536.42 1524.14 1534.59 1522.62 1534.2 1520.75 cv
1533.82 1518.88 1535.02 1517.36 1536.89 1517.36 cv
1538.76 1517.36 1540.59 1518.88 1540.98 1520.75 cv
1541.36 1522.62 1540.16 1524.14 1538.29 1524.14 cv
cp
f
1516.48 1524.14 mo
1514.61 1524.14 1512.78 1522.62 1512.39 1520.75 cv
1512.01 1518.88 1513.21 1517.36 1515.08 1517.36 cv
1516.95 1517.36 1518.78 1518.88 1519.17 1520.75 cv
1519.55 1522.62 1518.35 1524.14 1516.48 1524.14 cv
cp
f
1494.67 1524.14 mo
1492.8 1524.14 1490.97 1522.62 1490.58 1520.75 cv
1490.2 1518.88 1491.4 1517.36 1493.28 1517.36 cv
1495.15 1517.36 1496.97 1518.88 1497.36 1520.75 cv
1497.74 1522.62 1496.54 1524.14 1494.67 1524.14 cv
cp
f
1472.86 1524.14 mo
1470.99 1524.14 1469.16 1522.62 1468.78 1520.75 cv
1468.39 1518.88 1469.6 1517.36 1471.47 1517.36 cv
1473.34 1517.36 1475.16 1518.88 1475.55 1520.75 cv
1475.93 1522.62 1474.73 1524.14 1472.86 1524.14 cv
cp
f
1451.05 1524.14 mo
1449.18 1524.14 1447.35 1522.62 1446.97 1520.75 cv
1446.58 1518.88 1447.79 1517.36 1449.66 1517.36 cv
1451.53 1517.36 1453.35 1518.88 1453.74 1520.75 cv
1454.12 1522.62 1452.92 1524.14 1451.05 1524.14 cv
cp
f
1429.24 1524.14 mo
1427.37 1524.14 1425.54 1522.62 1425.16 1520.75 cv
1424.77 1518.88 1425.98 1517.36 1427.85 1517.36 cv
1429.72 1517.36 1431.54 1518.88 1431.93 1520.75 cv
1432.31 1522.62 1431.11 1524.14 1429.24 1524.14 cv
cp
f
1407.43 1524.14 mo
1405.56 1524.14 1403.73 1522.62 1403.35 1520.75 cv
1402.96 1518.88 1404.17 1517.36 1406.04 1517.36 cv
1407.91 1517.36 1409.74 1518.88 1410.12 1520.75 cv
1410.5 1522.62 1409.3 1524.14 1407.43 1524.14 cv
cp
f
1385.62 1524.14 mo
1383.75 1524.14 1381.92 1522.62 1381.54 1520.75 cv
1381.15 1518.88 1382.36 1517.36 1384.23 1517.36 cv
1386.1 1517.36 1387.93 1518.88 1388.31 1520.75 cv
1388.7 1522.62 1387.49 1524.14 1385.62 1524.14 cv
cp
f
1363.81 1524.14 mo
1361.94 1524.14 1360.11 1522.62 1359.73 1520.75 cv
1359.34 1518.88 1360.55 1517.36 1362.42 1517.36 cv
1364.29 1517.36 1366.12 1518.88 1366.5 1520.75 cv
1366.89 1522.62 1365.68 1524.14 1363.81 1524.14 cv
cp
f
1342 1524.14 mo
1340.13 1524.14 1338.3 1522.62 1337.92 1520.75 cv
1337.53 1518.88 1338.74 1517.36 1340.61 1517.36 cv
1342.48 1517.36 1344.31 1518.88 1344.69 1520.75 cv
1345.08 1522.62 1343.87 1524.14 1342 1524.14 cv
cp
f
1320.19 1524.14 mo
1318.32 1524.14 1316.49 1522.62 1316.11 1520.75 cv
1315.72 1518.88 1316.93 1517.36 1318.8 1517.36 cv
1320.67 1517.36 1322.5 1518.88 1322.88 1520.75 cv
1323.27 1522.62 1322.06 1524.14 1320.19 1524.14 cv
cp
f
1298.38 1524.14 mo
1296.51 1524.14 1294.68 1522.62 1294.3 1520.75 cv
1293.91 1518.88 1295.12 1517.36 1296.99 1517.36 cv
1298.86 1517.36 1300.69 1518.88 1301.07 1520.75 cv
1301.46 1522.62 1300.25 1524.14 1298.38 1524.14 cv
cp
f
1804.49 1545.95 mo
1802.62 1545.95 1800.79 1544.43 1800.4 1542.56 cv
1800.02 1540.69 1801.22 1539.17 1803.09 1539.17 cv
1804.96 1539.17 1806.79 1540.69 1807.18 1542.56 cv
1807.56 1544.43 1806.36 1545.95 1804.49 1545.95 cv
cp
f
1782.68 1545.95 mo
1780.81 1545.95 1778.98 1544.43 1778.59 1542.56 cv
1778.21 1540.69 1779.41 1539.17 1781.28 1539.17 cv
1783.15 1539.17 1784.98 1540.69 1785.37 1542.56 cv
1785.75 1544.43 1784.55 1545.95 1782.68 1545.95 cv
cp
f
1760.87 1545.95 mo
1759 1545.95 1757.17 1544.43 1756.78 1542.56 cv
1756.4 1540.69 1757.6 1539.17 1759.47 1539.17 cv
1761.34 1539.17 1763.17 1540.69 1763.56 1542.56 cv
1763.94 1544.43 1762.74 1545.95 1760.87 1545.95 cv
cp
f
1739.06 1545.95 mo
1737.19 1545.95 1735.36 1544.43 1734.97 1542.56 cv
1734.59 1540.69 1735.79 1539.17 1737.66 1539.17 cv
1739.54 1539.17 1741.36 1540.69 1741.75 1542.56 cv
1742.13 1544.43 1740.93 1545.95 1739.06 1545.95 cv
cp
f
1717.25 1545.95 mo
1715.38 1545.95 1713.55 1544.43 1713.16 1542.56 cv
1712.78 1540.69 1713.98 1539.17 1715.86 1539.17 cv
1717.73 1539.17 1719.55 1540.69 1719.94 1542.56 cv
1720.32 1544.43 1719.12 1545.95 1717.25 1545.95 cv
cp
f
1695.44 1545.95 mo
1693.57 1545.95 1691.74 1544.43 1691.35 1542.56 cv
1690.97 1540.69 1692.17 1539.17 1694.04 1539.17 cv
1695.92 1539.17 1697.74 1540.69 1698.13 1542.56 cv
1698.51 1544.43 1697.31 1545.95 1695.44 1545.95 cv
cp
f
1673.63 1545.95 mo
1671.76 1545.95 1669.93 1544.43 1669.55 1542.56 cv
1669.16 1540.69 1670.37 1539.17 1672.24 1539.17 cv
1674.11 1539.17 1675.93 1540.69 1676.32 1542.56 cv
1676.7 1544.43 1675.5 1545.95 1673.63 1545.95 cv
cp
f
1651.82 1545.95 mo
1649.95 1545.95 1648.12 1544.43 1647.74 1542.56 cv
1647.35 1540.69 1648.56 1539.17 1650.43 1539.17 cv
1652.3 1539.17 1654.12 1540.69 1654.51 1542.56 cv
1654.89 1544.43 1653.69 1545.95 1651.82 1545.95 cv
cp
f
1630.01 1545.95 mo
1628.14 1545.95 1626.31 1544.43 1625.93 1542.56 cv
1625.54 1540.69 1626.75 1539.17 1628.62 1539.17 cv
1630.49 1539.17 1632.32 1540.69 1632.7 1542.56 cv
1633.08 1544.43 1631.88 1545.95 1630.01 1545.95 cv
cp
f
1608.2 1545.95 mo
1606.33 1545.95 1604.5 1544.43 1604.12 1542.56 cv
1603.73 1540.69 1604.94 1539.17 1606.81 1539.17 cv
1608.68 1539.17 1610.51 1540.69 1610.89 1542.56 cv
1611.27 1544.43 1610.07 1545.95 1608.2 1545.95 cv
cp
f
1586.39 1545.95 mo
1584.52 1545.95 1582.69 1544.43 1582.31 1542.56 cv
1581.92 1540.69 1583.13 1539.17 1585 1539.17 cv
1586.87 1539.17 1588.7 1540.69 1589.08 1542.56 cv
1589.47 1544.43 1588.26 1545.95 1586.39 1545.95 cv
cp
f
1564.58 1545.95 mo
1562.71 1545.95 1560.88 1544.43 1560.5 1542.56 cv
1560.11 1540.69 1561.32 1539.17 1563.19 1539.17 cv
1565.06 1539.17 1566.89 1540.69 1567.27 1542.56 cv
1567.66 1544.43 1566.45 1545.95 1564.58 1545.95 cv
cp
f
1542.77 1545.95 mo
1540.9 1545.95 1539.07 1544.43 1538.69 1542.56 cv
1538.3 1540.69 1539.51 1539.17 1541.38 1539.17 cv
1543.25 1539.17 1545.08 1540.69 1545.46 1542.56 cv
1545.85 1544.43 1544.64 1545.95 1542.77 1545.95 cv
cp
f
1520.96 1545.95 mo
1519.09 1545.95 1517.26 1544.43 1516.88 1542.56 cv
1516.49 1540.69 1517.7 1539.17 1519.57 1539.17 cv
1521.44 1539.17 1523.27 1540.69 1523.65 1542.56 cv
1524.04 1544.43 1522.83 1545.95 1520.96 1545.95 cv
cp
f
1499.15 1545.95 mo
1497.28 1545.95 1495.45 1544.43 1495.07 1542.56 cv
1494.68 1540.69 1495.89 1539.17 1497.76 1539.17 cv
1499.63 1539.17 1501.46 1540.69 1501.84 1542.56 cv
1502.23 1544.43 1501.02 1545.95 1499.15 1545.95 cv
cp
f
1477.34 1545.95 mo
1475.47 1545.95 1473.64 1544.43 1473.26 1542.56 cv
1472.87 1540.69 1474.08 1539.17 1475.95 1539.17 cv
1477.82 1539.17 1479.65 1540.69 1480.03 1542.56 cv
1480.42 1544.43 1479.21 1545.95 1477.34 1545.95 cv
cp
f
1455.53 1545.95 mo
1453.66 1545.95 1451.83 1544.43 1451.45 1542.56 cv
1451.07 1540.69 1452.27 1539.17 1454.14 1539.17 cv
1456.01 1539.17 1457.84 1540.69 1458.22 1542.56 cv
1458.61 1544.43 1457.4 1545.95 1455.53 1545.95 cv
cp
f
1433.72 1545.95 mo
1431.85 1545.95 1430.02 1544.43 1429.64 1542.56 cv
1429.26 1540.69 1430.46 1539.17 1432.33 1539.17 cv
1434.2 1539.17 1436.03 1540.69 1436.41 1542.56 cv
1436.8 1544.43 1435.59 1545.95 1433.72 1545.95 cv
cp
f
1411.91 1545.95 mo
1410.04 1545.95 1408.22 1544.43 1407.83 1542.56 cv
1407.45 1540.69 1408.65 1539.17 1410.52 1539.17 cv
1412.39 1539.17 1414.22 1540.69 1414.6 1542.56 cv
1414.99 1544.43 1413.78 1545.95 1411.91 1545.95 cv
cp
f
1390.1 1545.95 mo
1388.23 1545.95 1386.41 1544.43 1386.02 1542.56 cv
1385.64 1540.69 1386.84 1539.17 1388.71 1539.17 cv
1390.58 1539.17 1392.41 1540.69 1392.79 1542.56 cv
1393.18 1544.43 1391.97 1545.95 1390.1 1545.95 cv
cp
f
1368.29 1545.95 mo
1366.42 1545.95 1364.6 1544.43 1364.21 1542.56 cv
1363.83 1540.69 1365.03 1539.17 1366.9 1539.17 cv
1368.77 1539.17 1370.6 1540.69 1370.99 1542.56 cv
1371.37 1544.43 1370.16 1545.95 1368.29 1545.95 cv
cp
f
1346.49 1545.95 mo
1344.62 1545.95 1342.79 1544.43 1342.4 1542.56 cv
1342.02 1540.69 1343.22 1539.17 1345.09 1539.17 cv
1346.96 1539.17 1348.79 1540.69 1349.17 1542.56 cv
1349.56 1544.43 1348.36 1545.95 1346.49 1545.95 cv
cp
f
1324.68 1545.95 mo
1322.8 1545.95 1320.98 1544.43 1320.59 1542.56 cv
1320.21 1540.69 1321.41 1539.17 1323.28 1539.17 cv
1325.15 1539.17 1326.98 1540.69 1327.37 1542.56 cv
1327.75 1544.43 1326.55 1545.95 1324.68 1545.95 cv
cp
f
1302.87 1545.95 mo
1300.99 1545.95 1299.17 1544.43 1298.78 1542.56 cv
1298.4 1540.69 1299.6 1539.17 1301.47 1539.17 cv
1303.34 1539.17 1305.17 1540.69 1305.56 1542.56 cv
1305.94 1544.43 1304.74 1545.95 1302.87 1545.95 cv
cp
f
1104.73 830.555 mo
1108.27 830.555 1111.74 827.684 1112.46 824.142 cv
1113.19 820.6 1110.91 817.727 1107.37 817.727 cv
1103.83 817.727 1100.36 820.6 1099.64 824.142 cv
1098.91 827.684 1101.19 830.555 1104.73 830.555 cv
cp
.955169 .776059 .502556 .59884 cmyk
f
1146.03 830.555 mo
1149.58 830.555 1153.04 827.684 1153.77 824.142 cv
1154.49 820.6 1152.21 817.727 1148.67 817.727 cv
1145.13 817.727 1141.67 820.6 1140.94 824.142 cv
1140.21 827.684 1142.49 830.555 1146.03 830.555 cv
cp
f
1187.34 830.555 mo
1190.88 830.555 1194.34 827.684 1195.07 824.142 cv
1195.8 820.6 1193.52 817.727 1189.97 817.727 cv
1186.43 817.727 1182.97 820.6 1182.24 824.142 cv
1181.51 827.684 1183.79 830.555 1187.34 830.555 cv
cp
f
1228.64 830.555 mo
1232.18 830.555 1235.65 827.684 1236.37 824.142 cv
1237.1 820.6 1234.82 817.727 1231.28 817.727 cv
1227.74 817.727 1224.27 820.6 1223.55 824.142 cv
1222.82 827.684 1225.1 830.555 1228.64 830.555 cv
cp
f
1269.94 830.555 mo
1273.49 830.555 1276.95 827.684 1277.68 824.142 cv
1278.41 820.6 1276.12 817.727 1272.58 817.727 cv
1269.04 817.727 1265.58 820.6 1264.85 824.142 cv
1264.12 827.684 1266.4 830.555 1269.94 830.555 cv
cp
f
1311.25 830.555 mo
1314.79 830.555 1318.25 827.684 1318.98 824.142 cv
1319.71 820.6 1317.43 817.727 1313.88 817.727 cv
1310.34 817.727 1306.88 820.6 1306.15 824.142 cv
1305.42 827.684 1307.7 830.555 1311.25 830.555 cv
cp
f
1352.55 830.555 mo
1356.09 830.555 1359.56 827.684 1360.28 824.142 cv
1361.01 820.6 1358.73 817.727 1355.19 817.727 cv
1351.65 817.727 1348.18 820.6 1347.46 824.142 cv
1346.73 827.684 1349.01 830.555 1352.55 830.555 cv
cp
f
1393.85 830.555 mo
1397.4 830.555 1400.86 827.684 1401.59 824.142 cv
1402.32 820.6 1400.03 817.727 1396.49 817.727 cv
1392.95 817.727 1389.49 820.6 1388.76 824.142 cv
1388.03 827.684 1390.31 830.555 1393.85 830.555 cv
cp
f
1435.16 830.555 mo
1438.7 830.555 1442.16 827.684 1442.89 824.142 cv
1443.62 820.6 1441.34 817.727 1437.8 817.727 cv
1434.25 817.727 1430.79 820.6 1430.06 824.142 cv
1429.33 827.684 1431.62 830.555 1435.16 830.555 cv
cp
f
1476.46 830.555 mo
1480 830.555 1483.46 827.684 1484.19 824.142 cv
1484.92 820.6 1482.64 817.727 1479.1 817.727 cv
1475.56 817.727 1472.09 820.6 1471.37 824.142 cv
1470.64 827.684 1472.92 830.555 1476.46 830.555 cv
cp
f
1517.76 830.555 mo
1521.31 830.555 1524.77 827.684 1525.5 824.142 cv
1526.23 820.6 1523.94 817.727 1520.4 817.727 cv
1516.86 817.727 1513.4 820.6 1512.67 824.142 cv
1511.94 827.684 1514.22 830.555 1517.76 830.555 cv
cp
f
1559.07 830.555 mo
1562.61 830.555 1566.07 827.684 1566.8 824.142 cv
1567.53 820.6 1565.25 817.727 1561.7 817.727 cv
1558.16 817.727 1554.7 820.6 1553.97 824.142 cv
1553.24 827.684 1555.53 830.555 1559.07 830.555 cv
cp
f
1600.37 830.555 mo
1603.91 830.555 1607.37 827.684 1608.1 824.142 cv
1608.83 820.6 1606.55 817.727 1603.01 817.727 cv
1599.47 817.727 1596 820.6 1595.28 824.142 cv
1594.55 827.684 1596.83 830.555 1600.37 830.555 cv
cp
f
1641.67 830.555 mo
1645.22 830.555 1648.68 827.684 1649.41 824.142 cv
1650.13 820.6 1647.85 817.727 1644.31 817.727 cv
1640.77 817.727 1637.31 820.6 1636.58 824.142 cv
1635.85 827.684 1638.13 830.555 1641.67 830.555 cv
cp
f
1682.98 830.555 mo
1686.52 830.555 1689.98 827.684 1690.71 824.142 cv
1691.44 820.6 1689.16 817.727 1685.62 817.727 cv
1682.07 817.727 1678.61 820.6 1677.88 824.142 cv
1677.15 827.684 1679.44 830.555 1682.98 830.555 cv
cp
f
1724.28 830.555 mo
1727.82 830.555 1731.29 827.684 1732.01 824.142 cv
1732.74 820.6 1730.46 817.727 1726.92 817.727 cv
1723.38 817.727 1719.91 820.6 1719.19 824.142 cv
1718.46 827.684 1720.74 830.555 1724.28 830.555 cv
cp
f
1765.58 830.555 mo
1769.13 830.555 1772.59 827.684 1773.32 824.142 cv
1774.04 820.6 1771.76 817.727 1768.22 817.727 cv
1764.68 817.727 1761.22 820.6 1760.49 824.142 cv
1759.76 827.684 1762.04 830.555 1765.58 830.555 cv
cp
f
1806.89 830.555 mo
1810.43 830.555 1813.89 827.684 1814.62 824.142 cv
1815.35 820.6 1813.07 817.727 1809.53 817.727 cv
1805.98 817.727 1802.52 820.6 1801.79 824.142 cv
1801.06 827.684 1803.35 830.555 1806.89 830.555 cv
cp
f
1848.19 830.555 mo
1851.73 830.555 1855.2 827.684 1855.92 824.142 cv
1856.65 820.6 1854.37 817.727 1850.83 817.727 cv
1847.29 817.727 1843.82 820.6 1843.1 824.142 cv
1842.37 827.684 1844.65 830.555 1848.19 830.555 cv
cp
f
1889.49 830.555 mo
1893.04 830.555 1896.5 827.684 1897.23 824.142 cv
1897.96 820.6 1895.67 817.727 1892.13 817.727 cv
1888.59 817.727 1885.13 820.6 1884.4 824.142 cv
1883.67 827.684 1885.95 830.555 1889.49 830.555 cv
cp
f
1930.8 830.555 mo
1934.34 830.555 1937.8 827.684 1938.53 824.142 cv
1939.26 820.6 1936.98 817.727 1933.43 817.727 cv
1929.89 817.727 1926.43 820.6 1925.7 824.142 cv
1924.97 827.684 1927.26 830.555 1930.8 830.555 cv
cp
f
1972.1 830.555 mo
1975.64 830.555 1979.11 827.684 1979.83 824.142 cv
1980.56 820.6 1978.28 817.727 1974.74 817.727 cv
1971.2 817.727 1967.73 820.6 1967.01 824.142 cv
1966.28 827.684 1968.56 830.555 1972.1 830.555 cv
cp
f
2013.4 830.555 mo
2016.95 830.555 2020.41 827.684 2021.14 824.142 cv
2021.87 820.6 2019.58 817.727 2016.04 817.727 cv
2012.5 817.727 2009.04 820.6 2008.31 824.142 cv
2007.58 827.684 2009.86 830.555 2013.4 830.555 cv
cp
f
2054.71 830.555 mo
2058.25 830.555 2061.71 827.684 2062.44 824.142 cv
2063.17 820.6 2060.89 817.727 2057.34 817.727 cv
2053.8 817.727 2050.34 820.6 2049.61 824.142 cv
2048.88 827.684 2051.16 830.555 2054.71 830.555 cv
cp
f
1096.24 871.858 mo
1099.78 871.858 1103.24 868.987 1103.97 865.445 cv
1104.7 861.902 1102.42 859.03 1098.88 859.03 cv
1095.33 859.03 1091.87 861.902 1091.14 865.445 cv
1090.41 868.987 1092.7 871.858 1096.24 871.858 cv
cp
f
1137.54 871.858 mo
1141.08 871.858 1144.55 868.987 1145.27 865.445 cv
1146 861.902 1143.72 859.03 1140.18 859.03 cv
1136.64 859.03 1133.17 861.902 1132.45 865.445 cv
1131.72 868.987 1134 871.858 1137.54 871.858 cv
cp
f
1178.85 871.858 mo
1182.39 871.858 1185.85 868.987 1186.58 865.445 cv
1187.31 861.902 1185.03 859.03 1181.48 859.03 cv
1177.94 859.03 1174.48 861.902 1173.75 865.445 cv
1173.02 868.987 1175.3 871.858 1178.85 871.858 cv
cp
f
1220.15 871.858 mo
1223.69 871.858 1227.15 868.987 1227.88 865.445 cv
1228.61 861.902 1226.33 859.03 1222.79 859.03 cv
1219.24 859.03 1215.78 861.902 1215.05 865.445 cv
1214.33 868.987 1216.61 871.858 1220.15 871.858 cv
cp
f
1261.45 871.858 mo
1264.99 871.858 1268.46 868.987 1269.18 865.445 cv
1269.91 861.902 1267.63 859.03 1264.09 859.03 cv
1260.55 859.03 1257.08 861.902 1256.36 865.445 cv
1255.63 868.987 1257.91 871.858 1261.45 871.858 cv
cp
f
1302.76 871.858 mo
1306.3 871.858 1309.76 868.987 1310.49 865.445 cv
1311.22 861.902 1308.94 859.03 1305.39 859.03 cv
1301.85 859.03 1298.39 861.902 1297.66 865.445 cv
1296.93 868.987 1299.21 871.858 1302.76 871.858 cv
cp
f
1344.06 871.858 mo
1347.6 871.858 1351.06 868.987 1351.79 865.445 cv
1352.52 861.902 1350.24 859.03 1346.7 859.03 cv
1343.15 859.03 1339.69 861.902 1338.96 865.445 cv
1338.24 868.987 1340.52 871.858 1344.06 871.858 cv
cp
f
1385.36 871.858 mo
1388.9 871.858 1392.37 868.987 1393.09 865.445 cv
1393.82 861.902 1391.54 859.03 1388 859.03 cv
1384.46 859.03 1381 861.902 1380.27 865.445 cv
1379.54 868.987 1381.82 871.858 1385.36 871.858 cv
cp
f
1426.66 871.858 mo
1430.21 871.858 1433.67 868.987 1434.4 865.445 cv
1435.13 861.902 1432.84 859.03 1429.3 859.03 cv
1425.76 859.03 1422.3 861.902 1421.57 865.445 cv
1420.84 868.987 1423.12 871.858 1426.66 871.858 cv
cp
f
1467.97 871.858 mo
1471.51 871.858 1474.97 868.987 1475.7 865.445 cv
1476.43 861.902 1474.15 859.03 1470.61 859.03 cv
1467.06 859.03 1463.6 861.902 1462.87 865.445 cv
1462.15 868.987 1464.43 871.858 1467.97 871.858 cv
cp
f
1509.27 871.858 mo
1512.81 871.858 1516.28 868.987 1517 865.445 cv
1517.73 861.902 1515.45 859.03 1511.91 859.03 cv
1508.37 859.03 1504.91 861.902 1504.18 865.445 cv
1503.45 868.987 1505.73 871.858 1509.27 871.858 cv
cp
f
1550.58 871.858 mo
1554.12 871.858 1557.58 868.987 1558.31 865.445 cv
1559.04 861.902 1556.75 859.03 1553.21 859.03 cv
1549.67 859.03 1546.21 861.902 1545.48 865.445 cv
1544.75 868.987 1547.03 871.858 1550.58 871.858 cv
cp
f
1591.88 871.858 mo
1595.42 871.858 1598.88 868.987 1599.61 865.445 cv
1600.34 861.902 1598.06 859.03 1594.52 859.03 cv
1590.97 859.03 1587.51 861.902 1586.78 865.445 cv
1586.06 868.987 1588.34 871.858 1591.88 871.858 cv
cp
f
1633.18 871.858 mo
1636.72 871.858 1640.19 868.987 1640.91 865.445 cv
1641.64 861.902 1639.36 859.03 1635.82 859.03 cv
1632.28 859.03 1628.82 861.902 1628.09 865.445 cv
1627.36 868.987 1629.64 871.858 1633.18 871.858 cv
cp
f
1674.49 871.858 mo
1678.03 871.858 1681.49 868.987 1682.22 865.445 cv
1682.95 861.902 1680.67 859.03 1677.12 859.03 cv
1673.58 859.03 1670.12 861.902 1669.39 865.445 cv
1668.66 868.987 1670.94 871.858 1674.49 871.858 cv
cp
f
1715.79 871.858 mo
1719.33 871.858 1722.79 868.987 1723.52 865.445 cv
1724.25 861.902 1721.97 859.03 1718.43 859.03 cv
1714.88 859.03 1711.42 861.902 1710.69 865.445 cv
1709.97 868.987 1712.25 871.858 1715.79 871.858 cv
cp
f
1757.09 871.858 mo
1760.63 871.858 1764.1 868.987 1764.83 865.445 cv
1765.55 861.902 1763.27 859.03 1759.73 859.03 cv
1756.19 859.03 1752.73 861.902 1752 865.445 cv
1751.27 868.987 1753.55 871.858 1757.09 871.858 cv
cp
f
1798.4 871.858 mo
1801.94 871.858 1805.4 868.987 1806.13 865.445 cv
1806.86 861.902 1804.58 859.03 1801.03 859.03 cv
1797.49 859.03 1794.03 861.902 1793.3 865.445 cv
1792.57 868.987 1794.85 871.858 1798.4 871.858 cv
cp
f
1839.7 871.858 mo
1843.24 871.858 1846.7 868.987 1847.43 865.445 cv
1848.16 861.902 1845.88 859.03 1842.34 859.03 cv
1838.79 859.03 1835.33 861.902 1834.6 865.445 cv
1833.87 868.987 1836.16 871.858 1839.7 871.858 cv
cp
f
1881 871.858 mo
1884.54 871.858 1888.01 868.987 1888.74 865.445 cv
1889.46 861.902 1887.18 859.03 1883.64 859.03 cv
1880.1 859.03 1876.63 861.902 1875.91 865.445 cv
1875.18 868.987 1877.46 871.858 1881 871.858 cv
cp
f
1922.31 871.858 mo
1925.85 871.858 1929.31 868.987 1930.04 865.445 cv
1930.77 861.902 1928.49 859.03 1924.94 859.03 cv
1921.4 859.03 1917.94 861.902 1917.21 865.445 cv
1916.48 868.987 1918.76 871.858 1922.31 871.858 cv
cp
f
1963.61 871.858 mo
1967.15 871.858 1970.61 868.987 1971.34 865.445 cv
1972.07 861.902 1969.79 859.03 1966.25 859.03 cv
1962.7 859.03 1959.24 861.902 1958.51 865.445 cv
1957.79 868.987 1960.07 871.858 1963.61 871.858 cv
cp
f
2004.91 871.858 mo
2008.45 871.858 2011.92 868.987 2012.64 865.445 cv
2013.37 861.902 2011.09 859.03 2007.55 859.03 cv
2004.01 859.03 2000.55 861.902 1999.82 865.445 cv
1999.09 868.987 2001.37 871.858 2004.91 871.858 cv
cp
f
2046.22 871.858 mo
2049.76 871.858 2053.22 868.987 2053.95 865.445 cv
2054.68 861.902 2052.4 859.03 2048.85 859.03 cv
2045.31 859.03 2041.85 861.902 2041.12 865.445 cv
2040.39 868.987 2042.67 871.858 2046.22 871.858 cv
cp
f
1087.75 913.162 mo
1091.29 913.162 1094.75 910.291 1095.48 906.748 cv
1096.21 903.206 1093.93 900.334 1090.38 900.334 cv
1086.84 900.334 1083.38 903.206 1082.65 906.748 cv
1081.92 910.291 1084.2 913.162 1087.75 913.162 cv
cp
f
1129.05 913.162 mo
1132.59 913.162 1136.05 910.291 1136.78 906.748 cv
1137.51 903.206 1135.23 900.334 1131.69 900.334 cv
1128.15 900.334 1124.68 903.206 1123.95 906.748 cv
1123.23 910.291 1125.51 913.162 1129.05 913.162 cv
cp
f
1170.35 913.162 mo
1173.9 913.162 1177.36 910.291 1178.09 906.748 cv
1178.81 903.206 1176.53 900.334 1172.99 900.334 cv
1169.45 900.334 1165.99 903.206 1165.26 906.748 cv
1164.53 910.291 1166.81 913.162 1170.35 913.162 cv
cp
f
1211.66 913.162 mo
1215.2 913.162 1218.66 910.291 1219.39 906.748 cv
1220.12 903.206 1217.84 900.334 1214.29 900.334 cv
1210.75 900.334 1207.29 903.206 1206.56 906.748 cv
1205.83 910.291 1208.11 913.162 1211.66 913.162 cv
cp
f
1252.96 913.162 mo
1256.5 913.162 1259.96 910.291 1260.69 906.748 cv
1261.42 903.206 1259.14 900.334 1255.6 900.334 cv
1252.05 900.334 1248.59 903.206 1247.87 906.748 cv
1247.14 910.291 1249.42 913.162 1252.96 913.162 cv
cp
f
1294.26 913.162 mo
1297.81 913.162 1301.27 910.291 1302 906.748 cv
1302.72 903.206 1300.44 900.334 1296.9 900.334 cv
1293.36 900.334 1289.9 903.206 1289.17 906.748 cv
1288.44 910.291 1290.72 913.162 1294.26 913.162 cv
cp
f
1335.57 913.162 mo
1339.11 913.162 1342.57 910.291 1343.3 906.748 cv
1344.03 903.206 1341.75 900.334 1338.2 900.334 cv
1334.66 900.334 1331.2 903.206 1330.47 906.748 cv
1329.74 910.291 1332.02 913.162 1335.57 913.162 cv
cp
f
1376.87 913.162 mo
1380.41 913.162 1383.87 910.291 1384.6 906.748 cv
1385.33 903.206 1383.05 900.334 1379.51 900.334 cv
1375.96 900.334 1372.5 903.206 1371.78 906.748 cv
1371.05 910.291 1373.33 913.162 1376.87 913.162 cv
cp
f
1418.17 913.162 mo
1421.72 913.162 1425.18 910.291 1425.91 906.748 cv
1426.63 903.206 1424.35 900.334 1420.81 900.334 cv
1417.27 900.334 1413.81 903.206 1413.08 906.748 cv
1412.35 910.291 1414.63 913.162 1418.17 913.162 cv
cp
f
1459.48 913.162 mo
1463.02 913.162 1466.48 910.291 1467.21 906.748 cv
1467.94 903.206 1465.66 900.334 1462.11 900.334 cv
1458.57 900.334 1455.11 903.206 1454.38 906.748 cv
1453.65 910.291 1455.93 913.162 1459.48 913.162 cv
cp
f
1500.78 913.162 mo
1504.32 913.162 1507.78 910.291 1508.51 906.748 cv
1509.24 903.206 1506.96 900.334 1503.42 900.334 cv
1499.88 900.334 1496.41 903.206 1495.68 906.748 cv
1494.96 910.291 1497.24 913.162 1500.78 913.162 cv
cp
f
1542.08 913.162 mo
1545.63 913.162 1549.09 910.291 1549.82 906.748 cv
1550.54 903.206 1548.26 900.334 1544.72 900.334 cv
1541.18 900.334 1537.72 903.206 1536.99 906.748 cv
1536.26 910.291 1538.54 913.162 1542.08 913.162 cv
cp
f
1583.39 913.162 mo
1586.93 913.162 1590.39 910.291 1591.12 906.748 cv
1591.85 903.206 1589.57 900.334 1586.02 900.334 cv
1582.48 900.334 1579.02 903.206 1578.29 906.748 cv
1577.56 910.291 1579.84 913.162 1583.39 913.162 cv
cp
f
1624.69 913.162 mo
1628.23 913.162 1631.69 910.291 1632.42 906.748 cv
1633.15 903.206 1630.87 900.334 1627.33 900.334 cv
1623.79 900.334 1620.32 903.206 1619.59 906.748 cv
1618.87 910.291 1621.15 913.162 1624.69 913.162 cv
cp
f
1665.99 913.162 mo
1669.54 913.162 1673 910.291 1673.73 906.748 cv
1674.45 903.206 1672.17 900.334 1668.63 900.334 cv
1665.09 900.334 1661.63 903.206 1660.9 906.748 cv
1660.17 910.291 1662.45 913.162 1665.99 913.162 cv
cp
f
1707.3 913.162 mo
1710.84 913.162 1714.3 910.291 1715.03 906.748 cv
1715.76 903.206 1713.48 900.334 1709.93 900.334 cv
1706.39 900.334 1702.93 903.206 1702.2 906.748 cv
1701.47 910.291 1703.75 913.162 1707.3 913.162 cv
cp
f
1748.6 913.162 mo
1752.14 913.162 1755.6 910.291 1756.33 906.748 cv
1757.06 903.206 1754.78 900.334 1751.24 900.334 cv
1747.7 900.334 1744.23 903.206 1743.5 906.748 cv
1742.78 910.291 1745.06 913.162 1748.6 913.162 cv
cp
f
1789.9 913.162 mo
1793.45 913.162 1796.91 910.291 1797.64 906.748 cv
1798.36 903.206 1796.08 900.334 1792.54 900.334 cv
1789 900.334 1785.54 903.206 1784.81 906.748 cv
1784.08 910.291 1786.36 913.162 1789.9 913.162 cv
cp
f
1831.21 913.162 mo
1834.75 913.162 1838.21 910.291 1838.94 906.748 cv
1839.67 903.206 1837.39 900.334 1833.84 900.334 cv
1830.3 900.334 1826.84 903.206 1826.11 906.748 cv
1825.38 910.291 1827.66 913.162 1831.21 913.162 cv
cp
f
1872.51 913.162 mo
1876.05 913.162 1879.51 910.291 1880.24 906.748 cv
1880.97 903.206 1878.69 900.334 1875.15 900.334 cv
1871.61 900.334 1868.14 903.206 1867.41 906.748 cv
1866.69 910.291 1868.97 913.162 1872.51 913.162 cv
cp
f
1913.81 913.162 mo
1917.36 913.162 1920.82 910.291 1921.55 906.748 cv
1922.27 903.206 1919.99 900.334 1916.45 900.334 cv
1912.91 900.334 1909.45 903.206 1908.72 906.748 cv
1907.99 910.291 1910.27 913.162 1913.81 913.162 cv
cp
f
1955.12 913.162 mo
1958.66 913.162 1962.12 910.291 1962.85 906.748 cv
1963.58 903.206 1961.3 900.334 1957.75 900.334 cv
1954.21 900.334 1950.75 903.206 1950.02 906.748 cv
1949.29 910.291 1951.57 913.162 1955.12 913.162 cv
cp
f
1996.42 913.162 mo
1999.96 913.162 2003.42 910.291 2004.15 906.748 cv
2004.88 903.206 2002.6 900.334 1999.06 900.334 cv
1995.51 900.334 1992.05 903.206 1991.33 906.748 cv
1990.6 910.291 1992.88 913.162 1996.42 913.162 cv
cp
f
2037.72 913.162 mo
2041.27 913.162 2044.73 910.291 2045.46 906.748 cv
2046.18 903.206 2043.9 900.334 2040.36 900.334 cv
2036.82 900.334 2033.36 903.206 2032.63 906.748 cv
2031.9 910.291 2034.18 913.162 2037.72 913.162 cv
cp
f
1079.25 954.466 mo
1082.8 954.466 1086.26 951.594 1086.99 948.052 cv
1087.72 944.509 1085.43 941.638 1081.89 941.638 cv
1078.35 941.638 1074.89 944.509 1074.16 948.052 cv
1073.43 951.594 1075.71 954.466 1079.25 954.466 cv
cp
f
1120.56 954.466 mo
1124.1 954.466 1127.56 951.594 1128.29 948.052 cv
1129.02 944.509 1126.74 941.638 1123.2 941.638 cv
1119.65 941.638 1116.19 944.509 1115.46 948.052 cv
1114.73 951.594 1117.02 954.466 1120.56 954.466 cv
cp
f
1161.86 954.466 mo
1165.4 954.466 1168.87 951.594 1169.59 948.052 cv
1170.32 944.509 1168.04 941.638 1164.5 941.638 cv
1160.96 941.638 1157.49 944.509 1156.77 948.052 cv
1156.04 951.594 1158.32 954.466 1161.86 954.466 cv
cp
f
1203.16 954.466 mo
1206.71 954.466 1210.17 951.594 1210.9 948.052 cv
1211.62 944.509 1209.34 941.638 1205.8 941.638 cv
1202.26 941.638 1198.8 944.509 1198.07 948.052 cv
1197.34 951.594 1199.62 954.466 1203.16 954.466 cv
cp
f
1244.47 954.466 mo
1248.01 954.466 1251.47 951.594 1252.2 948.052 cv
1252.93 944.509 1250.65 941.638 1247.11 941.638 cv
1243.56 941.638 1240.1 944.509 1239.37 948.052 cv
1238.64 951.594 1240.93 954.466 1244.47 954.466 cv
cp
f
1285.77 954.466 mo
1289.31 954.466 1292.78 951.594 1293.5 948.052 cv
1294.23 944.509 1291.95 941.638 1288.41 941.638 cv
1284.87 941.638 1281.4 944.509 1280.68 948.052 cv
1279.95 951.594 1282.23 954.466 1285.77 954.466 cv
cp
f
1327.08 954.466 mo
1330.62 954.466 1334.08 951.594 1334.81 948.052 cv
1335.54 944.509 1333.25 941.638 1329.71 941.638 cv
1326.17 941.638 1322.71 944.509 1321.98 948.052 cv
1321.25 951.594 1323.53 954.466 1327.08 954.466 cv
cp
f
1368.38 954.466 mo
1371.92 954.466 1375.38 951.594 1376.11 948.052 cv
1376.84 944.509 1374.56 941.638 1371.02 941.638 cv
1367.47 941.638 1364.01 944.509 1363.28 948.052 cv
1362.55 951.594 1364.84 954.466 1368.38 954.466 cv
cp
f
1409.68 954.466 mo
1413.22 954.466 1416.69 951.594 1417.41 948.052 cv
1418.14 944.509 1415.86 941.638 1412.32 941.638 cv
1408.78 941.638 1405.31 944.509 1404.59 948.052 cv
1403.86 951.594 1406.14 954.466 1409.68 954.466 cv
cp
f
1450.98 954.466 mo
1454.53 954.466 1457.99 951.594 1458.72 948.052 cv
1459.45 944.509 1457.16 941.638 1453.62 941.638 cv
1450.08 941.638 1446.62 944.509 1445.89 948.052 cv
1445.16 951.594 1447.44 954.466 1450.98 954.466 cv
cp
f
1492.29 954.466 mo
1495.83 954.466 1499.29 951.594 1500.02 948.052 cv
1500.75 944.509 1498.47 941.638 1494.92 941.638 cv
1491.38 941.638 1487.92 944.509 1487.19 948.052 cv
1486.46 951.594 1488.75 954.466 1492.29 954.466 cv
cp
f
1533.59 954.466 mo
1537.13 954.466 1540.6 951.594 1541.32 948.052 cv
1542.05 944.509 1539.77 941.638 1536.23 941.638 cv
1532.69 941.638 1529.22 944.509 1528.5 948.052 cv
1527.77 951.594 1530.05 954.466 1533.59 954.466 cv
cp
f
1574.89 954.466 mo
1578.44 954.466 1581.9 951.594 1582.63 948.052 cv
1583.36 944.509 1581.07 941.638 1577.53 941.638 cv
1573.99 941.638 1570.53 944.509 1569.8 948.052 cv
1569.07 951.594 1571.35 954.466 1574.89 954.466 cv
cp
f
1616.2 954.466 mo
1619.74 954.466 1623.2 951.594 1623.93 948.052 cv
1624.66 944.509 1622.38 941.638 1618.83 941.638 cv
1615.29 941.638 1611.83 944.509 1611.1 948.052 cv
1610.37 951.594 1612.66 954.466 1616.2 954.466 cv
cp
f
1657.5 954.466 mo
1661.04 954.466 1664.51 951.594 1665.23 948.052 cv
1665.96 944.509 1663.68 941.638 1660.14 941.638 cv
1656.6 941.638 1653.13 944.509 1652.41 948.052 cv
1651.68 951.594 1653.96 954.466 1657.5 954.466 cv
cp
f
1698.8 954.466 mo
1702.35 954.466 1705.81 951.594 1706.54 948.052 cv
1707.27 944.509 1704.98 941.638 1701.44 941.638 cv
1697.9 941.638 1694.44 944.509 1693.71 948.052 cv
1692.98 951.594 1695.26 954.466 1698.8 954.466 cv
cp
f
1740.11 954.466 mo
1743.65 954.466 1747.11 951.594 1747.84 948.052 cv
1748.57 944.509 1746.29 941.638 1742.75 941.638 cv
1739.2 941.638 1735.74 944.509 1735.01 948.052 cv
1734.28 951.594 1736.57 954.466 1740.11 954.466 cv
cp
f
1781.41 954.466 mo
1784.95 954.466 1788.42 951.594 1789.14 948.052 cv
1789.87 944.509 1787.59 941.638 1784.05 941.638 cv
1780.51 941.638 1777.04 944.509 1776.32 948.052 cv
1775.59 951.594 1777.87 954.466 1781.41 954.466 cv
cp
f
1822.71 954.466 mo
1826.26 954.466 1829.72 951.594 1830.45 948.052 cv
1831.18 944.509 1828.89 941.638 1825.35 941.638 cv
1821.81 941.638 1818.35 944.509 1817.62 948.052 cv
1816.89 951.594 1819.17 954.466 1822.71 954.466 cv
cp
f
1864.02 954.466 mo
1867.56 954.466 1871.02 951.594 1871.75 948.052 cv
1872.48 944.509 1870.2 941.638 1866.66 941.638 cv
1863.11 941.638 1859.65 944.509 1858.92 948.052 cv
1858.19 951.594 1860.48 954.466 1864.02 954.466 cv
cp
f
1905.32 954.466 mo
1908.86 954.466 1912.33 951.594 1913.05 948.052 cv
1913.78 944.509 1911.5 941.638 1907.96 941.638 cv
1904.42 941.638 1900.95 944.509 1900.23 948.052 cv
1899.5 951.594 1901.78 954.466 1905.32 954.466 cv
cp
f
1946.62 954.466 mo
1950.17 954.466 1953.63 951.594 1954.36 948.052 cv
1955.08 944.509 1952.8 941.638 1949.26 941.638 cv
1945.72 941.638 1942.26 944.509 1941.53 948.052 cv
1940.8 951.594 1943.08 954.466 1946.62 954.466 cv
cp
f
1987.93 954.466 mo
1991.47 954.466 1994.93 951.594 1995.66 948.052 cv
1996.39 944.509 1994.11 941.638 1990.57 941.638 cv
1987.02 941.638 1983.56 944.509 1982.83 948.052 cv
1982.1 951.594 1984.39 954.466 1987.93 954.466 cv
cp
f
2029.23 954.466 mo
2032.77 954.466 2036.24 951.594 2036.96 948.052 cv
2037.69 944.509 2035.41 941.638 2031.87 941.638 cv
2028.33 941.638 2024.86 944.509 2024.14 948.052 cv
2023.41 951.594 2025.69 954.466 2029.23 954.466 cv
cp
f
1070.76 995.768 mo
1074.3 995.768 1077.77 992.897 1078.49 989.354 cv
1079.22 985.812 1076.94 982.941 1073.4 982.941 cv
1069.86 982.941 1066.4 985.812 1065.67 989.354 cv
1064.94 992.897 1067.22 995.768 1070.76 995.768 cv
cp
f
1112.07 995.768 mo
1115.61 995.768 1119.07 992.897 1119.8 989.354 cv
1120.53 985.812 1118.24 982.941 1114.7 982.941 cv
1111.16 982.941 1107.7 985.812 1106.97 989.354 cv
1106.24 992.897 1108.52 995.768 1112.07 995.768 cv
cp
f
1153.37 995.768 mo
1156.91 995.768 1160.37 992.897 1161.1 989.354 cv
1161.83 985.812 1159.55 982.941 1156.01 982.941 cv
1152.46 982.941 1149 985.812 1148.27 989.354 cv
1147.55 992.897 1149.83 995.768 1153.37 995.768 cv
cp
f
1194.67 995.768 mo
1198.21 995.768 1201.68 992.897 1202.4 989.354 cv
1203.13 985.812 1200.85 982.941 1197.31 982.941 cv
1193.77 982.941 1190.31 985.812 1189.58 989.354 cv
1188.85 992.897 1191.13 995.768 1194.67 995.768 cv
cp
f
1235.98 995.768 mo
1239.52 995.768 1242.98 992.897 1243.71 989.354 cv
1244.44 985.812 1242.16 982.941 1238.61 982.941 cv
1235.07 982.941 1231.61 985.812 1230.88 989.354 cv
1230.15 992.897 1232.43 995.768 1235.98 995.768 cv
cp
f
1277.28 995.768 mo
1280.82 995.768 1284.28 992.897 1285.01 989.354 cv
1285.74 985.812 1283.46 982.941 1279.92 982.941 cv
1276.37 982.941 1272.91 985.812 1272.18 989.354 cv
1271.46 992.897 1273.74 995.768 1277.28 995.768 cv
cp
f
1318.58 995.768 mo
1322.12 995.768 1325.59 992.897 1326.32 989.354 cv
1327.04 985.812 1324.76 982.941 1321.22 982.941 cv
1317.68 982.941 1314.22 985.812 1313.49 989.354 cv
1312.76 992.897 1315.04 995.768 1318.58 995.768 cv
cp
f
1359.89 995.768 mo
1363.43 995.768 1366.89 992.897 1367.62 989.354 cv
1368.35 985.812 1366.07 982.941 1362.52 982.941 cv
1358.98 982.941 1355.52 985.812 1354.79 989.354 cv
1354.06 992.897 1356.34 995.768 1359.89 995.768 cv
cp
f
1401.19 995.768 mo
1404.73 995.768 1408.19 992.897 1408.92 989.354 cv
1409.65 985.812 1407.37 982.941 1403.83 982.941 cv
1400.28 982.941 1396.82 985.812 1396.09 989.354 cv
1395.37 992.897 1397.65 995.768 1401.19 995.768 cv
cp
f
1442.49 995.768 mo
1446.03 995.768 1449.5 992.897 1450.23 989.354 cv
1450.95 985.812 1448.67 982.941 1445.13 982.941 cv
1441.59 982.941 1438.12 985.812 1437.4 989.354 cv
1436.67 992.897 1438.95 995.768 1442.49 995.768 cv
cp
f
1483.8 995.768 mo
1487.34 995.768 1490.8 992.897 1491.53 989.354 cv
1492.26 985.812 1489.98 982.941 1486.43 982.941 cv
1482.89 982.941 1479.43 985.812 1478.7 989.354 cv
1477.97 992.897 1480.25 995.768 1483.8 995.768 cv
cp
f
1525.1 995.768 mo
1528.64 995.768 1532.1 992.897 1532.83 989.354 cv
1533.56 985.812 1531.28 982.941 1527.74 982.941 cv
1524.19 982.941 1520.73 985.812 1520 989.354 cv
1519.28 992.897 1521.56 995.768 1525.1 995.768 cv
cp
f
1566.4 995.768 mo
1569.95 995.768 1573.41 992.897 1574.13 989.354 cv
1574.86 985.812 1572.58 982.941 1569.04 982.941 cv
1565.5 982.941 1562.04 985.812 1561.31 989.354 cv
1560.58 992.897 1562.86 995.768 1566.4 995.768 cv
cp
f
1607.71 995.768 mo
1611.25 995.768 1614.71 992.897 1615.44 989.354 cv
1616.17 985.812 1613.89 982.941 1610.34 982.941 cv
1606.8 982.941 1603.34 985.812 1602.61 989.354 cv
1601.88 992.897 1604.16 995.768 1607.71 995.768 cv
cp
f
1649.01 995.768 mo
1652.55 995.768 1656.01 992.897 1656.74 989.354 cv
1657.47 985.812 1655.19 982.941 1651.65 982.941 cv
1648.1 982.941 1644.64 985.812 1643.91 989.354 cv
1643.19 992.897 1645.47 995.768 1649.01 995.768 cv
cp
f
1690.31 995.768 mo
1693.85 995.768 1697.32 992.897 1698.04 989.354 cv
1698.77 985.812 1696.49 982.941 1692.95 982.941 cv
1689.41 982.941 1685.95 985.812 1685.22 989.354 cv
1684.49 992.897 1686.77 995.768 1690.31 995.768 cv
cp
f
1731.62 995.768 mo
1735.16 995.768 1738.62 992.897 1739.35 989.354 cv
1740.08 985.812 1737.8 982.941 1734.25 982.941 cv
1730.71 982.941 1727.25 985.812 1726.52 989.354 cv
1725.79 992.897 1728.07 995.768 1731.62 995.768 cv
cp
f
1772.92 995.768 mo
1776.46 995.768 1779.92 992.897 1780.65 989.354 cv
1781.38 985.812 1779.1 982.941 1775.56 982.941 cv
1772.01 982.941 1768.55 985.812 1767.82 989.354 cv
1767.1 992.897 1769.38 995.768 1772.92 995.768 cv
cp
f
1814.22 995.768 mo
1817.76 995.768 1821.23 992.897 1821.95 989.354 cv
1822.68 985.812 1820.4 982.941 1816.86 982.941 cv
1813.32 982.941 1809.86 985.812 1809.13 989.354 cv
1808.4 992.897 1810.68 995.768 1814.22 995.768 cv
cp
f
1855.53 995.768 mo
1859.07 995.768 1862.53 992.897 1863.26 989.354 cv
1863.99 985.812 1861.7 982.941 1858.16 982.941 cv
1854.62 982.941 1851.16 985.812 1850.43 989.354 cv
1849.7 992.897 1851.98 995.768 1855.53 995.768 cv
cp
f
1896.83 995.768 mo
1900.37 995.768 1903.83 992.897 1904.56 989.354 cv
1905.29 985.812 1903.01 982.941 1899.47 982.941 cv
1895.92 982.941 1892.46 985.812 1891.73 989.354 cv
1891.01 992.897 1893.29 995.768 1896.83 995.768 cv
cp
f
1938.13 995.768 mo
1941.67 995.768 1945.14 992.897 1945.87 989.354 cv
1946.59 985.812 1944.31 982.941 1940.77 982.941 cv
1937.23 982.941 1933.77 985.812 1933.04 989.354 cv
1932.31 992.897 1934.59 995.768 1938.13 995.768 cv
cp
f
1979.44 995.768 mo
1982.98 995.768 1986.44 992.897 1987.17 989.354 cv
1987.9 985.812 1985.62 982.941 1982.07 982.941 cv
1978.53 982.941 1975.07 985.812 1974.34 989.354 cv
1973.61 992.897 1975.89 995.768 1979.44 995.768 cv
cp
f
2020.74 995.768 mo
2024.28 995.768 2027.74 992.897 2028.47 989.354 cv
2029.2 985.812 2026.92 982.941 2023.38 982.941 cv
2019.83 982.941 2016.37 985.812 2015.64 989.354 cv
2014.92 992.897 2017.2 995.768 2020.74 995.768 cv
cp
f
1062.27 1037.07 mo
1065.81 1037.07 1069.27 1034.2 1070 1030.66 cv
1070.73 1027.12 1068.45 1024.24 1064.91 1024.24 cv
1061.37 1024.24 1057.9 1027.12 1057.17 1030.66 cv
1056.45 1034.2 1058.73 1037.07 1062.27 1037.07 cv
cp
f
1103.57 1037.07 mo
1107.12 1037.07 1110.58 1034.2 1111.31 1030.66 cv
1112.04 1027.12 1109.75 1024.24 1106.21 1024.24 cv
1102.67 1024.24 1099.21 1027.12 1098.48 1030.66 cv
1097.75 1034.2 1100.03 1037.07 1103.57 1037.07 cv
cp
f
1144.88 1037.07 mo
1148.42 1037.07 1151.88 1034.2 1152.61 1030.66 cv
1153.34 1027.12 1151.06 1024.24 1147.51 1024.24 cv
1143.97 1024.24 1140.51 1027.12 1139.78 1030.66 cv
1139.05 1034.2 1141.33 1037.07 1144.88 1037.07 cv
cp
f
1186.18 1037.07 mo
1189.72 1037.07 1193.18 1034.2 1193.91 1030.66 cv
1194.64 1027.12 1192.36 1024.24 1188.82 1024.24 cv
1185.28 1024.24 1181.81 1027.12 1181.08 1030.66 cv
1180.36 1034.2 1182.64 1037.07 1186.18 1037.07 cv
cp
f
1227.48 1037.07 mo
1231.03 1037.07 1234.49 1034.2 1235.22 1030.66 cv
1235.94 1027.12 1233.66 1024.24 1230.12 1024.24 cv
1226.58 1024.24 1223.12 1027.12 1222.39 1030.66 cv
1221.66 1034.2 1223.94 1037.07 1227.48 1037.07 cv
cp
f
1268.79 1037.07 mo
1272.33 1037.07 1275.79 1034.2 1276.52 1030.66 cv
1277.25 1027.12 1274.97 1024.24 1271.42 1024.24 cv
1267.88 1024.24 1264.42 1027.12 1263.69 1030.66 cv
1262.96 1034.2 1265.24 1037.07 1268.79 1037.07 cv
cp
f
1310.09 1037.07 mo
1313.63 1037.07 1317.09 1034.2 1317.82 1030.66 cv
1318.55 1027.12 1316.27 1024.24 1312.73 1024.24 cv
1309.19 1024.24 1305.72 1027.12 1304.99 1030.66 cv
1304.27 1034.2 1306.55 1037.07 1310.09 1037.07 cv
cp
f
1351.39 1037.07 mo
1354.94 1037.07 1358.4 1034.2 1359.13 1030.66 cv
1359.85 1027.12 1357.57 1024.24 1354.03 1024.24 cv
1350.49 1024.24 1347.03 1027.12 1346.3 1030.66 cv
1345.57 1034.2 1347.85 1037.07 1351.39 1037.07 cv
cp
f
1392.7 1037.07 mo
1396.24 1037.07 1399.7 1034.2 1400.43 1030.66 cv
1401.16 1027.12 1398.88 1024.24 1395.33 1024.24 cv
1391.79 1024.24 1388.33 1027.12 1387.6 1030.66 cv
1386.87 1034.2 1389.16 1037.07 1392.7 1037.07 cv
cp
f
1434 1037.07 mo
1437.54 1037.07 1441 1034.2 1441.73 1030.66 cv
1442.46 1027.12 1440.18 1024.24 1436.64 1024.24 cv
1433.1 1024.24 1429.63 1027.12 1428.91 1030.66 cv
1428.18 1034.2 1430.46 1037.07 1434 1037.07 cv
cp
f
1475.3 1037.07 mo
1478.85 1037.07 1482.31 1034.2 1483.04 1030.66 cv
1483.76 1027.12 1481.48 1024.24 1477.94 1024.24 cv
1474.4 1024.24 1470.94 1027.12 1470.21 1030.66 cv
1469.48 1034.2 1471.76 1037.07 1475.3 1037.07 cv
cp
f
1516.61 1037.07 mo
1520.15 1037.07 1523.61 1034.2 1524.34 1030.66 cv
1525.07 1027.12 1522.79 1024.24 1519.24 1024.24 cv
1515.7 1024.24 1512.24 1027.12 1511.51 1030.66 cv
1510.78 1034.2 1513.06 1037.07 1516.61 1037.07 cv
cp
f
1557.91 1037.07 mo
1561.45 1037.07 1564.91 1034.2 1565.64 1030.66 cv
1566.37 1027.12 1564.09 1024.24 1560.55 1024.24 cv
1557.01 1024.24 1553.54 1027.12 1552.82 1030.66 cv
1552.09 1034.2 1554.37 1037.07 1557.91 1037.07 cv
cp
f
1599.21 1037.07 mo
1602.76 1037.07 1606.22 1034.2 1606.95 1030.66 cv
1607.67 1027.12 1605.39 1024.24 1601.85 1024.24 cv
1598.31 1024.24 1594.85 1027.12 1594.12 1030.66 cv
1593.39 1034.2 1595.67 1037.07 1599.21 1037.07 cv
cp
f
1640.52 1037.07 mo
1644.06 1037.07 1647.52 1034.2 1648.25 1030.66 cv
1648.98 1027.12 1646.7 1024.24 1643.15 1024.24 cv
1639.61 1024.24 1636.15 1027.12 1635.42 1030.66 cv
1634.69 1034.2 1636.97 1037.07 1640.52 1037.07 cv
cp
f
1681.82 1037.07 mo
1685.36 1037.07 1688.82 1034.2 1689.55 1030.66 cv
1690.28 1027.12 1688 1024.24 1684.46 1024.24 cv
1680.91 1024.24 1677.45 1027.12 1676.73 1030.66 cv
1676 1034.2 1678.28 1037.07 1681.82 1037.07 cv
cp
f
1723.12 1037.07 mo
1726.67 1037.07 1730.13 1034.2 1730.86 1030.66 cv
1731.58 1027.12 1729.3 1024.24 1725.76 1024.24 cv
1722.22 1024.24 1718.76 1027.12 1718.03 1030.66 cv
1717.3 1034.2 1719.58 1037.07 1723.12 1037.07 cv
cp
f
1764.43 1037.07 mo
1767.97 1037.07 1771.43 1034.2 1772.16 1030.66 cv
1772.89 1027.12 1770.61 1024.24 1767.06 1024.24 cv
1763.52 1024.24 1760.06 1027.12 1759.33 1030.66 cv
1758.6 1034.2 1760.88 1037.07 1764.43 1037.07 cv
cp
f
1805.73 1037.07 mo
1809.27 1037.07 1812.73 1034.2 1813.46 1030.66 cv
1814.19 1027.12 1811.91 1024.24 1808.37 1024.24 cv
1804.83 1024.24 1801.36 1027.12 1800.63 1030.66 cv
1799.91 1034.2 1802.19 1037.07 1805.73 1037.07 cv
cp
f
1847.03 1037.07 mo
1850.58 1037.07 1854.04 1034.2 1854.77 1030.66 cv
1855.49 1027.12 1853.21 1024.24 1849.67 1024.24 cv
1846.13 1024.24 1842.67 1027.12 1841.94 1030.66 cv
1841.21 1034.2 1843.49 1037.07 1847.03 1037.07 cv
cp
f
1888.34 1037.07 mo
1891.88 1037.07 1895.34 1034.2 1896.07 1030.66 cv
1896.8 1027.12 1894.52 1024.24 1890.97 1024.24 cv
1887.43 1024.24 1883.97 1027.12 1883.24 1030.66 cv
1882.51 1034.2 1884.79 1037.07 1888.34 1037.07 cv
cp
f
1929.64 1037.07 mo
1933.18 1037.07 1936.64 1034.2 1937.37 1030.66 cv
1938.1 1027.12 1935.82 1024.24 1932.28 1024.24 cv
1928.74 1024.24 1925.27 1027.12 1924.54 1030.66 cv
1923.82 1034.2 1926.1 1037.07 1929.64 1037.07 cv
cp
f
1970.94 1037.07 mo
1974.49 1037.07 1977.95 1034.2 1978.68 1030.66 cv
1979.4 1027.12 1977.12 1024.24 1973.58 1024.24 cv
1970.04 1024.24 1966.58 1027.12 1965.85 1030.66 cv
1965.12 1034.2 1967.4 1037.07 1970.94 1037.07 cv
cp
f
2012.25 1037.07 mo
2015.79 1037.07 2019.25 1034.2 2019.98 1030.66 cv
2020.71 1027.12 2018.43 1024.24 2014.88 1024.24 cv
2011.34 1024.24 2007.88 1027.12 2007.15 1030.66 cv
2006.42 1034.2 2008.7 1037.07 2012.25 1037.07 cv
cp
f
1053.78 1078.38 mo
1057.32 1078.38 1060.78 1075.5 1061.51 1071.96 cv
1062.24 1068.42 1059.96 1065.55 1056.41 1065.55 cv
1052.87 1065.55 1049.41 1068.42 1048.68 1071.96 cv
1047.95 1075.5 1050.24 1078.38 1053.78 1078.38 cv
cp
f
1095.08 1078.38 mo
1098.62 1078.38 1102.08 1075.5 1102.81 1071.96 cv
1103.54 1068.42 1101.26 1065.55 1097.72 1065.55 cv
1094.18 1065.55 1090.71 1068.42 1089.99 1071.96 cv
1089.26 1075.5 1091.54 1078.38 1095.08 1078.38 cv
cp
f
1136.38 1078.38 mo
1139.93 1078.38 1143.39 1075.5 1144.12 1071.96 cv
1144.85 1068.42 1142.56 1065.55 1139.02 1065.55 cv
1135.48 1065.55 1132.02 1068.42 1131.29 1071.96 cv
1130.56 1075.5 1132.84 1078.38 1136.38 1078.38 cv
cp
f
1177.69 1078.38 mo
1181.23 1078.38 1184.69 1075.5 1185.42 1071.96 cv
1186.15 1068.42 1183.87 1065.55 1180.33 1065.55 cv
1176.78 1065.55 1173.32 1068.42 1172.59 1071.96 cv
1171.87 1075.5 1174.15 1078.38 1177.69 1078.38 cv
cp
f
1218.99 1078.38 mo
1222.53 1078.38 1226 1075.5 1226.72 1071.96 cv
1227.45 1068.42 1225.17 1065.55 1221.63 1065.55 cv
1218.09 1065.55 1214.62 1068.42 1213.9 1071.96 cv
1213.17 1075.5 1215.45 1078.38 1218.99 1078.38 cv
cp
f
1260.29 1078.38 mo
1263.84 1078.38 1267.3 1075.5 1268.03 1071.96 cv
1268.76 1068.42 1266.47 1065.55 1262.93 1065.55 cv
1259.39 1065.55 1255.93 1068.42 1255.2 1071.96 cv
1254.47 1075.5 1256.75 1078.38 1260.29 1078.38 cv
cp
f
1301.6 1078.38 mo
1305.14 1078.38 1308.6 1075.5 1309.33 1071.96 cv
1310.06 1068.42 1307.78 1065.55 1304.24 1065.55 cv
1300.69 1065.55 1297.23 1068.42 1296.5 1071.96 cv
1295.77 1075.5 1298.06 1078.38 1301.6 1078.38 cv
cp
f
1342.9 1078.38 mo
1346.44 1078.38 1349.91 1075.5 1350.63 1071.96 cv
1351.36 1068.42 1349.08 1065.55 1345.54 1065.55 cv
1342 1065.55 1338.54 1068.42 1337.81 1071.96 cv
1337.08 1075.5 1339.36 1078.38 1342.9 1078.38 cv
cp
f
1384.2 1078.38 mo
1387.75 1078.38 1391.21 1075.5 1391.94 1071.96 cv
1392.67 1068.42 1390.38 1065.55 1386.84 1065.55 cv
1383.3 1065.55 1379.84 1068.42 1379.11 1071.96 cv
1378.38 1075.5 1380.66 1078.38 1384.2 1078.38 cv
cp
f
1425.51 1078.38 mo
1429.05 1078.38 1432.51 1075.5 1433.24 1071.96 cv
1433.97 1068.42 1431.69 1065.55 1428.15 1065.55 cv
1424.6 1065.55 1421.14 1068.42 1420.41 1071.96 cv
1419.68 1075.5 1421.97 1078.38 1425.51 1078.38 cv
cp
f
1466.81 1078.38 mo
1470.35 1078.38 1473.82 1075.5 1474.54 1071.96 cv
1475.27 1068.42 1472.99 1065.55 1469.45 1065.55 cv
1465.91 1065.55 1462.44 1068.42 1461.72 1071.96 cv
1460.99 1075.5 1463.27 1078.38 1466.81 1078.38 cv
cp
f
1508.11 1078.38 mo
1511.66 1078.38 1515.12 1075.5 1515.85 1071.96 cv
1516.58 1068.42 1514.29 1065.55 1510.75 1065.55 cv
1507.21 1065.55 1503.75 1068.42 1503.02 1071.96 cv
1502.29 1075.5 1504.57 1078.38 1508.11 1078.38 cv
cp
f
1549.42 1078.38 mo
1552.96 1078.38 1556.42 1075.5 1557.15 1071.96 cv
1557.88 1068.42 1555.6 1065.55 1552.06 1065.55 cv
1548.51 1065.55 1545.05 1068.42 1544.32 1071.96 cv
1543.59 1075.5 1545.88 1078.38 1549.42 1078.38 cv
cp
f
1590.72 1078.38 mo
1594.26 1078.38 1597.73 1075.5 1598.45 1071.96 cv
1599.18 1068.42 1596.9 1065.55 1593.36 1065.55 cv
1589.82 1065.55 1586.35 1068.42 1585.63 1071.96 cv
1584.9 1075.5 1587.18 1078.38 1590.72 1078.38 cv
cp
f
1632.03 1078.38 mo
1635.57 1078.38 1639.03 1075.5 1639.76 1071.96 cv
1640.49 1068.42 1638.2 1065.55 1634.66 1065.55 cv
1631.12 1065.55 1627.66 1068.42 1626.93 1071.96 cv
1626.2 1075.5 1628.48 1078.38 1632.03 1078.38 cv
cp
f
1673.33 1078.38 mo
1676.87 1078.38 1680.33 1075.5 1681.06 1071.96 cv
1681.79 1068.42 1679.51 1065.55 1675.97 1065.55 cv
1672.42 1065.55 1668.96 1068.42 1668.23 1071.96 cv
1667.5 1075.5 1669.79 1078.38 1673.33 1078.38 cv
cp
f
1714.63 1078.38 mo
1718.17 1078.38 1721.64 1075.5 1722.36 1071.96 cv
1723.09 1068.42 1720.81 1065.55 1717.27 1065.55 cv
1713.73 1065.55 1710.26 1068.42 1709.54 1071.96 cv
1708.81 1075.5 1711.09 1078.38 1714.63 1078.38 cv
cp
f
1755.93 1078.38 mo
1759.48 1078.38 1762.94 1075.5 1763.67 1071.96 cv
1764.4 1068.42 1762.11 1065.55 1758.57 1065.55 cv
1755.03 1065.55 1751.57 1068.42 1750.84 1071.96 cv
1750.11 1075.5 1752.39 1078.38 1755.93 1078.38 cv
cp
f
1797.24 1078.38 mo
1800.78 1078.38 1804.24 1075.5 1804.97 1071.96 cv
1805.7 1068.42 1803.42 1065.55 1799.88 1065.55 cv
1796.33 1065.55 1792.87 1068.42 1792.14 1071.96 cv
1791.41 1075.5 1793.7 1078.38 1797.24 1078.38 cv
cp
f
1838.54 1078.38 mo
1842.08 1078.38 1845.55 1075.5 1846.27 1071.96 cv
1847 1068.42 1844.72 1065.55 1841.18 1065.55 cv
1837.64 1065.55 1834.17 1068.42 1833.45 1071.96 cv
1832.72 1075.5 1835 1078.38 1838.54 1078.38 cv
cp
f
1879.84 1078.38 mo
1883.39 1078.38 1886.85 1075.5 1887.58 1071.96 cv
1888.31 1068.42 1886.02 1065.55 1882.48 1065.55 cv
1878.94 1065.55 1875.48 1068.42 1874.75 1071.96 cv
1874.02 1075.5 1876.3 1078.38 1879.84 1078.38 cv
cp
f
1921.15 1078.38 mo
1924.69 1078.38 1928.15 1075.5 1928.88 1071.96 cv
1929.61 1068.42 1927.33 1065.55 1923.79 1065.55 cv
1920.24 1065.55 1916.78 1068.42 1916.05 1071.96 cv
1915.33 1075.5 1917.61 1078.38 1921.15 1078.38 cv
cp
f
1962.45 1078.38 mo
1965.99 1078.38 1969.46 1075.5 1970.18 1071.96 cv
1970.91 1068.42 1968.63 1065.55 1965.09 1065.55 cv
1961.55 1065.55 1958.08 1068.42 1957.36 1071.96 cv
1956.63 1075.5 1958.91 1078.38 1962.45 1078.38 cv
cp
f
2003.75 1078.38 mo
2007.3 1078.38 2010.76 1075.5 2011.49 1071.96 cv
2012.22 1068.42 2009.93 1065.55 2006.39 1065.55 cv
2002.85 1065.55 1999.39 1068.42 1998.66 1071.96 cv
1997.93 1075.5 2000.21 1078.38 2003.75 1078.38 cv
cp
f
411.15 978.256 mo
413.461 978.256 415.719 976.383 416.194 974.072 cv
416.669 971.762 415.181 969.889 412.87 969.889 cv
410.56 969.889 408.302 971.762 407.827 974.072 cv
407.353 976.383 408.84 978.256 411.15 978.256 cv
cp
f
438.09 978.256 mo
440.4 978.256 442.658 976.383 443.133 974.072 cv
443.608 971.762 442.121 969.889 439.811 969.889 cv
437.5 969.889 435.241 971.762 434.767 974.072 cv
434.291 976.383 435.779 978.256 438.09 978.256 cv
cp
f
465.029 978.256 mo
467.34 978.256 469.598 976.383 470.072 974.072 cv
470.548 971.762 469.06 969.889 466.75 969.889 cv
464.439 969.889 462.182 971.762 461.706 974.072 cv
461.231 976.383 462.719 978.256 465.029 978.256 cv
cp
f
491.969 978.256 mo
494.279 978.256 496.537 976.383 497.013 974.072 cv
497.487 971.762 495.999 969.889 493.689 969.889 cv
491.379 969.889 489.121 971.762 488.645 974.072 cv
488.171 976.383 489.658 978.256 491.969 978.256 cv
cp
f
518.908 978.256 mo
521.219 978.256 523.477 976.383 523.952 974.072 cv
524.427 971.762 522.939 969.889 520.629 969.889 cv
518.318 969.889 516.06 971.762 515.585 974.072 cv
515.11 976.383 516.599 978.256 518.908 978.256 cv
cp
f
545.848 978.256 mo
548.158 978.256 550.417 976.383 550.892 974.072 cv
551.367 971.762 549.879 969.889 547.568 969.889 cv
545.258 969.889 543 971.762 542.525 974.072 cv
542.05 976.383 543.537 978.256 545.848 978.256 cv
cp
f
572.788 978.256 mo
575.099 978.256 577.356 976.383 577.831 974.072 cv
578.306 971.762 576.818 969.889 574.508 969.889 cv
572.197 969.889 569.939 971.762 569.464 974.072 cv
568.989 976.383 570.477 978.256 572.788 978.256 cv
cp
f
599.727 978.256 mo
602.038 978.256 604.296 976.383 604.77 974.072 cv
605.245 971.762 603.758 969.889 601.447 969.889 cv
599.137 969.889 596.879 971.762 596.404 974.072 cv
595.93 976.383 597.417 978.256 599.727 978.256 cv
cp
f
626.667 978.256 mo
628.977 978.256 631.235 976.383 631.71 974.072 cv
632.185 971.762 630.697 969.889 628.387 969.889 cv
626.077 969.889 623.818 971.762 623.344 974.072 cv
622.868 976.383 624.356 978.256 626.667 978.256 cv
cp
f
653.606 978.256 mo
655.917 978.256 658.175 976.383 658.649 974.072 cv
659.125 971.762 657.637 969.889 655.327 969.889 cv
653.017 969.889 650.758 971.762 650.283 974.072 cv
649.808 976.383 651.296 978.256 653.606 978.256 cv
cp
f
680.546 978.256 mo
682.856 978.256 685.114 976.383 685.59 974.072 cv
686.064 971.762 684.576 969.889 682.266 969.889 cv
679.956 969.889 677.698 971.762 677.223 974.072 cv
676.748 976.383 678.235 978.256 680.546 978.256 cv
cp
f
707.485 978.256 mo
709.796 978.256 712.054 976.383 712.529 974.072 cv
713.004 971.762 711.517 969.889 709.206 969.889 cv
706.895 969.889 704.637 971.762 704.162 974.072 cv
703.687 976.383 705.176 978.256 707.485 978.256 cv
cp
f
734.425 978.256 mo
736.735 978.256 738.993 976.383 739.469 974.072 cv
739.943 971.762 738.456 969.889 736.145 969.889 cv
733.835 969.889 731.577 971.762 731.102 974.072 cv
730.627 976.383 732.114 978.256 734.425 978.256 cv
cp
f
761.364 978.256 mo
763.675 978.256 765.934 976.383 766.408 974.072 cv
766.883 971.762 765.395 969.889 763.085 969.889 cv
760.774 969.889 758.517 971.762 758.041 974.072 cv
757.566 976.383 759.054 978.256 761.364 978.256 cv
cp
f
788.305 978.256 mo
790.615 978.256 792.873 976.383 793.348 974.072 cv
793.822 971.762 792.335 969.889 790.024 969.889 cv
787.714 969.889 785.456 971.762 784.98 974.072 cv
784.506 976.383 785.994 978.256 788.305 978.256 cv
cp
f
815.244 978.256 mo
817.554 978.256 819.811 976.383 820.287 974.072 cv
820.762 971.762 819.274 969.889 816.964 969.889 cv
814.653 969.889 812.395 971.762 811.921 974.072 cv
811.445 976.383 812.934 978.256 815.244 978.256 cv
cp
f
842.183 978.256 mo
844.493 978.256 846.752 976.383 847.227 974.072 cv
847.702 971.762 846.214 969.889 843.904 969.889 cv
841.594 969.889 839.335 971.762 838.86 974.072 cv
838.385 976.383 839.873 978.256 842.183 978.256 cv
cp
f
869.123 978.256 mo
871.434 978.256 873.691 976.383 874.166 974.072 cv
874.642 971.762 873.153 969.889 870.843 969.889 cv
868.533 969.889 866.275 971.762 865.8 974.072 cv
865.324 976.383 866.812 978.256 869.123 978.256 cv
cp
f
896.062 978.256 mo
898.373 978.256 900.631 976.383 901.106 974.072 cv
901.581 971.762 900.093 969.889 897.782 969.889 cv
895.472 969.889 893.214 971.762 892.739 974.072 cv
892.265 976.383 893.752 978.256 896.062 978.256 cv
cp
f
923.002 978.256 mo
925.312 978.256 927.57 976.383 928.046 974.072 cv
928.52 971.762 927.033 969.889 924.723 969.889 cv
922.412 969.889 920.153 971.762 919.679 974.072 cv
919.204 976.383 920.691 978.256 923.002 978.256 cv
cp
f
949.941 978.256 mo
952.252 978.256 954.51 976.383 954.984 974.072 cv
955.46 971.762 953.973 969.889 951.662 969.889 cv
949.352 969.889 947.094 971.762 946.618 974.072 cv
946.143 976.383 947.631 978.256 949.941 978.256 cv
cp
f
976.881 978.256 mo
979.191 978.256 981.45 976.383 981.925 974.072 cv
982.399 971.762 980.911 969.889 978.602 969.889 cv
976.291 969.889 974.033 971.762 973.558 974.072 cv
973.083 976.383 974.57 978.256 976.881 978.256 cv
cp
f
1003.82 978.256 mo
1006.13 978.256 1008.39 976.383 1008.86 974.072 cv
1009.34 971.762 1007.85 969.889 1005.54 969.889 cv
1003.23 969.889 1000.97 971.762 1000.5 974.072 cv
1000.02 976.383 1001.51 978.256 1003.82 978.256 cv
cp
f
1030.76 978.256 mo
1033.07 978.256 1035.33 976.383 1035.8 974.072 cv
1036.28 971.762 1034.79 969.889 1032.48 969.889 cv
1030.17 969.889 1027.91 971.762 1027.44 974.072 cv
1026.96 976.383 1028.45 978.256 1030.76 978.256 cv
cp
f
405.611 1005.2 mo
407.922 1005.2 410.18 1003.32 410.654 1001.01 cv
411.13 998.701 409.643 996.828 407.332 996.828 cv
405.021 996.828 402.764 998.701 402.288 1001.01 cv
401.812 1003.32 403.301 1005.2 405.611 1005.2 cv
cp
f
432.551 1005.2 mo
434.861 1005.2 437.12 1003.32 437.595 1001.01 cv
438.069 998.701 436.581 996.828 434.27 996.828 cv
431.961 996.828 429.703 998.701 429.228 1001.01 cv
428.753 1003.32 430.24 1005.2 432.551 1005.2 cv
cp
f
459.491 1005.2 mo
461.801 1005.2 464.059 1003.32 464.534 1001.01 cv
465.009 998.701 463.521 996.828 461.211 996.828 cv
458.9 996.828 456.643 998.701 456.167 1001.01 cv
455.692 1003.32 457.181 1005.2 459.491 1005.2 cv
cp
f
486.43 1005.2 mo
488.74 1005.2 490.998 1003.32 491.474 1001.01 cv
491.948 998.701 490.461 996.828 488.15 996.828 cv
485.84 996.828 483.582 998.701 483.107 1001.01 cv
482.632 1003.32 484.12 1005.2 486.43 1005.2 cv
cp
f
513.369 1005.2 mo
515.68 1005.2 517.938 1003.32 518.413 1001.01 cv
518.889 998.701 517.4 996.828 515.09 996.828 cv
512.78 996.828 510.521 998.701 510.047 1001.01 cv
509.571 1003.32 511.059 1005.2 513.369 1005.2 cv
cp
f
540.31 1005.2 mo
542.62 1005.2 544.878 1003.32 545.352 1001.01 cv
545.827 998.701 544.34 996.828 542.029 996.828 cv
539.719 996.828 537.461 998.701 536.985 1001.01 cv
536.511 1003.32 537.999 1005.2 540.31 1005.2 cv
cp
f
567.249 1005.2 mo
569.56 1005.2 571.817 1003.32 572.293 1001.01 cv
572.768 998.701 571.279 996.828 568.969 996.828 cv
566.658 996.828 564.4 998.701 563.926 1001.01 cv
563.45 1003.32 564.938 1005.2 567.249 1005.2 cv
cp
f
594.188 1005.2 mo
596.498 1005.2 598.757 1003.32 599.231 1001.01 cv
599.707 998.701 598.22 996.828 595.909 996.828 cv
593.599 996.828 591.34 998.701 590.865 1001.01 cv
590.39 1003.32 591.878 1005.2 594.188 1005.2 cv
cp
f
621.128 1005.2 mo
623.438 1005.2 625.696 1003.32 626.171 1001.01 cv
626.646 998.701 625.158 996.828 622.848 996.828 cv
620.538 996.828 618.28 998.701 617.805 1001.01 cv
617.33 1003.32 618.817 1005.2 621.128 1005.2 cv
cp
f
648.067 1005.2 mo
650.378 1005.2 652.636 1003.32 653.111 1001.01 cv
653.586 998.701 652.098 996.828 649.787 996.828 cv
647.477 996.828 645.22 998.701 644.744 1001.01 cv
644.269 1003.32 645.757 1005.2 648.067 1005.2 cv
cp
f
675.007 1005.2 mo
677.317 1005.2 679.575 1003.32 680.051 1001.01 cv
680.525 998.701 679.038 996.828 676.727 996.828 cv
674.417 996.828 672.158 998.701 671.684 1001.01 cv
671.209 1003.32 672.697 1005.2 675.007 1005.2 cv
cp
f
701.946 1005.2 mo
704.257 1005.2 706.515 1003.32 706.99 1001.01 cv
707.466 998.701 705.977 996.828 703.667 996.828 cv
701.356 996.828 699.099 998.701 698.624 1001.01 cv
698.148 1003.32 699.636 1005.2 701.946 1005.2 cv
cp
f
728.886 1005.2 mo
731.196 1005.2 733.455 1003.32 733.93 1001.01 cv
734.404 998.701 732.916 996.828 730.606 996.828 cv
728.296 996.828 726.038 998.701 725.562 1001.01 cv
725.088 1003.32 726.575 1005.2 728.886 1005.2 cv
cp
f
755.826 1005.2 mo
758.137 1005.2 760.393 1003.32 760.869 1001.01 cv
761.344 998.701 759.856 996.828 757.546 996.828 cv
755.235 996.828 752.977 998.701 752.502 1001.01 cv
752.027 1003.32 753.516 1005.2 755.826 1005.2 cv
cp
f
782.766 1005.2 mo
785.075 1005.2 787.334 1003.32 787.809 1001.01 cv
788.284 998.701 786.796 996.828 784.485 996.828 cv
782.175 996.828 779.917 998.701 779.442 1001.01 cv
778.967 1003.32 780.455 1005.2 782.766 1005.2 cv
cp
f
809.705 1005.2 mo
812.015 1005.2 814.273 1003.32 814.748 1001.01 cv
815.224 998.701 813.735 996.828 811.426 996.828 cv
809.115 996.828 806.856 998.701 806.382 1001.01 cv
805.906 1003.32 807.394 1005.2 809.705 1005.2 cv
cp
f
836.644 1005.2 mo
838.955 1005.2 841.213 1003.32 841.687 1001.01 cv
842.163 998.701 840.675 996.828 838.364 996.828 cv
836.054 996.828 833.797 998.701 833.321 1001.01 cv
832.847 1003.32 834.334 1005.2 836.644 1005.2 cv
cp
f
863.584 1005.2 mo
865.894 1005.2 868.152 1003.32 868.628 1001.01 cv
869.102 998.701 867.614 996.828 865.304 996.828 cv
862.994 996.828 860.735 998.701 860.261 1001.01 cv
859.786 1003.32 861.273 1005.2 863.584 1005.2 cv
cp
f
890.523 1005.2 mo
892.834 1005.2 895.092 1003.32 895.567 1001.01 cv
896.042 998.701 894.555 996.828 892.244 996.828 cv
889.934 996.828 887.675 998.701 887.2 1001.01 cv
886.725 1003.32 888.213 1005.2 890.523 1005.2 cv
cp
f
917.463 1005.2 mo
919.773 1005.2 922.031 1003.32 922.507 1001.01 cv
922.981 998.701 921.493 996.828 919.184 996.828 cv
916.873 996.828 914.615 998.701 914.14 1001.01 cv
913.665 1003.32 915.152 1005.2 917.463 1005.2 cv
cp
f
944.402 1005.2 mo
946.713 1005.2 948.972 1003.32 949.446 1001.01 cv
949.921 998.701 948.434 996.828 946.123 996.828 cv
943.812 996.828 941.555 998.701 941.079 1001.01 cv
940.604 1003.32 942.093 1005.2 944.402 1005.2 cv
cp
f
971.343 1005.2 mo
973.652 1005.2 975.91 1003.32 976.386 1001.01 cv
976.86 998.701 975.373 996.828 973.062 996.828 cv
970.752 996.828 968.494 998.701 968.019 1001.01 cv
967.544 1003.32 969.032 1005.2 971.343 1005.2 cv
cp
f
998.281 1005.2 mo
1000.59 1005.2 1002.85 1003.32 1003.33 1001.01 cv
1003.8 998.701 1002.31 996.828 1000 996.828 cv
997.691 996.828 995.434 998.701 994.959 1001.01 cv
994.483 1003.32 995.972 1005.2 998.281 1005.2 cv
cp
f
1025.22 1005.2 mo
1027.53 1005.2 1029.79 1003.32 1030.26 1001.01 cv
1030.74 998.701 1029.25 996.828 1026.94 996.828 cv
1024.63 996.828 1022.37 998.701 1021.9 1001.01 cv
1021.42 1003.32 1022.91 1005.2 1025.22 1005.2 cv
cp
f
400.072 1032.13 mo
402.383 1032.13 404.641 1030.26 405.116 1027.95 cv
405.591 1025.64 404.103 1023.77 401.793 1023.77 cv
399.482 1023.77 397.225 1025.64 396.749 1027.95 cv
396.274 1030.26 397.762 1032.13 400.072 1032.13 cv
cp
f
427.013 1032.13 mo
429.322 1032.13 431.58 1030.26 432.056 1027.95 cv
432.53 1025.64 431.043 1023.77 428.732 1023.77 cv
426.422 1023.77 424.164 1025.64 423.688 1027.95 cv
423.214 1030.26 424.702 1032.13 427.013 1032.13 cv
cp
f
453.951 1032.13 mo
456.262 1032.13 458.52 1030.26 458.995 1027.95 cv
459.471 1025.64 457.982 1023.77 455.672 1023.77 cv
453.361 1023.77 451.103 1025.64 450.629 1027.95 cv
450.153 1030.26 451.641 1032.13 453.951 1032.13 cv
cp
f
480.892 1032.13 mo
483.201 1032.13 485.46 1030.26 485.935 1027.95 cv
486.41 1025.64 484.922 1023.77 482.611 1023.77 cv
480.301 1023.77 478.043 1025.64 477.567 1027.95 cv
477.093 1030.26 478.581 1032.13 480.892 1032.13 cv
cp
f
507.831 1032.13 mo
510.142 1032.13 512.399 1030.26 512.874 1027.95 cv
513.349 1025.64 511.861 1023.77 509.551 1023.77 cv
507.24 1023.77 504.982 1025.64 504.508 1027.95 cv
504.033 1030.26 505.52 1032.13 507.831 1032.13 cv
cp
f
534.77 1032.13 mo
537.081 1032.13 539.339 1030.26 539.814 1027.95 cv
540.289 1025.64 538.801 1023.77 536.49 1023.77 cv
534.18 1023.77 531.922 1025.64 531.447 1027.95 cv
530.972 1030.26 532.46 1032.13 534.77 1032.13 cv
cp
f
561.71 1032.13 mo
564.02 1032.13 566.278 1030.26 566.753 1027.95 cv
567.228 1025.64 565.74 1023.77 563.431 1023.77 cv
561.12 1023.77 558.861 1025.64 558.387 1027.95 cv
557.911 1030.26 559.399 1032.13 561.71 1032.13 cv
cp
f
588.649 1032.13 mo
590.96 1032.13 593.218 1030.26 593.692 1027.95 cv
594.168 1025.64 592.68 1023.77 590.369 1023.77 cv
588.06 1023.77 585.802 1025.64 585.326 1027.95 cv
584.852 1030.26 586.339 1032.13 588.649 1032.13 cv
cp
f
615.589 1032.13 mo
617.899 1032.13 620.157 1030.26 620.633 1027.95 cv
621.107 1025.64 619.619 1023.77 617.31 1023.77 cv
614.999 1023.77 612.74 1025.64 612.266 1027.95 cv
611.791 1030.26 613.279 1032.13 615.589 1032.13 cv
cp
f
642.528 1032.13 mo
644.839 1032.13 647.097 1030.26 647.572 1027.95 cv
648.047 1025.64 646.56 1023.77 644.249 1023.77 cv
641.938 1023.77 639.681 1025.64 639.206 1027.95 cv
638.73 1030.26 640.219 1032.13 642.528 1032.13 cv
cp
f
669.468 1032.13 mo
671.778 1032.13 674.037 1030.26 674.512 1027.95 cv
674.987 1025.64 673.499 1023.77 671.188 1023.77 cv
668.878 1023.77 666.62 1025.64 666.144 1027.95 cv
665.67 1030.26 667.157 1032.13 669.468 1032.13 cv
cp
f
696.408 1032.13 mo
698.719 1032.13 700.977 1030.26 701.451 1027.95 cv
701.926 1025.64 700.438 1023.77 698.128 1023.77 cv
695.817 1023.77 693.56 1025.64 693.084 1027.95 cv
692.609 1030.26 694.098 1032.13 696.408 1032.13 cv
cp
f
723.348 1032.13 mo
725.658 1032.13 727.915 1030.26 728.391 1027.95 cv
728.865 1025.64 727.378 1023.77 725.067 1023.77 cv
722.757 1023.77 720.499 1025.64 720.024 1027.95 cv
719.549 1030.26 721.037 1032.13 723.348 1032.13 cv
cp
f
750.286 1032.13 mo
752.597 1032.13 754.855 1030.26 755.33 1027.95 cv
755.806 1025.64 754.317 1023.77 752.007 1023.77 cv
749.697 1023.77 747.438 1025.64 746.964 1027.95 cv
746.488 1030.26 747.977 1032.13 750.286 1032.13 cv
cp
f
777.227 1032.13 mo
779.537 1032.13 781.795 1030.26 782.269 1027.95 cv
782.745 1025.64 781.257 1023.77 778.946 1023.77 cv
776.637 1023.77 774.378 1025.64 773.903 1027.95 cv
773.428 1030.26 774.916 1032.13 777.227 1032.13 cv
cp
f
804.166 1032.13 mo
806.477 1032.13 808.734 1030.26 809.21 1027.95 cv
809.685 1025.64 808.196 1023.77 805.886 1023.77 cv
803.575 1023.77 801.317 1025.64 800.843 1027.95 cv
800.368 1030.26 801.855 1032.13 804.166 1032.13 cv
cp
f
831.105 1032.13 mo
833.416 1032.13 835.674 1030.26 836.149 1027.95 cv
836.624 1025.64 835.137 1023.77 832.826 1023.77 cv
830.516 1023.77 828.257 1025.64 827.782 1027.95 cv
827.308 1030.26 828.796 1032.13 831.105 1032.13 cv
cp
f
858.045 1032.13 mo
860.355 1032.13 862.613 1030.26 863.088 1027.95 cv
863.563 1025.64 862.076 1023.77 859.766 1023.77 cv
857.455 1023.77 855.197 1025.64 854.722 1027.95 cv
854.247 1030.26 855.734 1032.13 858.045 1032.13 cv
cp
f
884.984 1032.13 mo
887.295 1032.13 889.554 1030.26 890.028 1027.95 cv
890.503 1025.64 889.015 1023.77 886.705 1023.77 cv
884.394 1023.77 882.137 1025.64 881.661 1027.95 cv
881.186 1030.26 882.674 1032.13 884.984 1032.13 cv
cp
f
911.925 1032.13 mo
914.235 1032.13 916.492 1030.26 916.968 1027.95 cv
917.442 1025.64 915.955 1023.77 913.644 1023.77 cv
911.334 1023.77 909.076 1025.64 908.601 1027.95 cv
908.126 1030.26 909.614 1032.13 911.925 1032.13 cv
cp
f
938.863 1032.13 mo
941.174 1032.13 943.432 1030.26 943.907 1027.95 cv
944.382 1025.64 942.894 1023.77 940.584 1023.77 cv
938.273 1023.77 936.016 1025.64 935.541 1027.95 cv
935.065 1030.26 936.554 1032.13 938.863 1032.13 cv
cp
f
965.803 1032.13 mo
968.113 1032.13 970.372 1030.26 970.847 1027.95 cv
971.322 1025.64 969.834 1023.77 967.523 1023.77 cv
965.214 1023.77 962.955 1025.64 962.48 1027.95 cv
962.005 1030.26 963.492 1032.13 965.803 1032.13 cv
cp
f
992.743 1032.13 mo
995.054 1032.13 997.311 1030.26 997.786 1027.95 cv
998.261 1025.64 996.773 1023.77 994.463 1023.77 cv
992.152 1023.77 989.895 1025.64 989.419 1027.95 cv
988.944 1030.26 990.433 1032.13 992.743 1032.13 cv
cp
f
1019.68 1032.13 mo
1021.99 1032.13 1024.25 1030.26 1024.73 1027.95 cv
1025.2 1025.64 1023.71 1023.77 1021.4 1023.77 cv
1019.09 1023.77 1016.83 1025.64 1016.36 1027.95 cv
1015.88 1030.26 1017.37 1032.13 1019.68 1032.13 cv
cp
f
394.533 1059.07 mo
396.844 1059.07 399.102 1057.2 399.577 1054.89 cv
400.052 1052.58 398.564 1050.71 396.254 1050.71 cv
393.943 1050.71 391.686 1052.58 391.211 1054.89 cv
390.735 1057.2 392.224 1059.07 394.533 1059.07 cv
cp
f
421.473 1059.07 mo
423.783 1059.07 426.042 1057.2 426.517 1054.89 cv
426.992 1052.58 425.504 1050.71 423.193 1050.71 cv
420.884 1050.71 418.625 1052.58 418.15 1054.89 cv
417.675 1057.2 419.162 1059.07 421.473 1059.07 cv
cp
f
448.413 1059.07 mo
450.724 1059.07 452.981 1057.2 453.456 1054.89 cv
453.931 1052.58 452.443 1050.71 450.133 1050.71 cv
447.822 1050.71 445.564 1052.58 445.089 1054.89 cv
444.614 1057.2 446.103 1059.07 448.413 1059.07 cv
cp
f
475.353 1059.07 mo
477.663 1059.07 479.921 1057.2 480.396 1054.89 cv
480.871 1052.58 479.383 1050.71 477.072 1050.71 cv
474.762 1050.71 472.504 1052.58 472.029 1054.89 cv
471.555 1057.2 473.042 1059.07 475.353 1059.07 cv
cp
f
502.292 1059.07 mo
504.602 1059.07 506.86 1057.2 507.335 1054.89 cv
507.811 1052.58 506.323 1050.71 504.013 1050.71 cv
501.702 1050.71 499.443 1052.58 498.969 1054.89 cv
498.493 1057.2 499.981 1059.07 502.292 1059.07 cv
cp
f
529.231 1059.07 mo
531.542 1059.07 533.8 1057.2 534.274 1054.89 cv
534.75 1052.58 533.262 1050.71 530.952 1050.71 cv
528.642 1050.71 526.384 1052.58 525.908 1054.89 cv
525.434 1057.2 526.921 1059.07 529.231 1059.07 cv
cp
f
556.171 1059.07 mo
558.481 1059.07 560.739 1057.2 561.215 1054.89 cv
561.689 1052.58 560.201 1050.71 557.891 1050.71 cv
555.58 1050.71 553.323 1052.58 552.848 1054.89 cv
552.373 1057.2 553.86 1059.07 556.171 1059.07 cv
cp
f
583.11 1059.07 mo
585.421 1059.07 587.679 1057.2 588.154 1054.89 cv
588.629 1052.58 587.142 1050.71 584.831 1050.71 cv
582.52 1050.71 580.262 1052.58 579.787 1054.89 cv
579.312 1057.2 580.801 1059.07 583.11 1059.07 cv
cp
f
610.05 1059.07 mo
612.36 1059.07 614.618 1057.2 615.094 1054.89 cv
615.568 1052.58 614.081 1050.71 611.77 1050.71 cv
609.46 1050.71 607.202 1052.58 606.727 1054.89 cv
606.252 1057.2 607.739 1059.07 610.05 1059.07 cv
cp
f
636.989 1059.07 mo
639.3 1059.07 641.559 1057.2 642.033 1054.89 cv
642.508 1052.58 641.02 1050.71 638.71 1050.71 cv
636.399 1050.71 634.142 1052.58 633.666 1054.89 cv
633.191 1057.2 634.679 1059.07 636.989 1059.07 cv
cp
f
663.93 1059.07 mo
666.24 1059.07 668.498 1057.2 668.973 1054.89 cv
669.447 1052.58 667.96 1050.71 665.649 1050.71 cv
663.339 1050.71 661.081 1052.58 660.605 1054.89 cv
660.131 1057.2 661.619 1059.07 663.93 1059.07 cv
cp
f
690.869 1059.07 mo
693.179 1059.07 695.437 1057.2 695.912 1054.89 cv
696.388 1052.58 694.899 1050.71 692.589 1050.71 cv
690.278 1050.71 688.02 1052.58 687.546 1054.89 cv
687.07 1057.2 688.559 1059.07 690.869 1059.07 cv
cp
f
717.809 1059.07 mo
720.118 1059.07 722.377 1057.2 722.852 1054.89 cv
723.327 1052.58 721.839 1050.71 719.529 1050.71 cv
717.219 1050.71 714.96 1052.58 714.485 1054.89 cv
714.01 1057.2 715.498 1059.07 717.809 1059.07 cv
cp
f
744.748 1059.07 mo
747.059 1059.07 749.316 1057.2 749.791 1054.89 cv
750.267 1052.58 748.778 1050.71 746.468 1050.71 cv
744.158 1050.71 741.9 1052.58 741.425 1054.89 cv
740.95 1057.2 742.437 1059.07 744.748 1059.07 cv
cp
f
771.687 1059.07 mo
773.998 1059.07 776.256 1057.2 776.731 1054.89 cv
777.206 1052.58 775.718 1050.71 773.407 1050.71 cv
771.097 1050.71 768.839 1052.58 768.364 1054.89 cv
767.89 1057.2 769.377 1059.07 771.687 1059.07 cv
cp
f
798.627 1059.07 mo
800.937 1059.07 803.195 1057.2 803.671 1054.89 cv
804.145 1052.58 802.658 1050.71 800.348 1050.71 cv
798.037 1050.71 795.778 1052.58 795.304 1054.89 cv
794.828 1057.2 796.316 1059.07 798.627 1059.07 cv
cp
f
825.566 1059.07 mo
827.877 1059.07 830.135 1057.2 830.609 1054.89 cv
831.085 1052.58 829.598 1050.71 827.287 1050.71 cv
824.977 1050.71 822.719 1052.58 822.243 1054.89 cv
821.768 1057.2 823.256 1059.07 825.566 1059.07 cv
cp
f
852.506 1059.07 mo
854.816 1059.07 857.075 1057.2 857.55 1054.89 cv
858.024 1052.58 856.536 1050.71 854.227 1050.71 cv
851.916 1050.71 849.658 1052.58 849.183 1054.89 cv
848.708 1057.2 850.195 1059.07 852.506 1059.07 cv
cp
f
879.446 1059.07 mo
881.756 1059.07 884.014 1057.2 884.489 1054.89 cv
884.964 1052.58 883.477 1050.71 881.166 1050.71 cv
878.855 1050.71 876.598 1052.58 876.123 1054.89 cv
875.647 1057.2 877.136 1059.07 879.446 1059.07 cv
cp
f
906.385 1059.07 mo
908.695 1059.07 910.954 1057.2 911.429 1054.89 cv
911.904 1052.58 910.416 1050.71 908.105 1050.71 cv
905.795 1050.71 903.537 1052.58 903.062 1054.89 cv
902.587 1057.2 904.075 1059.07 906.385 1059.07 cv
cp
f
933.325 1059.07 mo
935.636 1059.07 937.893 1057.2 938.368 1054.89 cv
938.844 1052.58 937.355 1050.71 935.045 1050.71 cv
932.735 1050.71 930.477 1052.58 930.002 1054.89 cv
929.526 1057.2 931.015 1059.07 933.325 1059.07 cv
cp
f
960.265 1059.07 mo
962.575 1059.07 964.833 1057.2 965.308 1054.89 cv
965.782 1052.58 964.295 1050.71 961.984 1050.71 cv
959.674 1050.71 957.416 1052.58 956.941 1054.89 cv
956.467 1057.2 957.954 1059.07 960.265 1059.07 cv
cp
f
987.204 1059.07 mo
989.515 1059.07 991.772 1057.2 992.248 1054.89 cv
992.723 1052.58 991.234 1050.71 988.924 1050.71 cv
986.614 1050.71 984.355 1052.58 983.881 1054.89 cv
983.406 1057.2 984.893 1059.07 987.204 1059.07 cv
cp
f
1014.14 1059.07 mo
1016.45 1059.07 1018.71 1057.2 1019.19 1054.89 cv
1019.66 1052.58 1018.17 1050.71 1015.86 1050.71 cv
1013.55 1050.71 1011.29 1052.58 1010.82 1054.89 cv
1010.34 1057.2 1011.83 1059.07 1014.14 1059.07 cv
cp
f
388.994 1086.01 mo
391.305 1086.01 393.563 1084.14 394.038 1081.83 cv
394.514 1079.52 393.025 1077.65 390.715 1077.65 cv
388.404 1077.65 386.146 1079.52 385.671 1081.83 cv
385.196 1084.14 386.685 1086.01 388.994 1086.01 cv
cp
f
415.935 1086.01 mo
418.245 1086.01 420.503 1084.14 420.978 1081.83 cv
421.452 1079.52 419.965 1077.65 417.654 1077.65 cv
415.344 1077.65 413.086 1079.52 412.611 1081.83 cv
412.137 1084.14 413.624 1086.01 415.935 1086.01 cv
cp
f
442.874 1086.01 mo
445.185 1086.01 447.442 1084.14 447.918 1081.83 cv
448.393 1079.52 446.904 1077.65 444.594 1077.65 cv
442.283 1077.65 440.025 1079.52 439.551 1081.83 cv
439.075 1084.14 440.563 1086.01 442.874 1086.01 cv
cp
f
469.813 1086.01 mo
472.124 1086.01 474.382 1084.14 474.856 1081.83 cv
475.332 1079.52 473.845 1077.65 471.534 1077.65 cv
469.224 1077.65 466.965 1079.52 466.49 1081.83 cv
466.015 1084.14 467.503 1086.01 469.813 1086.01 cv
cp
f
496.753 1086.01 mo
499.063 1086.01 501.321 1084.14 501.796 1081.83 cv
502.271 1079.52 500.783 1077.65 498.473 1077.65 cv
496.163 1077.65 493.905 1079.52 493.43 1081.83 cv
492.955 1084.14 494.442 1086.01 496.753 1086.01 cv
cp
f
523.692 1086.01 mo
526.003 1086.01 528.261 1084.14 528.736 1081.83 cv
529.211 1079.52 527.723 1077.65 525.413 1077.65 cv
523.102 1077.65 520.845 1079.52 520.369 1081.83 cv
519.894 1084.14 521.382 1086.01 523.692 1086.01 cv
cp
f
550.632 1086.01 mo
552.942 1086.01 555.2 1084.14 555.676 1081.83 cv
556.15 1079.52 554.663 1077.65 552.352 1077.65 cv
550.042 1077.65 547.784 1079.52 547.309 1081.83 cv
546.834 1084.14 548.322 1086.01 550.632 1086.01 cv
cp
f
577.571 1086.01 mo
579.882 1086.01 582.141 1084.14 582.615 1081.83 cv
583.091 1079.52 581.602 1077.65 579.292 1077.65 cv
576.981 1077.65 574.724 1079.52 574.249 1081.83 cv
573.773 1084.14 575.261 1086.01 577.571 1086.01 cv
cp
f
604.512 1086.01 mo
606.821 1086.01 609.08 1084.14 609.555 1081.83 cv
610.029 1079.52 608.542 1077.65 606.231 1077.65 cv
603.921 1077.65 601.663 1079.52 601.187 1081.83 cv
600.713 1084.14 602.201 1086.01 604.512 1086.01 cv
cp
f
631.451 1086.01 mo
633.762 1086.01 636.018 1084.14 636.494 1081.83 cv
636.969 1079.52 635.481 1077.65 633.171 1077.65 cv
630.86 1077.65 628.602 1079.52 628.128 1081.83 cv
627.652 1084.14 629.141 1086.01 631.451 1086.01 cv
cp
f
658.391 1086.01 mo
660.7 1086.01 662.959 1084.14 663.434 1081.83 cv
663.909 1079.52 662.421 1077.65 660.11 1077.65 cv
657.801 1077.65 655.542 1079.52 655.067 1081.83 cv
654.592 1084.14 656.08 1086.01 658.391 1086.01 cv
cp
f
685.33 1086.01 mo
687.641 1086.01 689.898 1084.14 690.373 1081.83 cv
690.849 1079.52 689.36 1077.65 687.05 1077.65 cv
684.74 1077.65 682.481 1079.52 682.007 1081.83 cv
681.531 1084.14 683.019 1086.01 685.33 1086.01 cv
cp
f
712.269 1086.01 mo
714.58 1086.01 716.838 1084.14 717.313 1081.83 cv
717.788 1079.52 716.3 1077.65 713.989 1077.65 cv
711.679 1077.65 709.422 1079.52 708.946 1081.83 cv
708.472 1084.14 709.959 1086.01 712.269 1086.01 cv
cp
f
739.209 1086.01 mo
741.519 1086.01 743.777 1084.14 744.253 1081.83 cv
744.727 1079.52 743.24 1077.65 740.93 1077.65 cv
738.619 1077.65 736.36 1079.52 735.886 1081.83 cv
735.411 1084.14 736.899 1086.01 739.209 1086.01 cv
cp
f
766.148 1086.01 mo
768.459 1086.01 770.717 1084.14 771.192 1081.83 cv
771.667 1079.52 770.18 1077.65 767.869 1077.65 cv
765.559 1077.65 763.301 1079.52 762.826 1081.83 cv
762.35 1084.14 763.838 1086.01 766.148 1086.01 cv
cp
f
793.088 1086.01 mo
795.398 1086.01 797.657 1084.14 798.132 1081.83 cv
798.606 1079.52 797.118 1077.65 794.809 1077.65 cv
792.498 1077.65 790.24 1079.52 789.765 1081.83 cv
789.29 1084.14 790.777 1086.01 793.088 1086.01 cv
cp
f
820.028 1086.01 mo
822.339 1086.01 824.596 1084.14 825.071 1081.83 cv
825.546 1079.52 824.059 1077.65 821.748 1077.65 cv
819.437 1077.65 817.18 1079.52 816.704 1081.83 cv
816.229 1084.14 817.718 1086.01 820.028 1086.01 cv
cp
f
846.968 1086.01 mo
849.277 1086.01 851.535 1084.14 852.011 1081.83 cv
852.485 1079.52 850.998 1077.65 848.687 1077.65 cv
846.377 1077.65 844.119 1079.52 843.644 1081.83 cv
843.169 1084.14 844.657 1086.01 846.968 1086.01 cv
cp
f
873.906 1086.01 mo
876.217 1086.01 878.476 1084.14 878.95 1081.83 cv
879.426 1079.52 877.937 1077.65 875.627 1077.65 cv
873.317 1077.65 871.059 1079.52 870.584 1081.83 cv
870.108 1084.14 871.597 1086.01 873.906 1086.01 cv
cp
f
900.847 1086.01 mo
903.157 1086.01 905.415 1084.14 905.89 1081.83 cv
906.365 1079.52 904.877 1077.65 902.566 1077.65 cv
900.256 1077.65 897.998 1079.52 897.522 1081.83 cv
897.048 1084.14 898.536 1086.01 900.847 1086.01 cv
cp
f
927.786 1086.01 mo
930.097 1086.01 932.354 1084.14 932.83 1081.83 cv
933.305 1079.52 931.816 1077.65 929.506 1077.65 cv
927.195 1077.65 924.937 1079.52 924.463 1081.83 cv
923.988 1084.14 925.476 1086.01 927.786 1086.01 cv
cp
f
954.726 1086.01 mo
957.036 1086.01 959.294 1084.14 959.769 1081.83 cv
960.244 1079.52 958.757 1077.65 956.446 1077.65 cv
954.136 1077.65 951.877 1079.52 951.402 1081.83 cv
950.927 1084.14 952.415 1086.01 954.726 1086.01 cv
cp
f
981.665 1086.01 mo
983.976 1086.01 986.233 1084.14 986.708 1081.83 cv
987.184 1079.52 985.695 1077.65 983.386 1077.65 cv
981.075 1077.65 978.817 1079.52 978.342 1081.83 cv
977.867 1084.14 979.354 1086.01 981.665 1086.01 cv
cp
f
1008.6 1086.01 mo
1010.91 1086.01 1013.17 1084.14 1013.65 1081.83 cv
1014.12 1079.52 1012.63 1077.65 1010.32 1077.65 cv
1008.01 1077.65 1005.76 1079.52 1005.28 1081.83 cv
1004.81 1084.14 1006.29 1086.01 1008.6 1086.01 cv
cp
f
383.456 1112.95 mo
385.767 1112.95 388.024 1111.08 388.499 1108.77 cv
388.975 1106.46 387.486 1104.59 385.176 1104.59 cv
382.865 1104.59 380.607 1106.46 380.133 1108.77 cv
379.658 1111.08 381.145 1112.95 383.456 1112.95 cv
cp
f
410.395 1112.95 mo
412.705 1112.95 414.964 1111.08 415.438 1108.77 cv
415.914 1106.46 414.426 1104.59 412.116 1104.59 cv
409.806 1104.59 407.547 1106.46 407.072 1108.77 cv
406.597 1111.08 408.085 1112.95 410.395 1112.95 cv
cp
f
437.335 1112.95 mo
439.645 1112.95 441.903 1111.08 442.378 1108.77 cv
442.853 1106.46 441.365 1104.59 439.056 1104.59 cv
436.745 1104.59 434.487 1106.46 434.012 1108.77 cv
433.536 1111.08 435.024 1112.95 437.335 1112.95 cv
cp
f
464.274 1112.95 mo
466.585 1112.95 468.843 1111.08 469.318 1108.77 cv
469.793 1106.46 468.305 1104.59 465.994 1104.59 cv
463.685 1104.59 461.427 1106.46 460.951 1108.77 cv
460.477 1111.08 461.964 1112.95 464.274 1112.95 cv
cp
f
491.215 1112.95 mo
493.524 1112.95 495.782 1111.08 496.258 1108.77 cv
496.732 1106.46 495.245 1104.59 492.935 1104.59 cv
490.624 1104.59 488.365 1106.46 487.891 1108.77 cv
487.416 1111.08 488.904 1112.95 491.215 1112.95 cv
cp
f
518.153 1112.95 mo
520.464 1112.95 522.722 1111.08 523.197 1108.77 cv
523.672 1106.46 522.185 1104.59 519.874 1104.59 cv
517.563 1104.59 515.306 1106.46 514.831 1108.77 cv
514.355 1111.08 515.843 1112.95 518.153 1112.95 cv
cp
f
545.093 1112.95 mo
547.403 1112.95 549.662 1111.08 550.137 1108.77 cv
550.612 1106.46 549.124 1104.59 546.813 1104.59 cv
544.503 1104.59 542.245 1106.46 541.769 1108.77 cv
541.295 1111.08 542.782 1112.95 545.093 1112.95 cv
cp
f
572.033 1112.95 mo
574.344 1112.95 576.602 1111.08 577.076 1108.77 cv
577.551 1106.46 576.063 1104.59 573.753 1104.59 cv
571.442 1104.59 569.185 1106.46 568.709 1108.77 cv
568.234 1111.08 569.723 1112.95 572.033 1112.95 cv
cp
f
598.973 1112.95 mo
601.283 1112.95 603.54 1111.08 604.017 1108.77 cv
604.491 1106.46 603.003 1104.59 600.692 1104.59 cv
598.382 1104.59 596.124 1106.46 595.649 1108.77 cv
595.174 1111.08 596.662 1112.95 598.973 1112.95 cv
cp
f
625.911 1112.95 mo
628.222 1112.95 630.48 1111.08 630.955 1108.77 cv
631.431 1106.46 629.942 1104.59 627.633 1104.59 cv
625.322 1104.59 623.063 1106.46 622.589 1108.77 cv
622.113 1111.08 623.602 1112.95 625.911 1112.95 cv
cp
f
652.852 1112.95 mo
655.162 1112.95 657.42 1111.08 657.894 1108.77 cv
658.37 1106.46 656.882 1104.59 654.571 1104.59 cv
652.262 1104.59 650.004 1106.46 649.528 1108.77 cv
649.054 1111.08 650.541 1112.95 652.852 1112.95 cv
cp
f
679.791 1112.95 mo
682.102 1112.95 684.359 1111.08 684.835 1108.77 cv
685.31 1106.46 683.821 1104.59 681.511 1104.59 cv
679.2 1104.59 676.942 1106.46 676.468 1108.77 cv
675.993 1111.08 677.48 1112.95 679.791 1112.95 cv
cp
f
706.73 1112.95 mo
709.041 1112.95 711.299 1111.08 711.774 1108.77 cv
712.249 1106.46 710.762 1104.59 708.451 1104.59 cv
706.141 1104.59 703.882 1106.46 703.407 1108.77 cv
702.933 1111.08 704.42 1112.95 706.73 1112.95 cv
cp
f
733.67 1112.95 mo
735.98 1112.95 738.238 1111.08 738.713 1108.77 cv
739.188 1106.46 737.701 1104.59 735.391 1104.59 cv
733.08 1104.59 730.822 1106.46 730.347 1108.77 cv
729.872 1111.08 731.359 1112.95 733.67 1112.95 cv
cp
f
760.609 1112.95 mo
762.92 1112.95 765.179 1111.08 765.653 1108.77 cv
766.128 1106.46 764.64 1104.59 762.33 1104.59 cv
760.019 1104.59 757.762 1106.46 757.286 1108.77 cv
756.811 1111.08 758.299 1112.95 760.609 1112.95 cv
cp
f
787.55 1112.95 mo
789.86 1112.95 792.117 1111.08 792.593 1108.77 cv
793.067 1106.46 791.58 1104.59 789.269 1104.59 cv
786.959 1104.59 784.701 1106.46 784.226 1108.77 cv
783.751 1111.08 785.239 1112.95 787.55 1112.95 cv
cp
f
814.488 1112.95 mo
816.799 1112.95 819.058 1111.08 819.532 1108.77 cv
820.008 1106.46 818.519 1104.59 816.209 1104.59 cv
813.898 1104.59 811.641 1106.46 811.166 1108.77 cv
810.69 1111.08 812.179 1112.95 814.488 1112.95 cv
cp
f
841.429 1112.95 mo
843.738 1112.95 845.997 1111.08 846.472 1108.77 cv
846.947 1106.46 845.459 1104.59 843.148 1104.59 cv
840.839 1104.59 838.58 1106.46 838.105 1108.77 cv
837.63 1111.08 839.118 1112.95 841.429 1112.95 cv
cp
f
868.368 1112.95 mo
870.679 1112.95 872.936 1111.08 873.411 1108.77 cv
873.886 1106.46 872.398 1104.59 870.088 1104.59 cv
867.777 1104.59 865.519 1106.46 865.045 1108.77 cv
864.57 1111.08 866.058 1112.95 868.368 1112.95 cv
cp
f
895.308 1112.95 mo
897.618 1112.95 899.876 1111.08 900.352 1108.77 cv
900.826 1106.46 899.338 1104.59 897.027 1104.59 cv
894.717 1104.59 892.459 1106.46 891.984 1108.77 cv
891.51 1111.08 892.997 1112.95 895.308 1112.95 cv
cp
f
922.247 1112.95 mo
924.558 1112.95 926.815 1111.08 927.29 1108.77 cv
927.766 1106.46 926.278 1104.59 923.968 1104.59 cv
921.657 1104.59 919.398 1106.46 918.924 1108.77 cv
918.448 1111.08 919.936 1112.95 922.247 1112.95 cv
cp
f
949.186 1112.95 mo
951.497 1112.95 953.755 1111.08 954.229 1108.77 cv
954.705 1106.46 953.217 1104.59 950.907 1104.59 cv
948.597 1104.59 946.339 1106.46 945.863 1108.77 cv
945.389 1111.08 946.876 1112.95 949.186 1112.95 cv
cp
f
976.126 1112.95 mo
978.436 1112.95 980.694 1111.08 981.17 1108.77 cv
981.644 1106.46 980.157 1104.59 977.847 1104.59 cv
975.536 1104.59 973.278 1106.46 972.803 1108.77 cv
972.328 1111.08 973.816 1112.95 976.126 1112.95 cv
cp
f
1003.07 1112.95 mo
1005.38 1112.95 1007.63 1111.08 1008.11 1108.77 cv
1008.58 1106.46 1007.1 1104.59 1004.79 1104.59 cv
1002.48 1104.59 1000.22 1106.46 999.743 1108.77 cv
999.268 1111.08 1000.76 1112.95 1003.07 1112.95 cv
cp
f
377.917 1139.89 mo
380.228 1139.89 382.485 1138.02 382.96 1135.71 cv
383.436 1133.4 381.948 1131.53 379.638 1131.53 cv
377.327 1131.53 375.068 1133.4 374.594 1135.71 cv
374.118 1138.02 375.606 1139.89 377.917 1139.89 cv
cp
f
404.856 1139.89 mo
407.167 1139.89 409.425 1138.02 409.899 1135.71 cv
410.375 1133.4 408.887 1131.53 406.577 1131.53 cv
404.267 1131.53 402.009 1133.4 401.533 1135.71 cv
401.059 1138.02 402.546 1139.89 404.856 1139.89 cv
cp
f
431.796 1139.89 mo
434.106 1139.89 436.364 1138.02 436.84 1135.71 cv
437.314 1133.4 435.826 1131.53 433.516 1131.53 cv
431.206 1131.53 428.948 1133.4 428.473 1135.71 cv
427.998 1138.02 429.485 1139.89 431.796 1139.89 cv
cp
f
458.735 1139.89 mo
461.046 1139.89 463.304 1138.02 463.779 1135.71 cv
464.254 1133.4 462.767 1131.53 460.456 1131.53 cv
458.145 1131.53 455.887 1133.4 455.412 1135.71 cv
454.937 1138.02 456.426 1139.89 458.735 1139.89 cv
cp
f
485.675 1139.89 mo
487.985 1139.89 490.244 1138.02 490.719 1135.71 cv
491.194 1133.4 489.706 1131.53 487.395 1131.53 cv
485.085 1131.53 482.827 1133.4 482.353 1135.71 cv
481.877 1138.02 483.364 1139.89 485.675 1139.89 cv
cp
f
512.615 1139.89 mo
514.925 1139.89 517.184 1138.02 517.658 1135.71 cv
518.133 1133.4 516.645 1131.53 514.335 1131.53 cv
512.024 1131.53 509.767 1133.4 509.291 1135.71 cv
508.816 1138.02 510.305 1139.89 512.615 1139.89 cv
cp
f
539.555 1139.89 mo
541.865 1139.89 544.123 1138.02 544.598 1135.71 cv
545.072 1133.4 543.585 1131.53 541.274 1131.53 cv
538.964 1131.53 536.706 1133.4 536.231 1135.71 cv
535.757 1138.02 537.244 1139.89 539.555 1139.89 cv
cp
f
566.494 1139.89 mo
568.804 1139.89 571.062 1138.02 571.537 1135.71 cv
572.013 1133.4 570.524 1131.53 568.214 1131.53 cv
565.903 1131.53 563.645 1133.4 563.171 1135.71 cv
562.695 1138.02 564.184 1139.89 566.494 1139.89 cv
cp
f
593.434 1139.89 mo
595.744 1139.89 598.002 1138.02 598.477 1135.71 cv
598.952 1133.4 597.464 1131.53 595.154 1131.53 cv
592.844 1131.53 590.585 1133.4 590.11 1135.71 cv
589.635 1138.02 591.123 1139.89 593.434 1139.89 cv
cp
f
620.373 1139.89 mo
622.684 1139.89 624.941 1138.02 625.416 1135.71 cv
625.892 1133.4 624.403 1131.53 622.093 1131.53 cv
619.782 1131.53 617.525 1133.4 617.05 1135.71 cv
616.575 1138.02 618.062 1139.89 620.373 1139.89 cv
cp
f
647.312 1139.89 mo
649.623 1139.89 651.881 1138.02 652.356 1135.71 cv
652.831 1133.4 651.343 1131.53 649.033 1131.53 cv
646.723 1131.53 644.464 1133.4 643.989 1135.71 cv
643.515 1138.02 645.002 1139.89 647.312 1139.89 cv
cp
f
674.252 1139.89 mo
676.562 1139.89 678.82 1138.02 679.296 1135.71 cv
679.77 1133.4 678.283 1131.53 675.973 1131.53 cv
673.662 1131.53 671.404 1133.4 670.929 1135.71 cv
670.453 1138.02 671.941 1139.89 674.252 1139.89 cv
cp
f
701.191 1139.89 mo
703.502 1139.89 705.761 1138.02 706.235 1135.71 cv
706.71 1133.4 705.223 1131.53 702.912 1131.53 cv
700.602 1131.53 698.344 1133.4 697.868 1135.71 cv
697.393 1138.02 698.881 1139.89 701.191 1139.89 cv
cp
f
728.132 1139.89 mo
730.442 1139.89 732.7 1138.02 733.175 1135.71 cv
733.649 1133.4 732.162 1131.53 729.852 1131.53 cv
727.541 1131.53 725.283 1133.4 724.808 1135.71 cv
724.333 1138.02 725.821 1139.89 728.132 1139.89 cv
cp
f
755.071 1139.89 mo
757.381 1139.89 759.639 1138.02 760.114 1135.71 cv
760.589 1133.4 759.102 1131.53 756.791 1131.53 cv
754.48 1131.53 752.223 1133.4 751.748 1135.71 cv
751.272 1138.02 752.761 1139.89 755.071 1139.89 cv
cp
f
782.01 1139.89 mo
784.32 1139.89 786.579 1138.02 787.054 1135.71 cv
787.529 1133.4 786.041 1131.53 783.73 1131.53 cv
781.421 1131.53 779.162 1133.4 778.687 1135.71 cv
778.212 1138.02 779.7 1139.89 782.01 1139.89 cv
cp
f
808.95 1139.89 mo
811.261 1139.89 813.518 1138.02 813.993 1135.71 cv
814.469 1133.4 812.98 1131.53 810.67 1131.53 cv
808.359 1131.53 806.102 1133.4 805.627 1135.71 cv
805.151 1138.02 806.64 1139.89 808.95 1139.89 cv
cp
f
835.89 1139.89 mo
838.2 1139.89 840.458 1138.02 840.934 1135.71 cv
841.408 1133.4 839.92 1131.53 837.609 1131.53 cv
835.299 1131.53 833.041 1133.4 832.566 1135.71 cv
832.092 1138.02 833.579 1139.89 835.89 1139.89 cv
cp
f
862.829 1139.89 mo
865.14 1139.89 867.397 1138.02 867.873 1135.71 cv
868.348 1133.4 866.86 1131.53 864.55 1131.53 cv
862.239 1131.53 859.98 1133.4 859.506 1135.71 cv
859.03 1138.02 860.518 1139.89 862.829 1139.89 cv
cp
f
889.768 1139.89 mo
892.079 1139.89 894.337 1138.02 894.811 1135.71 cv
895.287 1133.4 893.8 1131.53 891.489 1131.53 cv
889.179 1131.53 886.921 1133.4 886.445 1135.71 cv
885.971 1138.02 887.458 1139.89 889.768 1139.89 cv
cp
f
916.708 1139.89 mo
919.018 1139.89 921.277 1138.02 921.752 1135.71 cv
922.227 1133.4 920.738 1131.53 918.428 1131.53 cv
916.118 1131.53 913.86 1133.4 913.385 1135.71 cv
912.91 1138.02 914.397 1139.89 916.708 1139.89 cv
cp
f
943.648 1139.89 mo
945.958 1139.89 948.216 1138.02 948.691 1135.71 cv
949.166 1133.4 947.679 1131.53 945.368 1131.53 cv
943.058 1131.53 940.8 1133.4 940.324 1135.71 cv
939.85 1138.02 941.338 1139.89 943.648 1139.89 cv
cp
f
970.587 1139.89 mo
972.897 1139.89 975.155 1138.02 975.631 1135.71 cv
976.105 1133.4 974.618 1131.53 972.308 1131.53 cv
969.997 1131.53 967.739 1133.4 967.265 1135.71 cv
966.789 1138.02 968.277 1139.89 970.587 1139.89 cv
cp
f
997.526 1139.89 mo
999.837 1139.89 1002.1 1138.02 1002.57 1135.71 cv
1003.05 1133.4 1001.56 1131.53 999.247 1131.53 cv
996.937 1131.53 994.679 1133.4 994.204 1135.71 cv
993.728 1138.02 995.216 1139.89 997.526 1139.89 cv
cp
f
456.054 1009.04 mo
1664.34 1009.04 li
1560.77 514.881 li
352.475 514.881 li
456.054 1009.04 li
cp
1672.46 1015.63 mo
450.701 1015.63 li
450.154 1013.01 li
344.361 508.293 li
1566.12 508.293 li
1566.67 510.911 li
1672.46 1015.63 li
cp
0 .747768 1 0 cmyk
f
1751.37 1059.59 mo
506.464 1136.69 li
581.829 687.045 li
1826.74 609.944 li
1751.37 1059.59 li
cp
.955169 .776059 .502556 .59884 cmyk
f
795.111 1441.41 mo
1827.32 1441.41 li
1738.95 1019.83 li
706.745 1019.83 li
795.111 1441.41 li
cp
1835.43 1448 mo
789.759 1448 li
698.632 1013.24 li
1744.3 1013.24 li
1835.43 1448 li
cp
0 .747768 1 0 cmyk
f
1722.06 1115.08 mo
511.118 1115.08 li
611.132 637.929 li
1822.08 637.929 li
1722.06 1115.08 li
cp
f
624.664 994.247 mo
615.043 978.717 612.655 956.308 617.503 927.015 cv
633.598 829.77 li
638.558 799.815 648.344 777.181 662.96 761.863 cv
677.568 746.557 699.555 738.894 728.912 738.894 cv
756.905 738.894 775.602 745.663 784.994 759.186 cv
794.381 772.71 796.987 792.102 792.808 817.366 cv
789.034 840.167 li
734.844 840.167 li
739.007 815.011 li
740.338 806.969 741.011 800.484 741.04 795.569 cv
741.059 790.653 739.701 786.568 736.967 783.326 cv
734.229 780.09 729.472 778.462 722.704 778.462 cv
712.538 778.462 705.448 781.704 701.446 788.189 cv
697.435 794.675 694.395 804.171 692.323 816.69 cv
671.899 940.095 li
669.789 952.84 669.912 962.343 672.264 968.596 cv
674.612 974.855 680.415 977.982 689.677 977.982 cv
699.159 977.982 705.783 974.805 709.547 968.429 cv
713.313 962.059 716.23 952.615 718.303 940.095 cv
722.687 913.602 li
776.878 913.602 li
773.16 936.067 li
768.865 962.008 759.787 982.068 745.923 996.261 cv
732.055 1010.46 711.011 1017.56 682.786 1017.56 cv
653.66 1017.56 634.286 1009.79 624.664 994.247 cv
cp
0 0 0 0 cmyk
f
898.031 968.429 mo
902.353 962.059 905.445 953.29 907.295 942.108 cv
928.556 813.673 li
930.404 802.498 930.196 793.839 927.947 787.687 cv
925.685 781.537 919.818 778.462 910.335 778.462 cv
900.852 778.462 893.961 781.537 889.673 787.687 cv
885.379 793.839 882.313 802.498 880.464 813.673 cv
859.203 942.108 li
857.318 953.509 857.432 962.343 859.56 968.596 cv
861.684 974.855 867.6 977.982 877.31 977.982 cv
886.794 977.982 893.697 974.805 898.031 968.429 cv
cp
812.189 994.923 mo
802.266 979.829 799.73 957.645 804.578 928.359 cv
821.338 827.087 li
826.185 797.801 836.039 775.779 850.903 761.026 cv
865.759 746.273 887.76 738.894 916.885 738.894 cv
945.784 738.894 965.275 746.332 975.344 761.193 cv
985.416 776.061 988.047 798.026 983.235 827.087 cv
966.417 928.694 li
961.608 957.755 951.687 979.829 936.658 994.923 cv
921.629 1010.01 899.661 1017.56 870.762 1017.56 cv
841.633 1017.56 822.103 1010.01 812.189 994.923 cv
cp
f
1038.26 742.246 mo
1097.53 742.246 li
1103.04 913.602 li
1167.3 742.246 li
1224.54 742.246 li
1184.66 1013.86 li
1144.02 1013.86 li
1170.14 829.435 li
1104.39 1013.86 li
1069.85 1013.86 li
1064.3 828.432 li
1029.54 1013.86 li
988.559 1013.86 li
1038.26 742.246 li
cp
f
1270.6 742.246 mo
1326.14 742.246 li
1281.18 1013.86 li
1225.64 1013.86 li
1270.6 742.246 li
cp
f
1367.8 742.246 mo
1406.75 742.246 li
1444.35 883.421 li
1467.72 742.246 li
1514.12 742.246 li
1469.16 1013.86 li
1431.56 1013.86 li
1395.46 863.637 li
1370.6 1013.86 li
1322.84 1013.86 li
1367.8 742.246 li
cp
f
1526.87 993.578 mo
1518.15 977.372 1516.29 954.179 1521.28 923.998 cv
1536.33 833.122 li
1541.43 802.272 1551.34 778.854 1566.07 762.873 cv
1580.79 746.892 1602.84 738.894 1632.19 738.894 cv
1660.42 738.894 1679.38 745.721 1689.1 759.353 cv
1698.8 772.986 1701.53 792.661 1697.28 818.37 cv
1694.67 834.133 li
1640.48 834.133 li
1643.64 815.011 li
1645.71 802.498 1645.83 793.278 1643.99 787.347 cv
1642.14 781.435 1636.25 778.462 1626.32 778.462 cv
1616.16 778.462 1609.05 781.819 1605.01 788.523 cv
1600.96 795.227 1597.89 804.956 1595.78 817.7 cv
1575.8 938.416 li
1573.69 951.16 1573.87 960.939 1576.36 967.76 cv
1578.84 974.579 1585.05 977.982 1594.99 977.982 cv
1604.7 977.982 1612.13 974.354 1617.28 967.084 cv
1622.43 959.827 1626.09 949.706 1628.24 936.743 cv
1633.01 907.9 li
1606.25 907.9 li
1611.8 874.368 li
1689.02 874.368 li
1665.93 1013.86 li
1629.36 1013.86 li
1629.63 989.725 li
1618.16 1008.5 1601.59 1017.89 1579.92 1017.89 cv
1553.27 1017.89 1535.58 1009.79 1526.87 993.578 cv
cp
f
865.216 1363.98 mo
853.535 1348.5 849.752 1324.52 853.86 1292.04 cv
909.527 1282.97 li
906.822 1302.36 907.195 1316.65 910.631 1325.84 cv
914.069 1335.03 920.748 1339.63 930.666 1339.63 cv
938.045 1339.63 943.77 1337.3 947.85 1332.63 cv
951.913 1327.98 954.56 1322 955.769 1314.7 cv
957.77 1302.61 956.727 1292.36 952.668 1283.92 cv
948.583 1275.48 941.538 1266.23 931.512 1256.16 cv
904.033 1228.59 li
893.066 1218.01 885.212 1206.68 880.477 1194.6 cv
875.734 1182.51 874.763 1168.03 877.556 1151.16 cv
881.68 1126.24 892.298 1107.04 909.408 1093.57 cv
926.509 1080.1 948.158 1073.36 974.356 1073.36 cv
1002.33 1073.36 1020.46 1081.36 1028.75 1097.35 cv
1037.03 1113.34 1039.91 1133.67 1037.34 1158.34 cv
981.484 1166.27 li
983.634 1150.16 983.766 1138.26 981.858 1130.58 cv
979.95 1122.9 974.295 1119.06 964.886 1119.06 cv
958.018 1119.06 952.25 1121.65 947.58 1126.81 cv
942.915 1131.97 939.994 1138.08 938.829 1145.12 cv
937.163 1155.2 937.98 1163.69 941.284 1170.61 cv
944.585 1177.54 950.382 1185.15 958.672 1193.46 cv
985.455 1220.65 li
998.074 1233.5 1007.41 1247.03 1013.45 1261.26 cv
1019.48 1275.48 1020.92 1292.16 1017.75 1311.3 cv
1015.33 1325.9 1009.87 1338.93 1001.36 1350.38 cv
992.847 1361.85 982.018 1370.85 968.852 1377.39 cv
955.685 1383.93 941.223 1387.21 925.46 1387.21 cv
896.978 1387.21 876.896 1379.46 865.216 1363.98 cv
cp
.955169 .776059 .502556 .59884 cmyk
f
1155.67 1331.88 mo
1160.54 1324.71 1164.03 1314.83 1166.11 1302.23 cv
1190.05 1157.58 li
1192.14 1145 1191.9 1135.24 1189.37 1128.31 cv
1186.82 1121.39 1180.21 1117.93 1169.53 1117.93 cv
1158.85 1117.93 1151.09 1121.39 1146.26 1128.31 cv
1141.43 1135.24 1137.96 1145 1135.88 1157.58 cv
1111.94 1302.23 li
1109.81 1315.07 1109.94 1325.02 1112.34 1332.07 cv
1114.73 1339.12 1121.4 1342.64 1132.33 1342.64 cv
1143.02 1342.64 1150.79 1339.05 1155.67 1331.88 cv
cp
1058.99 1361.71 mo
1047.82 1344.72 1044.96 1319.74 1050.41 1286.75 cv
1069.29 1172.69 li
1074.75 1139.71 1085.85 1114.91 1102.59 1098.29 cv
1119.33 1081.67 1144.1 1073.36 1176.91 1073.36 cv
1209.46 1073.36 1231.4 1081.74 1242.75 1098.48 cv
1254.09 1115.23 1257.06 1139.96 1251.64 1172.69 cv
1232.7 1287.13 li
1227.28 1319.86 1216.11 1344.72 1199.18 1361.71 cv
1182.25 1378.71 1157.51 1387.21 1124.96 1387.21 cv
1092.16 1387.21 1070.16 1378.71 1058.99 1361.71 cv
cp
f
1375.39 1331.88 mo
1380.26 1324.71 1383.74 1314.83 1385.83 1302.23 cv
1409.77 1157.58 li
1411.85 1145 1411.61 1135.24 1409.08 1128.31 cv
1406.54 1121.39 1399.93 1117.93 1389.25 1117.93 cv
1378.57 1117.93 1370.81 1121.39 1365.98 1128.31 cv
1361.14 1135.24 1357.68 1145 1355.6 1157.58 cv
1331.66 1302.23 li
1329.53 1315.07 1329.66 1325.02 1332.06 1332.07 cv
1334.45 1339.12 1341.11 1342.64 1352.05 1342.64 cv
1362.73 1342.64 1370.51 1339.05 1375.39 1331.88 cv
cp
1278.7 1361.71 mo
1267.53 1344.72 1264.67 1319.74 1270.13 1286.75 cv
1289.01 1172.69 li
1294.47 1139.71 1305.57 1114.91 1322.31 1098.29 cv
1339.04 1081.67 1363.82 1073.36 1396.62 1073.36 cv
1429.17 1073.36 1451.12 1081.74 1462.47 1098.48 cv
1473.81 1115.23 1476.77 1139.96 1471.35 1172.69 cv
1452.41 1287.13 li
1447 1319.86 1435.82 1344.72 1418.89 1361.71 cv
1401.97 1378.71 1377.23 1387.21 1344.68 1387.21 cv
1311.87 1387.21 1289.88 1378.71 1278.7 1361.71 cv
cp
f
1529.13 1077.14 mo
1573 1077.14 li
1615.35 1236.14 li
1641.66 1077.14 li
1693.92 1077.14 li
1643.29 1383.05 li
1600.94 1383.05 li
1560.29 1213.85 li
1532.28 1383.05 li
1478.5 1383.05 li
1529.13 1077.14 li
cp
f
1912.38 372.408 mo
1675.21 536.378 li
2096.85 454.393 li
1912.38 372.408 li
cp
f
352.717 1375.75 mo
589.888 1211.78 li
168.25 1293.76 li
352.717 1375.75 li
cp
f
399.888 586.519 mo
187.77 586.519 li
187.77 579.932 li
399.888 579.932 li
399.888 586.519 li
cp
f
2010.96 1390.75 mo
1784.53 1390.75 li
1784.53 1384.17 li
2010.96 1384.17 li
2010.96 1390.75 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 24.3.0
%%For: (Akash Gupta) ()
%%Title: (SL-120320-38530-13.eps)
%%CreationDate: 7/30/2022 4:33 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B6Wo;dP1TJhK/BTJ0Pn`PliuXSS`1^NWK@)"CV<eF'TlZhu6Za#\np-H1#)q*d2]h+A1Hq3HV7.]UU[fc'$JU,g=#t4pM#F
%Ga\0.MQ6UK5Kh7I`eE:K(aNZ.]+)I,a]`:RDmtpBh6bm5?h0Q7oUTY1pdOf1lLhaaV_:p!MD_mkINUgeN4PT8XbPEs8J-\^jIaQ=
%QYj5?#/JRG])6s&J4ho9dt(N7fEf3]4LmUqc3]g^ZCo>[$QgWsAQ=;/@,MrN:`3:FARFBp6E_6nNhpk,ZhYHVOl?V/4`aA:C%`&k
%=4G:-56:Q,QdX&\\)+BVj;UG%a%k!:6\Ki"/\KLYG=b%EQMeYmris5Cb2>VdT.l3'++fK$_U"a5pBgOUfk_#Yi+rCMnHgE;bk5j]
%7jc#%!O>6AE*dIil<6\*XCPI&MMOGr:uJPK9-5!Q6i^duNNepK'"J9$q,gMV,)YAi3C/Tp64\;h#5TErrb'`iYA5H?l>\n'F`PK?
%i2T^tn:up>?+2GU7]4;Xpjm2Oil!D4F]d[CJ4s5nb]b1%rq7K*RT7`s+Kf=iMl_a2'W1obBt&)`rR+Oqg"mue/\RQ2YK0VZXR'Fs
%7e#p[5uhG<"qP'?<p4Tu7Vqs#'#+&D`_g]6roc*m.1="=Af2>Y)3oG)U8YBUj$X1X(Kn0od<h0V)@A=J7'ZcR8Ks&P?a]oPDrEs9
%:.K6r0k%WUjG?5]R)hi/(QiU$P%FeVd`/HsOSU<&9AQ]AIN<k\^VLK;<Y$^$iVCuV)iQ*Rr87OEg:o)_fm4H`gp>4Bl_%B=s8/ER
%]OVe"hj%O7Qko2$j?"m)_O$oK5h+AO\$R?<!T+,9&^=tm58b%%Zuhr=/)3e3pAaI?ISa3%0>dhWX6JagHJNBt#.EL'N0jba[f?Tl
%O8eN1!]1bl!s$A;Su+gq>>8J9A,sU*RI*A/gn.cJ=?SPLD,9cR[AIQH-9*>sBHR@DC*B8,\a_Fe;QJE/MP[_\7a[R,]'ZLNDjp@8
%n7-nh9]Q&1r.K9C4=QAe=uMgWF*tO$dF!a@R#Ml-0OLu_[IE_u1A:rYS2KiNEJX6)iPGUhQ@4fa"K!p.i3%&U_2koZ9<Lf61N!^!
%VnkL/bMR7SRojgH=_\J%\%`En7J4$kH!9sG7_u/FmDa+UN[n8Wl57LOT)7(+kRM)N5(fbPH@g,2;]ih2p5cbb4UCU>(^"R_55V)D
%mH3L)'\keGS2,ucXYoFr-U5RtJ\N,r-N"\bH<Ne3gX1R3lMqd2/BnW&X;^bpV)J\`kM%rr.lR/7s)`^`0n:>J/Aj"DI2b0`Zrs)R
%rm9rd*`Q,u.b2g+E)!HCK>@okJEp-#`sXZ;4Q,bqH_^(s#8I0+*XX5#JfLc=k89J@L6,fq")\hF['92"3e&'E:=TG=4h,2L'0g`%
%f3;8BRJe*OUZ;Ft"BtQ.ipUImRqAg55QLU?-/&J3F%%`[90l@3d@IF?J@r3ke3?IL^?\_1#(o^l?:Ge%F&WKM>L-FJ>8K!fiW*6Q
%e)]*CaB<i$>PI-Kqgd-^L\i'XB")b\ltClndO6KI7q;/I_V'tcrjhpSo:P94A)/5jIk$u)W;8:qc'E6]OD]DQbRjDnCQ?ei:F%Ar
%L/?>c,\M;&U:t9l"2&%&$)+?a$`Qh,8Zfj^\kHcP,`MYK!?3K$m#0+e\Smf>bu;/u.Q:/bhFls`Gq/Q`;n93161A)C23%=U8`i.b
%+6L,hGKAl.=I4:c2p^UJ\_K<6S*+g!%S29qQ-4ll+-=`m6fOTuF5@%8Fu#VAreFh+<OJ"ckBuU<;c)'5PZ%?"#&3)hPj(0DVo@me
%^&+C<T>fI9NWVh<rc=fa4g!IV)d5&f5-M\Eh!@=P8m]_gBq"_+Ek/;r5%)2XWf%\5GR5E`;iDd1=g2&VoeRe(1TBIWU'0g`maa6G
%Bf=]dXm&8C7W4\uKZA=-0`>(rD!G@oE-TR5&?K@oKC,$po'"8heb9_Q.dZt2pJV%X_+b:t&$7DMY#X&1HEO2l6\kf9(1&CQBAN:b
%D&/\jF:A"iZ_ifu_uDou_f$&rpcZUOT(RiXG:ugLT!7]jUR5YPOYr,1kLa!mCOL6HaRpP1ER4$rAC0r.[KO=36%Ad&JY2*I4_$<!
%3R?<#3PLsdnDG'sn)`4t7Ng(-;B$-+n6U(lVh]m@5.lXuK`h4cq;B6Oeu!,"29Y2_)g]QJ53tsg`\6!#DsnG,7Ya*YrI`nb]ER6n
%:AOA@>JF'XT,!*PkZ1,B9$UtSj5"\P9R]ZW(%X&MH'ck0lB<T;^3p=4!tO5$ald%%cj'BR>+(PN=\i/2rnG>.ekbaE@Nup8't1K4
%dIe]dIDBPO[q+F-F$D5%oMBb&Z(u1;rE.sB1]Oi\Qrq"8>-09Ge`S)jpkEM(gl-Z.1\R"Ranc=`bKGN%F5upXiIltAs3.E2pdat<
%rWN1k_G_A:;XbRlJt5+C5ALeLH\`q[oYL<SQQUQS*0#^XhZ(c/n__r1Is]5r6-<fYn]^b/"n2-J35(@(me5nR[<iOdn)%bTnA(0S
%Z+rTA>']&I=00qo2DmV`"t$BSZ`2PtHC_\k_oq3#a=YlXn%ut;iRdT=]k,@C-=sPgFfhV&$WTs/ekEZFiCe`L,9L(Rj6&NN+2,U1
%IDBR=B1%=14Db#B6j?W[:r/P?+6CJSIsW7pK`_N,A`N.ODLJ<6hqPkjH)c-:&,u'[:X>'PHVp/KYOrqro&JJ'4>^#?B#@7h'`jd>
%00QPF@sWt?bj"(_2k%>?U%,^meVj3371\Sj6)TF$V3?`4F0)`HahS_YH,+/#3\@G%B%%,[`F?=(rLh\k6HT<k/[Vn]TA$LCnc@H?
%FYq::UTu&@Kp%3n_9&t]jJN-9c^@8?:CG:Ma(EN#;6P=^MQKYb)9.:/(A*K^n=g.H26Z'AQ'.Ii`b_TQAenS!BR$gnl]YMg%lfrY
%pnKlIP^+Y![n(&B8Caf+0BSfRA*Om%:6^S<)F+%GHc;W,MW3_C^mXLWnRT&B^$D*\U3mdOiuo>1O^8_t6M:;(;2RT;(Zf:3X*HA@
%HPk"S;?"Vmk"#->Yk)1cfuel'5H,I<PBm3%5&/r4nnmaJ:[LS"rhNj7:C?^\[=/Ir.'p-N1Q+CRSp:&7JXe&?BD_0\:E<b_:<_RG
%%^X'/M6:<V/,3!)(WHuW;rgW>kC:!.1lM@V9A+?7da-EM)=c`^?N/q51NU2%'tYg;m@"7mbjF->Y0H@f9\?b["]sjFg<U,XFCa[l
%Wm.["^Y>d5K=)d9XNdm$goC=RXdX<$k]mO4gY[u9*_>dMh,g2I%D]LmI9hin\Jf`9_-Du^C.-1&aS8.6h2!u;(S2NX*O+"M`r7"I
%8HKQm2?)%ift-nCGm_k[IQ(DI\+%J#cfm,J0P#W?aCNZoJHpq64uUD85$!?ON">oI_.WO]%"@^ETJgtg=jkJ_oDKK];XA2`=srFr
%U^@@nZr$YDH-cJ@0:(HKhmIk'"(.p<4M9VC'2O#ODP>JX+>oZa8#rOhF3dPKrm,mrTf;-3)r(.c']JuEpKYH4,P#HAA[W`d4mRE=
%_u7fH233K"7eXc`I4!47(%>&dX1btaj(&8o9eEI=JAZ_N5SO_+'Vg$d34t"oK`h4cq;B6Seu!,$29Y2_)g]P_#FRmHkW+s!.Gsoa
%NfEt*ci;TWa][DTpnF_4$;]h\qQ8*<J*6^DhfJgA$3q)j2d)`e0Ohcr45^(/KS.&\@#g(hF;FI2ht`l4I*[#Nk<%SmSaZAL!3c3i
%msNIUIoPs*q)r'q#Ca(m<Z)O/SCb*o.I_&.fe:$F2uidq\[kY;FoWXi`1o7ST]a$tC0oDjL%EGG$@5lXQ&KaolfEgL1Ln*]n>V1b
%dVM6"fCX[Ea;s0nRX]OZjB:j3'f$_G?6Pe>aQ=5C0?#-?MP]X`(g'HpAi*.M`Jjb(R!$(UZh./>['\u-]2nOOfs`H%H&<L&oeUYq
%5FY>7q/:[SmWT&)=N/0aL\BJ9F?As)j-!=;530'R9CdUn?AEG?X+:c5.@4aH#0E'hd;Vmh2^N#_)TOuO17MbA5toua]a01bonAoZ
%oTn_Z=RQNms(Xh>rZq]&[sVroB<g_,On9/:q=Oo)rp7\G-)>hFAR9VL(LFh5edj=EoZA_.iMBV0+n_1IiFQ>?R292lKpR)DAMu?k
%H/[imKpV%llCZPgo5+h*\R#b*dhSZ#HI0UVH'J#8<Z8]*eZ:lS3Bq<]Vk3$Z'4,YQmY=M]3N1oK+#`)3&+d[cVM(?2%_M2u*U?0B
%Wu:Boq95RKr1S$VR6/H'43..g9]*`Jc;.pG`m4+4M93t$aIdP]PBWr)YB,`1\_lgX6t_4Go@'&Ws818??i&BE;j==t-1fIY95=G>
%n8M.Or2KVY`rd!%.Y!m>AEFtHp[FoudX*m:g7SC\HBMj*bAFqF/?nc07ff(s[IM*V&$M-B5i:=Zc&0f=&TR\,joBm$d:S*5?V:U;
%)eXV53I79jrO`PujdG5V-+'\!lPpfC:<U,#=j[=4?9Iio*OIaN]YoBM$j6MEWBVnX;4g(4P,D(#*o-DR)"YY2"4FiB0ae<@]T2M&
%"(5\Ha8"M+j+Tej3l\gmnQclH<k(2oA'@&6k&lVcW+5`edS7s43gurVZCd_\29fCHkS2oIX/RobiUTIoe+<#BoX+Bu[^9L6X.Pi8
%Q_&9q^/$I&$pU:8e;/lYHO<q\cWL$J=)SkfKV'mlC#N+b:bS6)eA09'=NtaD$j?25:E&<tSf3C`iC:@r.qV$%m!CK4A]nn7ETmUB
%H3Vd7$VWUY(W1,c%u^8":\042jp+,qcTq&+[.=jfc&Y,140#8$Jb3kD2J?!BT7#6?FR((LZWS!4T75cG9:4`!CS&t-)(F*bm3/ZY
%U!u_]s.^LH]HHgjgV(7m0Q6[]#1[p9W\Z`]?Gf%hq7SQmr^E*K+2+Apq(1Zu^$PsbkO']?[sl\aJqms5s3$/61um&1/iV,<VJce'
%g"\]ZRqHg6Ci5ihc*KFSjuc&Oo5&<!Zah12*p2EpKm>`R*RZqYN1-Yco5nlAcM_$A0Mgm2[HX4VUXH\,qZ@HlDb/)N]'ka/GuC9f
%8a3BPZW+1d05g`dkAq\rcM;Gge'AIMpr)ATB$[Qk#&`SLQ'e2)q9AS^IQlo'0jWp3#>345nbQl.aI#`9[LRkYrRU.FTro,G0qWm9
%ChZ>5o.0+*qUt<7Wd?2Up>DeoG91+/4YnG0,<iH.7MuoQRFIrQ=5Ee$#N'q+,3P!sE4fA,miELVa[)!0T4QbhqgE`2G4"$iX/m'/
%>Z().#uKR/'"'s)SfVFEpKe.Ir^b"ufXYpf(4Mi^'BYQs'_Jc:o)-MVR5*M=ps_YlBf=]dmG4,*;2M=MNd94P^Ce)M?LVQP&,nik
%D)Ahq2DYQ!dpfE>iE.8:%c9C7miAX]6A[[p.@eL9WUM?J&0#fZD0L8ROp`F&i4.t.B/5qIi,/>Z:&T[U)80TrhUI0ApK*j`X(=3^
%0-N<fAQfAb_suCga1q7)igC*ZVfUM`[kk&UTP,[(U3TH)O"Vd11M\ce'`GNSr_I<+rgD('93D/:md'=R#s:2]g3\2+:.?AQ[)C)p
%%dtF>6K,^U0obdT_g='O%d`rPK,;^8S"ell/>H-\kamh.T.(<8]qG9$]jom^A2WE'3lW_^`ZP&7Qaq1-[WD*#=MDCgoYQCPmMrq0
%@I>+J,;GTJaR>)9^Wnd`@Kh&VZGGuJo_^g?S$hu!IQ*+NTA_S1BDDDc,?[5o).jXoRihI+[ibE8p_c;`M"NL9J&ZmT>ksmsjJ*M_
%liU!U$6'llkM_YbR5!uSE-M23-Dt"RI:"_mZXP6%j#e\28`'2"'0l/OO!"3LglM*71Ohk`pa7&EEV>Tg+UrchPJ6uE)*bH\2T(;D
%r4(Up^LI@X@#kH6mtasBB:TD-KcFN%N59<h&[5TuPWk;iZr;T>4FT4F.eGUA0Ip<`o)U_Sjef+`)8l;B"ct/Om-hr&cKCl4hU)[Q
%rQ8pSOb0/?Mod1Bq&8<NX\#DE/7-Pr)2ZEu`]"^?fb(R(fb?5cDTl]aaq@Wi%O!825%gLsZt?r:j\6*>;!*74l/Trmq(kn@Yd+%5
%@J&0WK3:e"B"R\$>2J93qIIN\(,MJaWo'o!l)_9p:1sf<HjS5Ar.&@Me'6>!AOtmNLmO]/c"7_\+\0(rHe/pW`Fq;^q<rf.>N@`^
%r[h@C_V[0?Q5Ne$]OVe"?c)*:X1f7LWE"&`G@m+JNM$15Z[Y\aot"#*rEg'lDjp>.ptIB$a8ER^oL4'6![R!k9E;JEeqY*T\&)OV
%%uM$J/AmR!nK6%oIer5oYM-b1X\K?:"E/oR*];2,S)bORADeNI5m+1]#a069;F4>@B/Ee7I/q4\cL=WEAIJOKdI>9^r/&LH.W^,>
%7$:PN(!$UaY/(@.@0KNrh09UR>P]@I2o"k:+aeTiCOZC7HmcZ*8&eX,0Dp'Gg&SID?nnH#*$s/b\ge?1J_'#Va_Gt3e'W##ZA#K`
%4E,cN,IBNJWHeTB&<31:83Qg)s8FBM*(R!D2*#TSpTo($Bk39)/(T$UAeRO*#P`[@"HHp$'\c."BnQ=XM$'56Ia%b*'[/TJp&@$h
%NU,kV1\;HR15jrm,UOtB"/K%JhWS<3WPl!)k8\PoQ[B_g\lSP/>$B$387q[cnSKO::ON8GDR=cBKV%Q_RWYZTM=#r'>@tp(CI;mh
%HImC<@f,:cbD>dCJrPg5pu:+il+><r?sJ]K\pFi.$L9580rd+U@a47_Hkjik[X,0@..UhcFJ+LeZT87gZV!E%^(s8+V2o"Q%r8Ps
%]%58WO>iBTILVEdB@,&b<*r:NCrk3d)Vt7/gLp>MEt$L5gp*\YfV&a&(aT/(TIb*bVnA&pk<S'+cpHXMH(^0"p=""3QEE0[%dX=1
%.Df^@8CXb+FC/ASX5cj>N/gpml:0r<+'RY=IP>kNSs*@L&$;CtKVShS@h,:uVg#^(hm(b6FMVJ`Z=[kp.F*`iN$>nVT)nF(6Mk+!
%o+0+:?6D+ibd!kknoJ38fm`ofZeDZ[UL4)A+$Qfg%9CrT^Wns@RV)0_>QNdJ@(u8/&+h%rl%Au!K)>9S//Z;ZIbo;ZYTP`pK;Shk
%%u<9_s%/pZ^D#_H>\!T_)^u2s`d6&A0:\WF+J;R[G2"%D0gW/8/[5/Al&5Q"*D;(aP,(lQ7&+T.',_3#5nCY%lMj1hEhBfXriarF
%ZW+J@rq$$!p[=b%mCH0m3G+d]<&qfgdNJ..(N45qcmDD*]L7,C(bu\[kCl^Zqm:X=/E,3)60_Br5(-\PT)G/:_soK$OVrlM'JE7c
%U*_B.^5RC7p^OOcGO[/M*=/L%olB6>1+Jo7-BQ3*hXkZZ$">7Kr=e`3p$WJfJ=$-KlY,K&XTWXp5Hl!ts1F`<Ieh0NbW2>1;j=6H
%H3n0QatYmSCYikfIh_cEma]R6<km!ch0OEM0Ve*M5bI&KHaq^JAY2X:6sjltQ<e"cp`+S@?sp':S`oJ+T^#)5FhS6sD:Z=i0e:'Z
%cFTQI\)ZG5IS#EDcF(lVrM6Dql7ZU''VI<>Vq:[N%U]IXkgi&"9n".e`<4b&Z`)Cd;[V4bOiQZ#V]JLl">M<".L.pV_FL-p;760b
%VH^7ul$]C4a><V!cW+O1Aeoi2l%%n<qOV8_Sl%PsIs!0u),p\U?[9FCZeMGu:#4Fh=CuDX]07("8B7'Omc].CLAF"4Q$p2\Ws']r
%p5s1thq9*_eZt.=j%>>O[:[JKBluda(WfNdHI@WA47?odi:J&UJ*?S"A-"YJW91un)u+:]MmRQEgE=`-,Q64ABGTo'b?$MTU&3#G
%knP&K4U,3T/ZjIVf'K0e*Yi;M%2Mfln/oFNe+/%oCZO1<&IAp@$t`i`pFNFWfW&,1HhEOTf.gLDK4YG@3^g*"Rgi`A)o."!o$qWQ
%ciZIFqY%5`KA5D`mN#9hOYCVBq_mHEjM?BkVXu'%$jc\+GALoide2Z#rnfVNQK)#dGBnIqE\'>-;HboZ&n!W??f/l&fqEnnAI>n5
%:mg5j9Z'S\_#9*r1:dpMXa(=Q7ZbMl5;IVfF.8n<%N4XiRRC8(%4ma16Wf[pD/%7Gm'7*gL\%.KKuYW[2FL=CF-L^Wb]u7=o86-N
%3f+KAlq.,/>N1G8!sguo87lDBr[RM,42JF^Z$jF-Q)t#m=oghM3>lXC(ntj])j.iIR[pHr\X*7*BX.*.2F9eZXAuR[&\D(&*7;3i
%,@GreDNF@""BK:r9fHoY#OF@,hB^a!lX-bbPB,=9#D^q7Cgt.=cA_jWJ_E8>:0usj[QYNAJB_-lUKImkWV\CQ\cRjlhKR!iRNF4$
%+OH-u4@[_7Ji%[bJ+`o9m8NnTi]Eo9/9aK<gpqQY=sK^"3.\J0&Ro*:@jDD_DFFbAM7iZ_6TKNO$SF^_Q0TWu5N9lkWA]cVUDD*8
%3[Rt._r?U[D0P7WZ<#e%X@$%!E@\kZ:rSQ:SAGk2pA0(;J%gG6W<'`5re\eUoPQJSiUj8#Vc2@1%3`b$M=^FqlmFBI@BY5$dV*;/
%4]7&3Ym2hbmh4*k<JfZYP48"?Q@nmGjSa(8kg$tGa9i_\P`MO*A@sR)+CX1k9"r.q?cmsKeTsa8n:".79ZbNa?tSkQr/Ws1A!i!u
%TJ=qe@s&O&81VR_"rK5I<p!^+i8*>rOBT8(F;ik'Fq8"SHJ>AT[8.4R?rXIKe3D@kZog0R`e*ib.&:r,+bSp[%(<c_>/0saOl$6t
%/I[EBE>dpfBI-RL!n?+2_QLFn^rWj@h>s[LT\D*-lG[,&!-O5]jV?Z=!(^AH>(\9Eat]<ifPH&='TUT?prG?o)DtSUnLdo_qn>8$
%N!.?_N=Mrb!#DB;@s!Ir)<&N=ecoR!P[\1g[!hBq[0;l<BU6ohi!PkMIg/lZ5)c(L(bB_B2!ZCB+FocQ([rXR%[RFoaQXI&5[0kK
%9H&:ln&IL;"E%mRXmK;K#O!fMD1*$?Pae47WW%aVZ@Q1[fc4Tar&A;q!L7(Bik;&>h*V"628LsMP!OT9pNE@3=#;J^Hjk_.-q<PF
%>BU&RG.m^nBQY*2dm!>5!!TM8F!!p7_iHa4#[>hO\i!#aj`0fC"NGOPA8KQAZ84,RXQ+[V\82QVLIJ.,qdM5;4%L_F<gBI7(Lc3Z
%A2-f#HG6YsUU6]KefiisjhS<KRAHW"&%^nX+7$E'0OQ0>L^gp#Z#gTHhrAdB2*]9ua,sdIJ(-^2"pD7tA$!+VOrjO^5r"_Q3Zks6
%1,F+HCX(#bOT#/N-hMbl[qeG@ZD_C&"84hHmZ60F9BnmNDue2%8a+P_bkUah4R<WeX$@cW:71cJ7euRC>DZ$9Y%T^kI/9L.o]7]'
%QBus-*!7td*pF/4cJ6"GDd^mTW-i@);K(`,Cmn)UFc<8/SIt<7S['JaadhB<Rh$S&)KV7#\V>4sZ%>\H]X))X3e,u(cS`,]FVTk^
%M>7DGjr'+t[I$gi"8<&nHC%#,+=DXdE??S"Li52:H1!U646F=2A/I;*[Hq416[+k/>m#(+OM*/tHSs&Cf!`)uKWJ<8"u5XM5OjGr
%qY1Ck+-dMGBbmb8f`:XBB@H;1H@I;Xg^(fG2@l%Y\,2*p/P@0Dg%4AL=!'d;#i55=*iP[rJ='49p[/s>m,NI[M;r#t(W]ZD:-cO9
%?`0q$HGp:7`!e%DD;Usc^$0<J.,:IT5*Vq;mAG;OMt5fTgA%HA3#'RlGjHR4]53[^iG[JbNuIe[g%Da<&:A*=Vq]WkQ=1;-d>XsK
%B\N4V*.kikK8Bg81]\iN;&H71q[?Bnf6h_c^@)k%9;/as+Kb?lAfDi6Jd!5Q;^BU/%VF&BRh#c1nUf(<%i8c`IGJKET::_NUSWD,
%_8o'gBRQ&ZpS%0oXRF%PALMGXK-WY+62IhD!_tG(nGo!Ye\'H@=,-^PB,SjAQn]&O&9sLnO0c2WB\kK_Xp'<\KS2/0qFI"[foi/D
%JWVm&]#I3i"4\TLU(!D1;"-\DX6.bK@;LMJBsWQFl2^-`nU`bl%littMb.g+j-W$?q.iVE1?o7Z'EcGoD"$'s<=\1:I3tl6@BOZ^
%1^B?56aG+,Nu7\r@ICtiJ%df?Z1Y$Bm-T>t"iQTtH\Y3889<)`+#Jm`&Dc@4,p\9_/[M*mNjW6*oa.'.2r6d-L3<\#qH"kf,R:i3
%D3U#GK(2SslFeM*CLTStNK4g:0_b`EoRcg.jQ(kjW!;_5eOMQY$^KMi2kJH(\qN?!>o0b8,IDYeIr5L1mG&6IeB^J*TQpp'h02\A
%o-F_:i6rk;+dlou=V^qWA@bn2@+pD8e_We`ZK9-7`f42+moeaZ*bEa<<f[XS3KCc4ER9d8qQT#D6X@N4[#Rn-@@EW^s!6V"Uh,Ds
%5BUf;[OB0PRcA.DcMRZqNILNk_dk.H/YKX0S"0qO;NJh,/:TiQ"`JHj'(Z:b(YdCd#77<KFESX%O@7XRSOh/p%^M:Ih;t;4oAKf0
%5.Y=/?dm)1J*88AM&:b@gf:p'ADcf]3R#L`'O&F`bp.$%V:X\7Z9E/(Nqj7Wh5nAn=7DeIir;lrQ/D%+GLc%gin8gn^!3H5cM#dj
%7U*=0'"RSTi\;N:p%tk,`kN_a?gL8.Fuu^d3I1D%SDA@hR?bJGf'hM2rVk_Jb3r\A?1@^nLC5f;+s*Z.ILlI6%:.blFah-CLF!>C
%k2Z#BV%+T5cf*3%ZBs4opZrWs<"VCN]m>&6_M?ZAnhpAD4?19_1%I3</$U,mH=d9Bmtt!?=sRJ8auS@2%tOm(Ho%p9?d%pf\:n;]
%0[8Hh,eaaqeduTT@W/f#b/:.M;nP8a1tqa7r(<8)VBQi82LGe:jO[('\)-W?-%6<$?aehnpd'NsWgM_E"cIc9Yu+qHP1UTQA<Q&p
%Xl%Qte>fARH"J5+RHhd:r:/&NT@aE^j8$1XE[I>Zj+-!;a)k`=HCl[jmOtJu])358)PJMh_\3N5if!dcQTF&#\CArTP^0fK07Nq-
%Be<K"P&tA:UjVt2N_B8eM2c7[44NH8J$Io!pM[o^ADq+1a257<SUJoUl]MG$=^43qLRuUV]H+-s!ii:k:N4!ZoRRgQaJ-"RpuUFC
%\6t^1:#\:EU[Sel&U#gIHZp(:..+)]dMn)G=]$;>H$]mp[VK+3(%Z$S0C^0u,\k`TqX3+?O`3k@E7ct22]UL:K$m9Y/`&03h99Kn
%i(T;oMH<AZCHi_0T,b2LD`^BJPWmB_9)MSrq"seTmI81=g?r'`O%R[7BKWc<gIrNN&fs(W2]fCPi2_(_oNaJ@fSuK:ei&Q2+[L#$
%Z^7ifSAYokqe,-pZegZ`h(G"ET<FqV=?XDp*L%%7@CS^R\'?Adic7>N2qhh,DA<]7:ec@+79MT7KXm/gGcpA9L(\4']GG4_E+h2@
%>)4]fa?lmHIc+.]PETiB@s]3o9n`>OIkf$!rJMW6L4>o(s6B?VXp#AC/*Zfs*-Q:t$U'4Jf,bb+_:+l4s&rB-,Jn>>(I3<#)gK;>
%Mj]*p0YaIME':S_%TX;A.?$U]?h#eN4@]:-l`!h_&f3%mQY"P'Q)uhS[9tl7m.g`Fom;0BSMU4[8$Rk7FM<k+Y?sFuq83a-=+@"W
%%f/+6`g362AC(3j>LrcN@V<g/G:t8W\?^DDQdutFr%e.cq3BbLhQLOEI=Ln;s5]4Ua_<U2Xd*\T^V,&?k23`'Wq^e-Cri6)Y,2'<
%qo*2tHGs(YB<lHfrr(s0KE'l2[HKg^GN8[4D>Dk7\e>GIZRaITs1An%r4.Fn_10S^>l(Y8Y7(=KF$8p*Hetd^1_2O3ZN'1%rnr:J
%MsLAZeO@bj\nNblbGFT9J(<%0rn7^cmr(U4hu)V>AC(9V]RKHrf"(__s+/a,=DT9Y(02'+.gppnc/h8?\\ftOgWM5Xb_[*>i7X:u
%9X>kU7Lp<"e()6#/D>JRfO!)d(Nuq8[tSAc,.EYZ3YE2<*Y7ND`t/&[$YQ:L@H!r0hH[SW>icc>)&VQ\?=-fZcM=(K$4WB6*'<'o
%N(Y"\Z.OA-BP!G2S>NW=.4m15XJNlN@Ag[R1^_imiLI9iaRZg_U:A'q(6sX*?JKpbPo"Wt?LJY.Vh\oCq`-"0G^NfO>0K1#$]Fi4
%Xmk?;@W6J[;/Im9C0Aebe18)Li[]6F$I^Oa09Xl)p.E!'ZuEHP?<UW1<gH'JHdsDhG4`?kqC`d\lGN5Jde6P]^Q_EsX%W>;4M5bK
%\e^Vbf%XD%f9,:Rd_j()G"ITEhCk-iNiGa[QZdSPe_,j3qd\G6QtCX*k4EmYe6RK)Al#hsZIF_dQ8_T@[[.Y$3OcY&4g-K1*,PkG
%F)kf8q0&HQZi!e+]e,RW%;GY2q'EZ..Mj$SrfSV0XO^#,/!6)dCIO=$@OohWHbZk%_uh^<b+<]tZuU1cCTc`"f!e]JcM%Yr)Ij%'
%'j\IZBr8$X/)>16H?H'4*F93@)`Oh7eRN,IFrl!49cTS<lG6W+[$lEqhH@NM!j1"NDY7PJ/DZ%])oi30X.@u4%U-d#m4Ef1;H@];
%Ot&m&>H^XHONtd^![hA#"8QPH-1LDs'a(;Meo@@S@&-%8EO69^:$BRS7P^2;b/_QW_4@KI,e3T7C'V)-=t+];R(NpCR/WkRZ(8pL
%Jo>d#>['t:L"7FupPWh8A*RoJB4%U>mIO!IgA-W*XkfHBdorHJ4fm1ma8<9)q0X7k"tP`X:,/A.Z2KAC..tHA6`97LHKb4d`X6Df
%mH)^\M%U,;(+s-bAj,XrQrrN,#H-mW@Inq2h9Hl'B>sT(qX%dY?SB._l1IN>Fran&k%irFnocE48&Ok9r:KA;HrMbgi@FGL&&153
%T7h!BMe]b+\RQhW`;N7q=t.rG]@@Zl'03W2>XtrW2jY`BdH,hQIb:`?/0+5M)rZ^5_M1rl'K;32rMPX]BSYKT]0(Jp!-&]3hQfo\
%-4kuO1Ap6CNS+oO%!1(C/i$Lne2:/ak=)6S'=5jeJRb(%AP[ptlrG`@AIgW[KY93RN\.J,PAT`#YIN[Q,L1:5X!)B89\6hMjO5])
%ZPM6S8pX7phMrCRq-Y](j<YuE_C*<h90OjR%f&V;BpX<4Xsh0(obdk\#TK=F8D)X\=+nKGd"65C[aYo]gSM@*k*Oe2W4(7heSBFr
%ge/u\`QO7ITNDV()"DHk9pXA]&j)8n^?eL\`(!ME?f[fT69S/3hUL9pH0mnZA2RK3TSM9K3kCHW[^hi3ZHP2:>s`1FEd"R$mdIWL
%ULZ\fm^?W'MK-$#W\0n1E[mt/A_"`A<D,JN=#\YGI0h`;fj'T@)7SeVBP,'kk%eT_HE1+O;'Wi@Jn\[e7s-U7,kj(!<,/f]bGQDB
%A#8M/eQ>=OXuDcaU:@b'Ho3gge`+EBVE=u?ho^-r>N).-jOX$..CaN#<Jt)-=%c%fX[A6.?JdiM[^T.ga6h?N[=dl0]+Ym0m?Z.'
%fa3Ft[@Q\`lZ)*hFe%:81@(n[X/2f-)eXL:]5a6Gh9?+hrO\mqXVLRp4kAW*G&P=JV;"W?\oM):^TM>%`9Lt%25-Uc)i:=*@jR]Z
%H]*`H<=H]#aiN]bT8[j3gW<]uF-nKpp9%:d2r.A(5!*VZ%aQ>]eDk[/Snbs/jO+ttgI=5tX9I(>&,ph-=DQ](<j,lbRFju/c(+(,
%b=plre)'[dK3N\3=F&U^#bL$4H]Q@hPJ+G%d+W-^UZ?kRCXr,sWp/pL``g&rYb")55)9GrY6UEg`T4k9\n<#f]A2Z0[_<S>biPmd
%LXdo'q^?E,h`fc*Hb)8LcnuPsVpRL7.+[eUeh`(/GTGsJj(l]cX8CM4+R?d'fesJbPPh8nS\-:YrmQs6WLh,+o_n$^\9N>RfR-5\
%78>VCZd]Z+S_Yr@f?`=%[FHg0eJ>Ir3tL06F6BNDmXHd3c]sI"E.4YgQ=66RE_$OD"?*R0`=Dnt?X,$!3u<n*bJW+i^2fXrgUJZm
%T$Dqi]RSl`PZRE;S,$kWE0d\Lb(\$Himm%"ir1?PH'd8K^U3R:g6MH?`Eo*7[nj0L/*Y[O?m6u61tV7iq==AW=^JVHb1l/"C&d_r
%jt%4&h,J,:`S8b_P'iaF]I_i%hK-i1?SfiKdH^8I?%+qOhDN`tj*S5i?FrG].o5o9Vo&-pE3&2P81kj*%hFBFp7qXBZ3&K;`_N:_
%a34)0nY;MUb>3^:/O#a$n&eF\]QX)j\\(U#*s>^A\Th$^]`a%AmRsk-em=s94%4#NT^\WAls<t5GIuOueih*G(Le36CuMC9Pq?*R
%Ko;[Gg:;fLMRbWl?SmfR[$%e&GqGR')6;8s\e")C+X?:*Xh06m:W>$0r;Kp*I!0qe/_A.WI"gbYK?@>7jge9)S,OmehMbI@)i^n5
%]k1E%n.:NrkEjSCUNq0EJa'5"/KVRe*^Yk<<om_iVQSEA[B!83Y-hV@>(&2TY1.C%XPR'hBl#_O2fjtu':1^qXp3D+ApT_jBGNOo
%/TY3XFNhXNrn=Fh[PqD1F10`Dk+5p`B#oH-e%@+_gZ$u\J[St^q1rqU7NSb7k;@Og*F(4tr<Ii=D>@TECmQ]$.IoHr?0YgOiPT$_
%?ld2hp60#N?Ea*qP3VL3$o\ab)?_r/RUd5:m=$,?cn+t;m%9dYc[;++$ThuOpS#jtXjre^Z[U!!S:qWgem>*iXYg!3)?5"j2/-`d
%p6'O.T9^7f]9dm!-c/XNpgNi+fBO.59U\%?Q@T6u%+@tbVCLoUdVeD#ZF7BUhJ2MfO15XdAiFo"\,&pVSO@&hr-3EacuY9[D&6-5
%aD,9sY2dq^9IQeob>J(QYEO9\9F,k$Fi^MAgH`MK27+qeFu(RUkrS?<?bM2.;J#!p0QsfL=Y7fukP#MWHnoa8riAl)ki;)C/b?Ik
%D+>M<eG=2E'A+h#@2_J9bffT\2cY=>Q8+T7M3\h*:9lA,YnTW5<`2B[phb3g67dI+=EHY#<-^7Xe&iVAA,\kuH!Q<j_M_-8&N<mm
%$e)&XJP\(,'[Hm'Wph"_N%acQTu?3l$`7@!OT0OV[]^/WX,qR>2>h!<dcKMh4Z1E!BX22#]gRjX_c!5C]X&Nb64_oIEGjkI&I@gE
%%]bu29<kP<h0?99g'DPd`&8a_gbPgm0Zjl[/>`p3=$Sck<L9n7VA(nN)]CDu4kU0qfC_O;c8KJYDNC-.P6[S8fBIEX`(Ve+E%`e\
%b=V:S[!>Z_O)frn7l'LUEu@g.QIZh6/bd]$FP]D`D's'a.GPT`X3r`?4t`G&2RL_oN'DDsiA;2Hn3f_h+>=7'=?$l5QdBnfZhJ2*
%3dkPV-eHg#p1W55G5r8'_h>J-e*C7RVm=hlk^%##<dHoW,2=0>(reX1M#D#f.WIFM_W,SACgcQ1Tlbij'E*d;1Ee\hmXfO.]b]Z(
%e8$I4hDfgSCYJ&O67Q63DsjNp\)[:!YnPG9'i3h7N^j\3K`6-,DCXJ=DdIUu""N!@91eGJD)dt^O'):-VVR]?E\:WA,_^6G?tamA
%G&;:,7tta+cYVep+l"&LFtKb@.7?t7G6jNLdBFnSi7`K*@B*+@C=9%B8`(n\c!24q"0^'P2ipV]f`Z@E7cDZ7A(Um#9*KAqQL?BC
%o7rn)-oG;cFHF5_r>Wq@f<D8%]L@dhRoJ2O<R1eK>/=`L]!tBLR*E%'DHZ96poW1V,rS0rj>c"S59I1!ju1+1)-#:a8F#,5ep:B4
%k,OSkCE1=>Se<E=AGK&1fV:b^P:SS/M'X1[LV6)]g:A=8/p32jH1'i3[p4j,3fS*RT;D6rb<!ji^.HI*9K@E9NiptC=+jB8S\<T@
%5ug9,iRC;[fKn7C-]PPX&^qW3cZ6k@KDcs"0g3+r!1gh0U6(q![LVa9qm0<E^o$YklgjT"?K\lKM!&(S;]E_W+CbpY?JUt-q%L*?
%H^-hB125kJ#,^&^1$OGo79\quo9@G"8C8AaHrj#YCMta%)2P$:2;:g.gohcOXk[*>?dr:q::P@^+&(Xn+CA+",4VG_>SDbLTgeDP
%4R_FoQ*]QA>FqZraP'7d*++,g>f&oVo,RC(#pNc-Rl[L6=E+5m(BFZ;;4bgJq\lup4YsdC05^e6c`]XRDjE`E>7s_\m1oDTo+E81
%8!&,`k\*2Nfh@;inghPRZIZDAo-_/nM>AA/6%7W#'ie:XN&>&<Wj!XZpJ3Eo_UE(d?h#eG\_tn7P2/bPn)C6^OE>Z(d0n>BG!1rB
%)-k'uLVCk7-.hX%!\IrGge#4P\RY%IJ))<X%q\Al[=g\BHo%:T`Gk*oHbO9l&S)P,1rA:<e6oE^6CeSkZDYMFkqR>dbMOAr&L/F.
%S1IeV=Ti19"3'ZH+Jq'B\1An%*j<Q(BZ"Q*(iCh^U;tMN^@mD<6fr'6P+,qU.m[]Y851$?=(`2P=c&[[Ll`i,*DEg(`+I*,m19$Y
%R2IVP^bdZUfJateL4^.-#cVKpC_==7?cc,sWV;.*^dOf(kk7!PqiEE'U<0;6?M:J<Y<>Gr.ioaB"+cL<GR`cR/\+#\hPJhiN@WDL
%5"2o7=<m=g34c\#(8_t2EQa(#J1OQDN#d4)al0qo=4aO%h@(.G+ZC*N[thgnJ<:]=0e*hU/294?,IXQEYfRG[P&\0ugTcPFKn`DE
%70%$^(jp\#2'g6PFS'@c89iQ-g?)cIZH<PH@=r4RPKe[[Y-N-a.>'X1ja3"aNAol6jiS/<S4>/ts+ojANgcAAQE=R-ApNh_a<Cg6
%8&Wh=?f'!hGOfO]0dc3.-7\*M<$`O>Yp6<UA0O*k5T9+.@FTR'.3?6fEJ9a6@>e=8Qt8AS!Uh%L,^F4c=cZoHK?7ZGg3s%bJ$D61
%flHHI(aUad^bjG;2J%F5]\9*W@2='j<Wd^5d&C1%?bG$K\UI9&lWRQ)^42*=%_)@/Xu&n6'e_6"o#(;fnXec(HO)Bir0n'q8+OYH
%$C-jiQG.Ui\&/3bMek_ik$it]@p>*=o;tGJYsPfIs3i,K#s"r_H6OLiDILmhF[)ZKaOr"^$kqP;`.*c3oSX\k`"]\;Z)/'a2/4d&
%+#!`_7E<Ga8"!>\F>Td,eckoFrJb@6CSlm"q*--O?8Fa3AruA5L[h+j`.K8ar^5s!+g$?\":IWo)/a)*Pt4,s!6'_!Rg"#4`F,uL
%9t,JTJ&bj,<he1;,LL39H5t'#`;O_ef$a^l,VUHf0B[:*27m51)Q"+.djC#aof`[2VKDAa3c6=7$"iM.9M2tX6JHi?iP)*BCh9;t
%'-F&/DYA;4\+=`kjn/D^pT(jAaL,n/b8_T=>%#:cgq3Ct@s2<7M0ebCact?:_,(9G[p[ilM>`+S9ebr1A_Z*DPfF(!k5Hg4`f@og
%*sOL8r?BG\2'#e!'-%<iV\M3&m9F@DrDE,@.<HTd/q=^:r<)kQ@e&P2T%bd/6<(^2EP%QdPq7'!I;._j/(!C"aSf/^p('78G*e;Y
%,k:((<C1Z0h7Q:?WNg%kB(g_#C346Dg&$p]-"*C$aC#34oCTQ$Qq96K0ANke:kjTQEq/oYELttiGBqq&m1iog$0S4s.jB6!#<Rq1
%qa)nT23S9Eq@1NeGrVBk?='M:QV&Zj^:N"dS,^1IhVH20R0al#)9DbDjtQb"`9$JU>M[K%F7mSfH8;!)?V(t84Z?,ReF7X,Q`f"$
%8+W\!=LK/p`=FgD&D7Sl%^!.*cdg[Q&l`Ab#Tsj5Ktmn2X/X&-F-Xj0m.0e1=CnGd%lJ6,XG\-?iIG]KV](?Z0*k-r.BWXTj.`(S
%X\%WJcO..Q'2Q5A9:_(pJm1b@\(!m%hh\N6=6g-T#MMR(W#FQMXqnVg$\VKfkMKCo6n:NX,@W"-/qp%$i]kZjDmLI^$bJ$.3.(_T
%^:fP6j?jIB(TGs$:Tr';D#8)4kbpFm@_r.:<S;Eho,_Qn>s&X8@JN3ARgN#IO6'D?R?`b1E\1-i<eHG.8Z=).$M#=>]D9rbq])[%
%Z1<@;Z5^L6J:'R]=i7\<THeul*K7?CfX8S2(F"t;21fAfL&C5iR,r6OUiHm=4IkJ1HagWKeBq-b`R7RBWj`10O(="^q3@d]k':t.
%$$[=(7qY!OVBQhQ0PMVLpcIQ'[#euKHNiEc2)Ll_[p1Hnica0Q-2/4BLVJPfbq(qap[QVl&fq*iK9]uD;CTQ[N^!oI#JVsMS.16n
%)?CT&c/uW72MekepG)q@:"2-")]4<76(Ij$!]AFN+Ilb/#\*G.DZtm8AlP(8rutE!:jFtJKoN^q(]f1A'BF?n`(8SV=YtQ6)b[OX
%@H5/\YfZRrDX?mK$_rF#;*LoZOI#7^m\]'[O6nBDILmXr(o\>Y/c?<beA:Ah7FFt8/rNka6]h0'+Nfk>aIXSZZ"pXf,OJ#\Hcaat
%'fuiIHQlZsY(:Df$XfZ^*KXM$2H;B%F(7b`mr!mY/J8G]eZR9UWjKi0%*&PHSV+cLO*`ae^8T]HBiI\iDm"7u]:7P,gmJCg(/rY*
%`PS0U]puI>!4nt-G3'3T]bdlD#T8,rG!?a1WQ&h=lt)qT-s#'O<,;#G4t`lP-u%V3p0QcLf810m(a(SlpW3;s7,r)foS.-7rhDu/
%6)#B;E=*qJS)?-0d9</Bqr-A3UDm]F6cIlPUiVL^[g&d8`K*063]65<2m*iuQ(cLr6m+-e-NRds3PEEo=Klqd0/Ek-H^h_'HdTK#
%Om"5mJ)4MRD-<@o\!u\uojP+j3]\hDp9u(Gc6Y<cH_(J$GkQU`+eJ#^]=f%V3bQm[i\m:)^QrU:Xt&sHI<QobVH/rB8`UrJ<8^mr
%<Iqc)eBrDJ=E.0m13[FF6k#X:h9E'**jf<FOd6b@QIXSGm/juf$RS%u.939-.gQ(Q\1_UpluG<(^G*-gj5NA+5^'Vk3?h-QU]^%t
%,W:9Jb=)[TR2'FMZ+t"8n]+6K\J(/H9%f8c,Y-XD"+\oa"s1o\7=DREDr-ldTpkZrcrR#h3C_\&j)T&!0NF.2+hT3fDiN1\Yne/M
%*tN=GkUcC?gb+VXjs1Ma$.!teN3Uffk8'8:n`Ki)>@oZiCjT#^Pl>)hpn7bnbj?@<?e+#$-sl@I7CecFc.(-NT$IP`F4LZ!`Z$$k
%f1WgPjQWm:3`DAh/g9:8mtR=tq*AI[Wo*2_lJUT4#r@Qe9&G#"LnCkf>_-1^/n41cMTsL;WfO3e<l(#!]0^,=Z?8P*r%XAsFQJj#
%Qn&iG3K6CtoAkZD`%b?,KMpN2N%8=[PmX2^29/JN^u*ene/)&W%0[a2`T?q5#87;A#V;Vj]>GpeRInUdnki?t`!TI9J*"91n9bd\
%]EN:Nj`2emGSX68LBI?u"?=+&CbZgZf!g#"^#]/ZC,+iVd+tI^;T6?O\oC.D'+%-(6Mu6oT3jc(3bb>c@dPamRQdo#C+#]$9\idT
%]XCDbgY<^K1;=`/edmr-DsOoi&n:XD5d8k:d(+E%^5?qt$69YT(.bkl)V9uYDL:M&NtLN&CMu4sD^FZX;k]1lH)%B(]suR$LeW%=
%ZkYf0I8#DBfsGsKiYR'%d"W13_b2A3`9cpT09W64p)X!e7-nS9ooR>7<t9F5pQH3@2!5C-i2I@sfYDG5[;0WD2_P6"\8j*KdG.jW
%H:UKLe3W?3P<'*T11VanV>FK_BTc$ere'<FLHods@/69'=5@2Sac/eBn+CjED^KFrh<_S&2[eP^pd_PYM3_'X6!sK.VOoeXn)XCf
%[u$tt.od1XL!B;YK->*HXejj>Cgb0cp8dYlHR>fLb;=bj0[81O]T==#$F#o<Umrs'RsV96VsppZ(bM#1q'`/CAJ=_jS):ig]4n.b
%kFKPqUhPIO4r(YsQcF!/o[oA-$*dl$U.NcPX6(PEa^m6>9LnD+dVjfBJQ.teGdC3aL+Uo::L#-./FW(g?4P^Fp'/3fkJX:$D:<Bh
%SYi^u!-uY^S0*niXmNhD"6PSY.^;Gu^Ka.EfOEQSB(NCk.-VB79rr6l%XVs8fI0)=E0NVq_]`*?\61t!)lh;4eF,2l(Q5(4=A9Li
%B1Mh;#"5pk$')(n;r$68c54pJ>Q$a_?(8$sNV"`oWL?<Ql)&b5kt_#>_SHG*OY4uJ?Yp=95L)C$"s3mkd=RpVR4_)t0l[g7)KPH-
%4>^7:[OqM/kl0"93ddu-'#HLJG)1\=ZsEd6fj9m!NjKhR.Qmdg@$;VIAh_Tc<ick7D%0d]CEWGQILN7,BX%-'#6XJYam*aM>[fjA
%*B3$?!8VBI1^2REFjiVX.bU,lR'E)4Fr-*GhDF$aVl%1,^gQW+P9sF,^Qs5EmTuN@<_,jp>pGCsT)H5ADsmD,&-P1;W"]cA6[tMD
%XKFMWo2G#6D#ZhZhHUfr)]eYY^o9N3m%M5f9ZJ;T_'gc=1H^=2\4Y/f7o,[LUA>j%T7g1j^<eq);B>q=FE&8:o%<%rCIu35h_1so
%CCA_%046R)AG>3$.d=*$B>:"4+]+J)lBlB8fXP8'_38rNU/i@WR*jjdPbn==r&lt#GsfU[J6hW!?,ehIio*B,FhFQ:4RI%$:71F^
%I2N",WfQ6U+")s87Du7IL&_-"5bNOAd!+7jD1uu11[YE:GWL0#B1"lcZqW.7)8Im1V^::gTCI'>jMf.uJ,]1,?!Kn4ot_T44hi%`
%pjO+XF[1oDCQK_:hi>ftMQ5U4+nXt5k8iZ.OoG!)U8hZj;L#qUW4-A,UVOF#eu[BoBJc^K"3\/:g8M)&72/U,5D6c8Mi%>%:+kaY
%kEFpNDr,I7?dkoHNeN>MJ,8!##L,IuAt?-6F>)4PR_"4!@7R)_kIWA9oN:n)^5r5'7J7];>06!:UJ^/lXc7I=SJr>Obk\0a*]Zgd
%_mOl/jh0p<Bc$8)e%h0ecat):"ugS.d>(*h?./=oMjW@(5gT.J=8DSmc4:=4JN>^gcuW1rJ&uGkf'#?/9Fp)#g2YTUeh#?oMghEM
%"[h%Y/hqi-gG$a$/5$=)EVT*G?Bl@1JId\^1SRJMTHK('Q=D3_.kl!s&K)1_)Z1Z8=>X?:X+Cb1W[be1QAr*UX2$#1_?lB_Qf+(/
%#ehM>.n;R!":H`!CkS,Y'``pn_f?%(M%Pl4Gb6*-&XAUaa!JB"iZed<p<isi.M7A93Tk@U*!(!!]&j_R5a[n.$^:Wm:/m`sN8e(>
%^^:<K=Jm8q*!;+#?o7F=#J1V*GS+1iY,Z7QbmBLG+sLDi;c_u/La4r5MS'L_3'hYf>NEW)bFD6N..Vm2a#GLknpEj`("kl+O]*I:
%^i;2>7?.URM38O6<?dsHPeh;iY`<i^<.rR_#2-OP<fIA/dU\0R.(YTdXMRJ,RHIh.<R_:!WN:/4Wdl19kJG&H19)P00Eg"K$BgSc
%.Mkr-hC48T!`CDf]Sj!$#HVA_%Y+UO.a9?f'M74fZ[tZ_&h1iD+RCe='8]S&-U_$-i5%f04AAmKJFQUTa_FBMWKSXZZ#E8;mW5i-
%%5F)8^eeVX#:1XXMf=R='LYNS_6WP]9irMSE(Ub6J33fuV!T-3FFoWc`AK=4&&YDB;ZOIhn-nV>"_7%m&7oDWUkoaeR^+%n&X?jr
%ba)BaU4T4`/6le<s+5*3LD\18&5cHL8I?@'JBL\ZPSk#o<`*PQap\ZjigbTOJHA)Mkd9"UBSrICE"l8D&4EE4O<@F(>NN5jA+6$'
%AL.m86$:i^clfQDPhh[;0#D[))^``j@d5]P1:Sg<T!FQa&Db2g:.^Zr&3I_i]O^LiWbhbAE1d327'd1V7:d4#D3mPb'U`PqGWAgc
%..J.nG!^:N@(DFOdUZ?;E'Q2?3u&fi:?7r2<d8"9@p@b4Jrlit'L?o2!ek82U*Mb\:k9,g:q-X/i?3<K:#H#5'dIfsTR]N$Jt&;<
%BFh"5:)BS=cX:CV\;arZ.C(G-#_m>UX.k.A;(8QLVuS6hWcR"SOuQ3Y)$351"D-HS]+jafWldBa:f2n%@N0;7?"Fc1."u+1LqggT
%C]Zb^-.QQ4'[S4qj.&:5*#HsgE8&bqpeHXNWW9oSM(25&n?*=,EDFfZ,,F*)mp%gTWt@p6?1(i!:F4ZpDk@_/_2,nL:-hh_&3GpC
%s*-3#!j;a)92d"XirmYA$<5@Y<crI_"oSHXmSkVMr#+;TN31+X4"8=P+ANIcdZap<Jr^Wpn&[=9`nSGhoTp'>fE`_6bT0pl,jh86
%:CS-QJffR795k>ncaMn0nu<%M;lWcd<R:ii%T3Pm"bi'u`ao`I1I1o0"p&rg;+/e\UgnA8&9V,H`*g-=l6`\;IRrT)MS'Qkh1A%W
%(G[k1iE/$e_.SUJkW>TDKE8j);Y5ZrMmZ9jK>+Q<"dgW7OPlfLe\s7>&Oqk,pZ.uV^`lqj_!Q+K6]9,9lB@qt$d"FGE3;$aAK`X'
%<6CoO22o@OCA!\#6Du6C&gN\G&#RLDdmO0a7fU,"2W5PZOhU1>(LU)qHsm]r'GNpA6eC:YYRW>mDB?-WD4iL2[8?@:&G<:B6DM%d
%N6IBu5k(SZaUC0<cV^87Y$jRJMU^q-F7CG=JuB$4g/7C%-48l:1mK4!@r,XN;&S/Pb"39mBSS(Ip]cVOW&!P-)g"ge<1-o:GXRj1
%BrMuhHr<Ap+:Wo:bS?Y!2$K$l1)0%78?HEoTiTK*679s6.qO=UJ1)dB(5!8S/J'<2"g8+<='TGn/4oupYqcL*j$4#a1,r)JSo\*E
%%eP[C"\Rr;n:RG`;s90L4u"6K<l<"Y.iAPF#JVQ`^&kHGTIs*)b_%S/(r6qD_.CD\jICK2>f.P4Eb98"K[I7-'TjOdPAPq4,Vgd'
%XLe02H3D`>lOeAR0FeNQ5<*V;Wkp2!R7D7h'Ua4Y,`E>jZHPrQOjToI6cp])<2K]J5TVo8*F/*<*m"n`LK'Qn@1Xm`j<7slD!UPc
%1(Qqqa)Ej`\294e0b-#E9S(qIn=X,>-W2u1RK40t<[i\k;4ePf"j!!/hOSg$<5:.`]GEO9ialbS&(g;Pd1o3gAO)Ii0a%tQ.C-f6
%kl_cTEPs=7/64nKJV%F:2C_XK?3!D,eI`SWJjkfuFA;gc#\bVs0udTb0d=d`@A50[M%%9-,"o1I:`u@mGtOA+8-/g8"B"Z0U)d,B
%Bqeub+]0jdJ6\,BXZo6dXLsHR%14_IO_MN1g'f@=I0.UnnI63aZXdi:<+qsC7=A'5`bN&cY\m;R+lQ=0RGpAS/r8g.C@rbrKIS4W
%;D,HfLl+<+0gpT5,!70F+qN*MMlo12-"V=(V*R,CRjsZA&4)E]O`>^O&TeM]60TBB-Vsr&6>.)-M3/Zr,-Ii.:,51C"PQ6u?Xb^p
%(Rtdh>Q]Q8=Z<&f"$qO?3g2D1L3\JH8Z2pj*A\n_=Hcg'K/nTaY_MFP*,(KZMf)6%60Z24;+cV5"qX7&=k4G>-UhStUe<i5WXH^U
%nC*monQqA4YZIgS99:A"So.u&^sslWA3H`o`*n(cb,ls%UsV+#:,6=5T'$t0<5=)87:cd)L1aVt;ij8\30C+L)7L/"C(i%D7T#cl
%Q*GqdLm7LJONZRr7+tqf*(KXd<ri[/T13i6n7WDiAZ7d$;D^op'M:V6[g"(q\h++8er(0+Mds/$[Y*MsOJ#-"-b0s`#+^rgQ-q[u
%SKP1:Ou3I:M,@F<,(b15#d/dVP#[D4p`a6G@]3[AL("YH\aomt0*M1cQ)K6;`(uVFb.&+%Rt$=<1)Z^Z5f'@<N/M\c.4fLW7?TsO
%^c5-s2VD81,g'STU-:"MA%>lV.-K>-Qf/=^H0:p;,"#`k;N"VlV(oX@Q=U4>-)7[Y8JD3S$JM=*4:!1L]0eT[j%E>TPf5\tAB2L'
%&TNG*<nn"i!\,Qq4rUmJJ8%uC2$WRWd9$s:Qbi/4P7(J2p-XA0<)lq@>SY&KW^O9L\-H<*i=aM";gCI5=!/usHQ#9X[j7->TRBYA
%0*1K;EN9SU)?r^JmKJH#$\M*JVh*npOqSDnY/ITjd0/69jV6=R!q+-e]Q8M*G(l1RL00CB4/kr$(AH_5IlZbN%0lrsPJL7]j"OJR
%//rpP"Ao_Er(+R'WG2kJ!JrZZB`snh[7K`fM%?+e'sT+1aV5kM4*hU-+?@=pVW=0^iYAkf_"AKL,0B@c.0D+jd@Ct[Z1h!-?$)?g
%f5Y+3_/(U>i==I6hFPt3/d/H<J<OOl-"':WkoL_j$_%r'?&Tu/N6)RuP[Y6C?]\F@3?6VY3SZfpk*9mM<cT[S#_PArj:op;F=5TJ
%_4s01+Oitblo3j5aiS9($nXtslsSZ%]>-4s$UN3Z5cRlf8k<?$)4>USU'*cr8tl;5@3lET)hiJ;@]lh2I$1_(/Z:9rOZ;-XFja:,
%,[]N$<#gPYU^4#q]+@sY@Bm1.EhL6KR:3>5eZj#Y>`a6^-*Z$=+Nk*\#foq031Y(\3Z!V0Vs'!QB1ANo(#73sS<a.U!F-FHL0[\r
%6WSAFPbarW,T^>YfMQ`<eI*N%3:@J^lp+r=b3!3+!_[q*OKa6a.nVDs8\5";Eu7_?L=AU;]d!W*Ok']jL-#YkA!P_*J-/%;p[T#r
%`Kmc@bqLb=OTjO$jd[58K/Z_Sd>?X,\s(jTB5lUb\-<1HZ/7gb"V7ddX9tX0mp%f[/qB@$B`q#B!NA[#-ioG@A6;U/-`mcb%<p0!
%@5)J:?;qcs_W.3HY@*WaP?`D8g'u%kEQY<`/rl88VjeTWmA/qQG:Es]2Nb-tp:I;!^4P;GQ`E/W!ej<Z)dN]'i8YYPLDl<W&eLK'
%NXQ4@A':J)Z31L;p>G*^%Ud_dW_S2K8@YkG\eISqE"eO]C6X>G]&LYF%(_YVZ,[VVZKLX$/9Vs<N8Wd)MG8)Jk_s)WF$\_ipgLL[
%TWl_7;oN'*eJVGN^'38C434FB,W27q3S^MWeoWSaLE!4u92/A$G?n4j\NK4gAQ]@s;/@UK=6oqKGuq)$D$GmH%&bY/fdoKB>?.mA
%kmGg0QU,O;U/)%0UO+IH+:S^SDFMqfbJcS:!J9qO,3+o:'oUBHk>Dsi0*jrKVmrbZ`l^qL0/WsgM=j,A#H4T2/-0H<i'b`O__mC\
%-,Hj0d]L;6]F.BE]n!"Y-+J\<4sd[]]7OnA*<_*cM(k6k:nRmXb=N[2,aP%Xfb[lss//\-!o+6:Ds)"*Hq$u*f]G;K4(s3r[3aW4
%P/91]&!oNi-'h^tFt:XmD1s!d@X!ASaqREL(1VeC,TtnM]PZ8k<!MUiml6.*Ktra^=Iu7mME@a6#an]JB,+umU#>):791gi7WG%;
%R1TsqiS7t`=qp5FE3'C.jqO5]<Y#[uj[IQkB(1AQ6BQqd+XUYHO(GdNfLDI,1009L)`\$9EF2J<e,ps.l\b,@60B@TTVV[Y?!1L.
%cl'fM@b^M,.*@I\MoaOV!9klMHB*cJSE6;M&*[++-,u5(g\h9aPtAbK9F%M0_/<=ngC"K!`O<H"!j]<da/RR==Ee?[[iTN?f!Qc[
%=sc/And:B%.-;0f13SXL/F+W<p6UXl`Hk:upfudVeO)s,.[&^Z'Y=b>.!\>s'r!":nn+\%5nZW*9kMJc6rE%p:`6b('P^#e4S+M9
%N?EEMgV?\SK>TTL8J!=u7T#d[$\X'-B9M"U@!;V_e/?iQRPA'F(6?]I!mA1F`%Q]_1(QnW6A%G?P^m5L!b31!-]rZTMjo;`Jb$<"
%a&>t"H/(=nh6IGmJCRgq)M$i[I&`FJB,(#qmET2d.I/<9Fr*Ef:U+6A(-4m\lihP_.(nmRMb/,DU'MH)"I?t)@S/gU[fReb;Im;]
%!UgkcU9]Xk;2*F.*eH^b@GQgZX169o;r3/Ic<+,C&K3r`@RS4R;I4Mc%.#V)87RBa;)/@HJkAlX*#`@iDELL7JK7MsW@VNhThke_
%\eTJ@/^%74=)<LL"=<(9P^3TZDOX79T-/s"am'KDCl];ZP)dG.@[luA:+C7d$6&.]O@7V:j00^QA[K:h?3Nnt>dXUE\%oF(",_UV
%`PO\_T@g3[gW&,BA5[`_mH"nDD"FTi.#TWoRuX^TA9!f5TF;%X)iu<`SPdTY7Uu\scP5&,AB9WFd[/opQ&9RpW)0N"O2d3Y/G9j`
%G$I0UM2F:smEi(=6+2saMTT%V=!T8B_*YfYLm3(=12`T(DPnV/c:O6CPC3LtUBGiNiY1X-^g9p)G?*3bCOsQ)]2G_`*HWc(Kh'dp
%+S)P5C-Yr16p%Ci:dbpNV%>*O,cqE4iYH+,akIPb+XHh=L`e/.^cFWR\18kE)7N^^=hm`68C_tmT2F)c[PNuhUqH!<Y-GB"jlqFd
%Ahg<PW,rAN'i[bD-O$<RJE82J5^J7R`Y@f2WraraULgORMnD_003Fqbm1=M5B$_dnTJ9/Pco==#..9HF&-STEB,(#q;&Pip-,FFO
%YdK!/>oAZ&aUCA-:$#=+W\@>e+H6PJ<'@%^KII(iNaSI\,H@n=0hZ9S[]pg(Jo7Lo8*PbeHbd;Pp';4j6ZD(K"l)h6'Zsa@6%!//
%&!0OX.cW"oOj4#2Tj06U_k:>5lif9s.'2X8+^f5>,4Q@A_"N?h@4C`b:'Eoqh75DBgtVOC#g-VY<Mo,qJm6+[kX#=3i`VR&(M%00
%G2m'DT2b]?J1_%?K_ZFbK'm%HK0]>Hn$jit7?r^OE@PZ>_fH]GO=US:*/S-9dI(H$YkEp@1Y@@-p]O-)_"/\'pjb+8m'0b\YfgVV
%96_tJ3=lA7j";CpMY_tq\>tKlTdJl@#?GH-X2?uKU/Et0,!2c0H3ToIUXEZfZ1pc+A8i:]*^i>PlrZ5j.r`/^_@Sd;3'0Rp;$+re
%/;Z@X5.O4jJmBF=Oqk%F%.Teh\uN8s7hVLZ?"&%^5po@R<Q,t\Rd53o!ktebJ]&tFPG5+6DM2Qj::a']F*Q!@,VY]#n[ClsJf0kD
%a@_IJ;B:E%EH*6<)c.82($onT5ueMtd(K<F7itRG/Nhl5XWj(<8JR>U<5e0*C2K\1.,r0Q'\,eBd'Mpq=I0K4IKP<]@goML<rtbE
%lX8ZafN:V*>mQV]!]pYQ&OM([7BnpCqUEAG"ke)!%^J]g##Nns9X%*pojB>P@.Pr<RZk^m=,Q#\!+>%;-O-?E:5Yu*\d;M[&QM,h
%+uoB,aVi#TK$sd/Q\*<4>3A.I`TQDUcIF9F,U]+`3(4CJ'Nj,K4,GFs(*bko>*<n&:2lS78]KT9&Q[&1[c4Xo''AcG4J!]/UY&>A
%l[d+42I<'@MN%chUH0ugN88EPrHqO^iRjs!o!YeD@OQkU;XLJ`NtO2n,VnE0GLE3n4*V!5ALo@<XA`;6OF314;\')mEANl$fc?Ku
%I92<l?tU]>3K7[-_^MgS,--UuCl1cI'cRO*dY9KdW\?1r0_U]D]nKsW!\`5q2oLe7(9e:K.Lc%5WD4T^/IHYmb=Pa"A1C>--EFXh
%-TP^E`i:lURT"r@.MC!I'd'W'.bkk?-e7a;9qIN`]82@#TVNZU85ooAZ=3tb;'d+'P*1a%fMl6[Sbc<>KL6GBV[R$]Jfq'M;&'ZV
%'@&&C$7<k%l]>*MMpVA--O&:D'qJrD!=pN?F*NF!N$:?_I<cUgDUi;"<";"DS/+ZWn/s6LF0$>8'0'$3=TE7ei9\[e7gKj"T1Y^#
%)GggR',8&jjWLVHP$GpsI]u2%hQ=K-(u-lH>io8p7?Uf2k:3@h.d+/=@rRtQ<O'H*'fd(1Ylr$D%TC?D2jJGf!:3IBK`8<R!t<"/
%8Rsc\:C%-!H-%LfUc3jId1ko``9IfJ,i!t2*7dNCE.`7cP7m;\8koJ]@ZN!!J7j\S.&mqrFhm]GJYe2qq?e(21A.ICJ701*$A8=<
%_FTh?d]o8Ils`kR)K6!L*M.:?G#*_G7-C3q>fK9R'TiIYE:]&-&?F!5WjnthE$po[5$Z!<jopmaAd%RZ;-:e3122E[fFfZR::B2H
%?SDlVN+GOIJtTEP]Z4n4YU`:nM?$E(pa]0_K@Gdd$W@ar+h_?@/TcLm\FnuX%c@t;NJ`mg`X6UZaoY"AE-E9^Q,c2N;9UE=j8bU-
%XKo!VQLk\9$KXl'*5\A<VQkee@*+q.`Y(HA0/tDt8eC>>Pa<T]#biNRP$5B>!TP#_!Yo\79i7H+JdMh4.";EU8*)aGRGd6RE^#Nd
%Ro.*O[f)3qTWBZO-1(dsBtP98MSlSV<H+frU`G"&34Gm&p&X$Q,kWV'E>\L%P]2e'"M6;JUbRY4?t(N)TF>_M;-`,ug_Z5DpY62F
%U/I/i@65u"UW7r1#i65i0Qr&2gn#iIp5JR,O+gAShA*G?"jb.c=>uDq3FEY:#NS]8#7r<*,`N)B/@c(GARH=MKKF(Odh[",<+\XG
%/)gK,5^<bJgKM]24Ut^dd@OH]"-6YrD?BF^4=\_g!a?."$(VA6>f-ZLGdj4dD$'k*VuXUZbQh*>0X2!OOZ9h@J>%O4&e2ulI?S+Y
%O%!VdG2!=p_sLBf&n7HMa5f7H6>$GkM31oZSMAu<-a7;M<#LS`!hT<<1XtEh#si$+YpeiSO@Z<4+GbPRH$#:$*=/10Li*PeElJ_2
%kl:l/`j*f;(bXcZkU:Wigc6)u!^erhPI#NS"<L!Y@VlS,+Ng^e>aR>[0J)T4nAJa8Ppe*$-NtARE(<[U0YjV,mj,0:@coGArhTS0
%DR=K5(i/=J/'AX*J7VNuC"jfB!FMh9/VO2I-411C0X/PmQh\TE5-aKuC_%6`[hN>eJ0;'1k=#m,^#Gu0#l>,88TfqGknbHsoRJ-1
%F>:g7fs':]^oOVi/kZQ:!_7lp%q?lBCKP+[=MaA16jEB[-&GeP(Au:j4:ZI&0qT;F+`!64+c@[&*r8DBQJiI2n1q\%"]*2PAN-45
%0-KaZ;h;t+9>/L/J8d87U*Obs)C%/'6KKXu?PaF0C#:)Q!-^HG?O:pN=\@L@nXgfEj$75knVQoq5k5",j/V^6Fob\i`H_bcM'Su]
%%9JVH#<^&:&]Jno]03o)&NnF-;']e-L;jq/&*#.3Z)#sRnh_b.L<<D!P;q>&FU)arLRY.rAWOr6!**8EL\AY7r;SSImCJVEb&[I^
%c9I7:3<Qu;?Z?)IJrY3*EY%5%s"?jG<\Yh76]P!qbF.Utk,MkpT:$+"J/F`Ln&8ZAo[pQPTYiM?\#K9nEieDo/5QNH/9\$YB&aen
%oM%(O@e2c?,4@Ne=WJ*#c["0B@Vlo_0CVi]of+'QW/NX)$rj+b1$1SMIuV_R@VG#_M["YR8kb:&K?3,&Vt.MF2-0?mOt*\S%=JfP
%(#D<E^.IJ''e2*Y1C@KH/:!&hpEm#nOh$!F_Y)Z!YdHB"Yjms.q07iY:W$P71PCe$N\2;FU-N:[m*obm<MX_Hcjo@-^)N7b:o`>a
%+lREY=o'Ii#O1261Et_/Q4+%o:-2;]*:K3W(P9@*<g[$*M$!k:">R>Ic$kSpJ/h6Vm$n]O*j-q'A;6&.M!O`sBgH(']`qsR%2FpN
%U7/^q!9/(2Z7=cZ4Eo>sV(kJD"kV,ah(E5B9K;>=q]P:!f]NiqS)ErNMn:*:mm0J-IN?;Vgt(3*-Ch+,)gD5nY02_8:M\k)F^RLD
%/C!13r(QH+Vb4">be@"7Id2o!&fn%r%"oY3\oCjO9Ae-K)m+sd8p&0+XFlOn'O9+'MqUc*LS\7*/Zp*!X#T`6on0#(l+,VN4O&;4
%c@A#MEOZJddQiZ_@BCR'$uN[D5?POGf5X%o-p(],6)%C*^mVVMP(0]g?NsUX7154cj^#+KI#]i*rORs:;D,TT],;usdgi<[E*]&8
%\]oAfqpt"Yi7a;-=:b_WG(VtS)tGlR-2(8W0G$^K(M#'BF+A>i#Dom:Q'R?qLu][t$XeNSG-k6cgQ1)-!2\)h\Ud2bR\U.Glbq1c
%[0*G2$+cC>Hfkpj^4g@?OW$Su(>"SsV:qeae-b2_F]Y)"6,iM!1'_uAl3=]K2*1rq&_l$dcTR%f?lL+(.0u8d82F+>BXeqYD,$^?
%ldp)_5"Y3fRet\34)udpl8gK+")[eDcdTV9Jo&F'(()O++h.WFQhtYK3nSPeTloB!*^\`R/H[PeTV\&n5OK*gFidD3I4GX^pY@DN
%A4KUS#LCUTa,Hq0D]q2CDb=7S/@((77@ElHedA]g[SnTQH4))(ChtKbb8H^0MKK"*/qQ2/5lja(OE)A>FP9Jd'H5G[PeKS?P-&*3
%NVP.(j([pcliqDg98a-.-j4\i2P6mWMZqdkO0',WAiilriil7<$LV3/4csi>4c:7iOm<G703^-jE6dkY``<do;u>4A6?Ym/0N"6@
%k?.72pT9YS5]N0b^k,!/S':bNCB^,P:[/(*\*Y>qTQ$QQOI45UkbNjdE.O+tp+1*#SaZ^S'R8XF5C)]mDdY"B'\kqk>>rV'W%h0D
%C:iX>k.V"8_mu2i`e$aC[i9D?BM/N^mJ#Bs6*A+W85OK"klqp93o7>,^p^uV/Tq@MR,WGs]F.c1_J))K73OV!cRgVWHgCkUQ)Snd
%)%Udq4+g=.LN,JC*.m:Fg;[I2FR6K7mBgCLN8dlO;@(;!oR>.hc`kmE[Pr(r_N%_9Gh:uc=tE:fLdS]*jc*JI./ApBGp0.5R&S<8
%A#sqorYie/3\f)n$k?r"7;B6,K=]Q]$O8i]"G\,=/<EQlqI^H)^e*2-\q#_VnX^Fjd>i:X>32#RB.3Y\Dlo]V'a7[(.<g_::YT5d
%3Y^ku\4M9/K%>Q2I\`!#OP7aW,38)9MkDnX,Z_DTi]`HhOE]'oU)Zg.D&9VDg'=JmA9:4S%cuoh^3,4,RVU"q?,?n4=oR,@I/#,0
%#frYSKIMf].0tLXRniA"<YP%IJk-H"Z;/qrjTGrn3[f4ZIF%\?o#.Ao/g*q0`jI!5Dri-,OQ':_Otdb=A7[eCA'`Wrf2)Y^1mR3#
%#%KJYC&:;$Td[;R2kcO-?O!!MoE58:K5VkoLJ:OrF2%l=+]>s#bYrVcAoS&<c7?C%OT.3BLoN!I$,fl4JU]HQ[F9B)6>LNM1"c]9
%kZX+XW/utU]G6.U:4KSVp5\r<,i_>Q!H3"qT)1+Z)51LdhD7SFJtQE3q7O+jHr&%P+,Vi512*gaa(+I]Rf45J*@GL-HBaQ'Yq*n"
%;CG3"W@&DXrdp)\,2U?93F%:ch%KpFYbuq9\Kf[nA\M93=bAe+GpUFbMB><5lOV)IA*l;VNj?h+AGL#J#LGn,FH/+*"j>qkVCu.P
%81IuTTTF3qa=.s-^\pEL`5Hf`H3T6nR=9Y%?oq<XR?AHHd34.;D!<*-NXF<lP&t7T#;kT'1%m_(IgosC7T8ml#"SnHku(BfW0$\A
%a\bSdH:'tJ8:+Ed@tHPVJWu:L*D$TbmMD6<U7aqe$q/uCOeo6XH`6eD>djQlN&b,s>UuH!o7Q;20d"1KV,""a%!lV*de7gA$;'XN
%<YVPTj`X5M(m%rh(g]6O=UNYM(Q]Mjht,qY=qNcc1--nmLS>k]Fit<;o"gLkk2S2i4AC=mA3PSNkBCp=)MCi+\1?+<Ul^Q=XCk(_
%Q+WYu(@5?"%7s33.<Iu\;5*aF]/$/PHbqm6,JpBJ7Rs6K;"KT3g\O:c)gH27Hp#EALZu!n%-ArOh^Zdirck]!mn.Fk+k[pE/L]\(
%;P4fT]raJ[J?q1G4$fl5gkH0YbK#Nf_E:9=MRKt&d[(o\LQW`MD<h_SqLM"eb^;OmTVq1\&Kijj@_@$sG/9s]n#9=EU-c<ZSUs2I
%Dl#uW#]aYoOkR<8?.)8ETU`TdN-Kb^b!&`\+hh,kGkA+$jLslnjbICF^kkD(8aUelrYipeOB0-kJRFQu0B94bfTJS\>`Z!7jR"5/
%?uN,b8<E(\m6.7tP-D0'ImFsWq`SAZU2,"t]a$_LDs\_*QTO;aZo?o^TutLT&!jtQ=H>:4"X"sKA;21V_g:NeYhRr/+oR_;*(/Yi
%J5FT)p2!shP-`&uMc;urFNAb\(F&h^iK)&n04['J1n)Kf^js.ki2;B#(Z98T"WZU>0fj5?@%.t>jKkma8*;h6g-IEg-F)KCl<Bp)
%Xt%hM3l32)I]A&p:@(ZHC86,0/h>KR%gKBN%*P'<Ul-4s3pn]HjA>75HJmeQK)#6X:_D7?<@@TY_\&teEqoSI7m@bO9mqruJ2Bnu
%$b)d0jC=W?kNMRQ.W,qL^M44T6:tA?X`7_b,W]Hp$IEma1YN<EVS\Wg\!S@4>+`_+?O45[C%V#.e1YNXq/0r62#=+raGCJ6=R\0?
%/PqR/.5cl06<f\s]q7X2D<mp'[0B9t1%&e9"1=dV>]leA"h2?Nm_K5e"U;^E<.pc?Z/)mLEN,ZS:nd7!>?:mk^r\)kEe1flN:fPR
%_UI#D=:`KI<21E2TGdqG0b1-]"<-l^]#B2iEMO>rh)_2]cX`+^EaqOq_Oe%BW(;Nkp7-=C7#iC)TqBq62(5u+g8H!%gUnY)H*Iq[
%@-_#%o.aTmi"f=S$FUNBrNpK/TY&d'9*$=rNf4#heD)IR;$dDJgB#,cfE17Pe/mSSE6c''_L!VdqRg]]#.Y>o[qsEZnN5NLB$r[T
%4AC53e5#P#mQg/IZjkd8:hACekFZKf#A?*W#1R?He(uL'Cc>r$!AgF46RSNNI_=jV]-'LiWHN_s\+P@.>i)r#d&A"j+Y\u&1#Qd1
%>==7:0!0&M.C]LbjSXHf[LU[;Z]$I:'\,/u$0XM--pYHt`b@LW=UBH#2P;7l):cu-\Pt5%oCKCB($%F@fP3]boFDL4R7HFBn20ei
%:dONF;QYHV(+<a2n#)?n5[7N:[HH-@EEaBf#ki00"2eA]74khEOHI=TQ%1pSImi%@a4eRN/b=TEKn;FcPR8mQ`ZLkO15jEYokE\q
%"G]Uk(H;2'"jO[5G+Mn<W#edEp5d**"G4=T]eNfNhR)T2W!J#a.?!ED?sUq:V]bnD$C@BOD1s)kOj>TlA/ZHe2DaQeqEGF;mG&_P
%:<Lpe9Z\5edSXMIpeO#iT,`NMVOLQ,)JHfg.+\:"KpU>],_RaODR!LEaE\)XS"`a@9sMhkW>&>0a!hd'LT)TpWF:T3:SV:7[s_4_
%'OQqeagNn2g+#A,<1O@]AU5<3(YG53K>oCF[E8qni#a65[]V+=hG)V1B_`8k2m;"g6.(11M[%j`!2:t7l54$&G/)%2!6K:08?`YX
%/l8Pj*%;,WcFcF1_:C%O)bCgt45Cj9R'F2?dP&^*W53]:\=BV%;f7I>S?o%9YG??gUO=B[K3C4a"Cm]WG)S.OZX6(EN(^0T&Or5.
%/rRPl2D1Eg]C&l>aDHJd;kPT[F7&V3/6!l9e31DO_P:HVjeh7W);C6:*2t.Cn_H5m[N"-09XeL_GoHW"Pl[CN8gaqZ?jU?V/5E;[
%eUblrk)aYge]AQ`7YMbm_d>k0V+uJ9,O$>hkQ"?`q-L;^73TN@q,-`UC'[hS#,EgqA@_dcNKG*&N%n,??TVa&rKHeD!\m4I4ip=.
%T(PaHr)<@&<It'O6]+,WK#_V^208!H7ERo2/h"VABj7%]'Fb=Y:79i-((bdKnCA.+b6>)V1#\-Ik%XR*&;(6\m3IB&PgQM36f,+6
%VWniu8q*S!+0]t0#EE+D?#g#dkQ]R5_mppo=_3c;%7*_?B%.<*IM'Y*503F"OBO(CD+o4YrS$4VC0R*1n-(hFG$/P21F`HoWg>:A
%jS&>D#&IG2!s_^3Db9L%)lNt?GNT',,C<(HS"a]kOu^$gfc]1\ALe"R.=tEEhUsfQ4D]HUh,,h&DM8mKd@a-"Tb^IqVWq@iaNkFU
%"DfZ1!s_qP;jT+W%/*@Jn3Sfm1bIDnluXi!Dg"?4PcYj7ed@*&#?1",A"IkY``jk@G]>Gm;?@3UND?V@<WY%'TXmRBS3++b!INFG
%j+2Tq.EQtA#mPaR[h)W>`UEWm'O?VuW'TR%](LZ&"4o+BA-NqRr/$hbN%n,??TV$o'R4U]1ALpFb"<TlAUp66`Jk3iI\;i4Y]n>N
%*6::uWifVQ(KB'CCsE(@RpA,i7+BE:i?!Ytqtf![>;!tsN+bEhm2/cn<keiXUUZ6N_k7&VZ7&DK[K;Q\PhHoQnLbQ4!-rLO&&K@d
%6BdG_)G#.[H%Zc8+5.KG<6X:SCs)tW-(o+O+QG14oKS(RQD`E>SYCc28VJEU(c6aaA>*9D`kL9!SWQmuF7h.#8-"'KR3drW\:uCP
%PGEe,]uu@2Heri).2idAm4u.p*8-?Bqf_6-75NA2%T&R)`u+ETq_a2M8(U0Q#!Xs1o$AiaA+s_dbPjV_"9fph1$s8kO$P\A,S]Ue
%?4\06K??fA\9kE^c*fftT-X9!#VrFac3,ImlkiZm<kidMNkA!V5=#PTnIasK!@n^Cbi^E'"C&N$7c^<tkqB!>D=R060<3ZsMtV,/
%&TA,PkJ&.a[`-E%DTE)"P#\a\#+nEH)Pg$=r-euY[XLXWY1Fi7=q>Eco3LEFCKj1!WZO(NAnFbT.j!9U"Y3J";8cLSD-2#7:[T,E
%4VOICYc]%QV99$CYQ8p3l@sGl/"&u2%]nS'm"h!^[AC!2I`bZ\^?&e\L>[0"Zt?G,G58+E`Dq.8W4*@7CYq0Q:KTlF_?r?>guO=<
%;s:E%l12IC:g+6R<]1/6&?r"SD^6I?[\_/c]Ke&^HP^(/7ImdrkKpg`SE_QJKN)]oEkSm<L"K)W7dI3"]_PEAms(;u(9Slf@bq/;
%@TV=S\SHj41OF8Xlb2Fd8sbHao-5f-J65`$P7SbA5VC])^P*E-A4i2\Je7:F4SO+?<-\;83MBoSUish&&>R56#@lX8/0IY"[:q4o
%+9d]\D*p6Spi&\#<4m)HStQ@O(9dm<+!dMaep%Sg`estP4b4P[OlL9Ri)4N:s&,\]g6VSTmF`o^;saDmH*rqiMEdL*f("'BQ[H7G
%(;ta1I@SX4^.!G9"P]p6Z\RBlOOSgJ?@@oc.bb^j^[WMi@*dF?fJtV,ncS6sELaJdf(sA"3te$*W\ki*B=mfYNu:`?ha4c*9<h]_
%D/8qb;Br4:7,)5Kf'qo6fUa^hncS74e8.2*NGAW_:0)iA[*D=?r"OeuDhrSNmT])![jMo?Wa,XuU/mX:k?.8]p8rCZ&2V4G4VjiE
%X\O=0*F$Y+mUQN5I#=C#^_,M\o,A"7Vep#9)_[?`p(VCp71urgTh%Jjmj;bGYn_cD=1@Bh[FGAm1tksh#@lYC("CH4Z\&u4cL&X,
%<SCV?;Jup<lq,eG#aR^mFs7c5>[$1n0(9=UXSqoGK#;p:]F/m&]Hq9h/c"FrPHmEt%]BD_.9#@K1S4<S`F6h0%2XpRVuk13H9[p(
%bfBG/8L:"o$m\n^a-Jn[bgJ0CnJa-c%bdMl%BqYK1<ko4E/M97dmS^H:"Nn<(B1R3^]_oH)0:fU:NPCpG2co2\LpO@5c48ArHLK#
%U5uE;=U//Vg_rb]^fDMkiE/PGV*'4%7bU-FY2?B&.s/gK_$P,;OR7EL.K39%r&uP0eEt&?nAL_RkJ6sOqDBH!pmNp_GS,6/1AS+d
%eFlH8moK/(*o8e.a`.E$>8s6[s#BM"F0I$6KC>g=]-PEk;+U#M.;u!p:`02l>7N&S4i'A=?JVmL@JO^%m%A:fb--=(R_VrD5F%+j
%qQ\k/(o3IF(FDpcDh;mqQ:lN1NZ[3#3nUdN`Af%gS?!Eb3,[2WMpqoFc$u;L5Vl#$_+3;t/<2khdpGH[I*Tc#!N&,Wm&[29(B2_(
%DqUcDm2T*#Obk7l\,j,HF9?'dhEB#p6?-7VEpVa_*&k(V8jUFGIEMf9OGc8.MW;^LLZu!>)D[>oL'rQp6EgX6:Se\8J?%G+o<(uM
%g"QhM^fDF>OJDrM?qLY-rEq.9$d*0D@;Sf,V^S?`K/O]%0l=mLrAm?!Uba90nEq54a.0'hYCSebo.h?-+:N)*nPcL$Kn+"$o+hAt
%4W030/P'p_ae;skis%L4&&N!$@ml)^d\:M3>OR[L,&P.=^ETI*)Ped6^`%P8Pb4hf`bVLeHKcJ^E(.)c'q%rbD$\?i#KRiVhEXb'
%?u?im@-O:o+md>._OMbW^ZWd=[#@Xtgq7ZC#5Nh7W>cO^b[n"^Mo9UbZMh3&pIMt6(Yg<`?qZNP>*Z2oA2j1W,30VH*+8@C-ouf2
%6*ap6g)T<A7bFHqJhgj&3aX#L5"Cjr;7:/"+%^#O#>&:b+[D7Lj%kuU#4h>Sg'l5YN%Bt<\M^dh,#I`+q^i%0]qGNEfX(3]A0.m@
%=#:I$<nZh:7`_,<pIruc0?nM.8n\J*%7[%;:m<-D'*3pmrabe>/;Hp@(I)8W6',Q=QEOL*8@EM\lN'"%5p9@ZW:e=XEY*.9q$e;=
%#^bjG#UB+.p2##3-60tc/8s=d6'%(FocP,j\3Lmu?H8H)[/;eC_$_j"HB:E9c/S+J8cfI$I%qf\o,[pH"L/4X84[!k\g-8]:r?O8
%Sqr8!/NOG**ATJ:<Y+brW)>o08PeJO!Rp?OPb4hf7Wt^PeJCLhm"3T+V.a'L8=\s7;5!+^-'r"XWt3D`/k)*J$>)W^;nn$SOnh.G
%StZCNe0<@hgB'_@j'+lAL)c6aQs[ndo/-ERe+a4)QfNb9,SQCsV!\%[#*R\aaoZ]%5TlVj[ORb!Uaf,,2A7>``'*j!PSp@U'BU_^
%&6GDX4ut!CU*!!u1.#,E%iuuM_2^86C&;["K-VB60deCRF&OegXgU3NKEh9R#4bLiDAl9@Q]\be#@5Zs:tW+hT\L)CD;r2NC1$]N
%pq1X*#l/CW*?jeZ+MBPFN\T^2q+DhTle#D5`t#\F\U*APnJ#O)RE\Zd[gdMa<Ge8B,?$oqa:gL.8B@nLHQcbmjh,2g(51%P>MUq"
%YgS2[9qDEq$hkmO(Z5Qj3N2geXH3,1OCi>[R+oq2/_X5Z^Zu-\[a'iT[hV,pq\Ji*WK]/Veehd\0A$Wo#?[d7iYm2p?/9&%(=N;B
%/k(KV")J@3LA;8qW=%E,=C@7#D<</K$dS6V[BDqs3t1l:JcjXcD>d)],3Hq%VmUF`d75f97<&LCTT_Tg5D;j:kGim\)bbr;@VuW#
%]7?L+%0TYa/nclE5ZB/e(0F\$r[_!^n.^Q=9bm9k2MAGYG2oBQFNKoBqQ9".bEsA%T'!`jCr_+]X:A?C<g%W[%U3a29`(eJFJWGd
%*=)Lo/Rs6k=Dl;m@/&TepA%q5>_$\`Dn7M++lCYAI9fL4P.>rVK(a2.j%fj;k0G%erg<44pFZ(@;C'5M'j0r5[Z^IbZu+'[@Og6C
%i/d3/+;cq)XDTGZa&^7s\H*pV+Y'WcEgB6+4N3uM9.fc,ZE4Mah,c$7e80no'&+0X5=Rc;I1'+%74Q-u"CN3c/b;o;Xne/S`B+fa
%Wj@fZ!d\,WMWLIh*,S1k<FO54(>1uDVV-PGD&)[62T2\BVb2Kqi]qZT6%3[8/64mXI>du!E89$-!XjIn<\V:\p+?,N/)Ibp:NaI)
%?QclP$AtFVs.CiXnT'P'05t3SSTpit(.Pag^Md[+2bs2b#I6uf?VB/i/jEB!c$eoB5($=9/?n%KN$5P,fU>%P<.%O3V`>-Y[l.Hq
%I11F;NGO^r0T[$LFA;Zi^g!58"X(7^oubV8W!qb]"FZ11fnP:3g/]^g<]nWT$Wms(@uh+%KW1nUH`FGAJ*^,g[c1)&_"N$[PohD8
%BR6rf+B`,KiYGZ"OS9H6(PFJ\[Tg4,AYA/ib1PuEFpT"YXem4A4O&<?O?QP&ALao,(j$BGm\c8C5Gm.uH9]=7dRc+ES)"Sd1Ll1n
%9+n32\LXZnn_tb<_+`h9-9lFD/l6X'qqTUb;EqBdM`:r+)#G)MUMY9o5o%=7b*&A8D8@=+Q'kkD-T_FH/(g?I)i9FMrNs6L*/,t9
%0#0)hC+GI>JoHP?hXl9Qecg*mF`(n9lQ!#)*HDmP)%Udq,<Z`5]JsHtQ`W`+5@/i>QQ#[*Fn-2LS8P6"6:#*pl%XgTb!X`+&eqbs
%\]&bU/q5\HC.^g>Q[7`TNE[JQq2]HVTIBJd9^h=_cdVO<%cd`b?JMVIQ9cW0j4#PV!N9/iG!2W"O#Ic3K!;`!2^W<!#"#P%7tsA&
%e&-KjgGh>'bRi^/,e8JOb68Uko9Kg5mJoRh8js/7gAW#7X^'<0$8Z@je>G13U)m,N!]/AW4NRJr:1HQWn,Snb%"87(aVA=(L\D4&
%MQS6UZm]3?DWRN]$ZG\\W?f!UAZ.=Z]3dX]?d;G[?6t.>I"FX6`i2t4.SuJcVl^9dk6j$Pp:g<V"R0$t./AE(r.I]ASY3X<s'6mN
%'A$uKBp+rEDY]sl5>DA*m0]n,r8"rQo<eEQO@R%'\J8X#?^s]V5&FGq,*f&Q:mg+b$#uCO"VS'47[*h>f&AJun6J&6Gc?jqU)f#/
%8`oiUjb"UK9Eh+:dm[G5A=,015u66BUHO,_9'oH+)2*Sn9R^`A.17u6@mko80?m90+;FI]A%j[#c7_`,(-;""-ql6AB*cO6_k&<G
%&Ha'%Qh-LR)ZJbr&5'6SA8kqEK?)X92#XfaGn<J=o.pSQ#-h]Qqm(?qXI$;cj\)%I$mhZ60J5(bb2`dfne4W;Z/*LjqOT>NaKo3q
%j9FZs+6505!^bTW&HA)>r!0Q86b(*.TN`!tZGn4!D_,*+8>_;36(mYj,bL`/!<hYAF46BboE;$,;2>fthm;Dn=V2RC1<Z#d*V=#O
%ap2K\4*VIdlO\E7VS@9qT0@i[JhdT8F37*P[j[>\SmnN?;"BeRp]P$oWGb<Wpj-F@mfYkKmA]!;bcpu9/5OZL32u7G.`I%/?P)MR
%&!G4gF+Fp4'76=:^BQI7UF@Q$13f[99%2Co$Db)eP!IP:3iPgu4"fS=?5&uR;">9IE+3\/k%_IUNXK_:/tYHWTM"aIB+o4^+IOj$
%8<EP<3VGR0IuX(#nn@RM#hT9TkW7,".$44%D(>\`D%u4;HUiKOK)ERQA(!S5:FJEP*Z:"l?.MOLjGS>HNT*7[cPLHa#Kb-)!s</s
%1%m^\IgtEE\X2;"Ca9Z>&i!.XqUPe4X\mu-5i1`LR:,K_Db,tn34(16Zf@j,ci!o#K(F?#4<UiD0rDN,NS6\O0*uL]#K`(fnNlV!
%@JjO1CQsTH]bfRm_'Who<o<S/U-O>$('O2G(YAl(-\2C<N6B]S%IAa1MdQ>uWh2X@(W>V1hYs*JDXjAi)fPZt=[$ej:d^O[jp0@B
%6M\Cro,lqpnCPGSk<K!orq\;JorilDO+7/hs5;R[XT'E\/-9P,qEKPmH4lSrHi4/$/YpGes7N!P)0(?1M$40'b^PaU<p-[Ll$A!r
%cdcesc7I0sJ4Ih:#^M/XWI;81Q-#dt#4<\3A5!f\5LfsB!`<[%"l>=6:J$V,;NLqBDVd:Mj&t/=f@*c)P3U<,$T@q6#]K,1Z`u8#
%'k`!(c[Yh!s8,#Xp1g?%^VNjBJ'hO0n>^`W[do]H:sk_6H)0`1W"8t2=lRH&+pSRB2/Ze6#t+i.D1R"iJ_5PVF,Om2*2)9aYl!^9
%MQLt36m.CE^r+eXBRmM+9i0$?!O,YDOeA[9ZI>r;cs!rfM$$hO'oI\)`*sn5@4OS[>Ve7Rr=HaJIW2E*_1oY:*<Na`^BV@JC;ug!
%0)YmH6oZL%7X/^`TEX7of&VSd<o:`2G#s-pZHHA_'=mU-Ns5)OiW@KCCm>rId269C#<Fh2g&ecDNS>&R+DE[@4d"5&<s/)q8ALJ$
%F:^.gOppB+Z+o/rfMgjog^q9SI=^h=WI3`+[:1_(U`Qk_)CQ_\2V&jh+9U.:o[s\V,R5Gh]ef^=1K(GE!8F9WQ%;,;K/=c-+mN,V
%<E6'$*b;on[R8tem2*,0mLnUI)?=t\>I#KH0aW"Pej@G?5S?qfJ;VKQ&Ii90&_QNs9Q.2g^:o((k"2p)!4$\kF8l$KD0])0AN'\[
%PkdO<of??r+uVDb^B"7bKAc)$!1^<_AH5!;/6+D9@D!6N!*E#1;P"rJ$66#f"+V7.UE9K_?jb]JS:Y^0VesZ[1.1T6NltFDa8dX$
%V'6$"@I4l<!5tI=E=IG7jsA1N87:gb)#sr%AG0(4`Hk_G\/r^(V<2=hJA%PK*rrt7'q5m?H"#Fh`&19SL?VcZDehuFJ@*iT=c@=>
%IKBGp3=*TbJ,k=?Z(i+l0h[UV*Zg"L*>EW<@iEEbDNlOo!5^"ka/KLZE-ieN#f+\_gb1l$Yb#qrIbFc&3ZV-g5U\].BH#f;mI.La
%q5CW7"!I##'mA%+E+5J)B,Y1@a`:3#n^]rLWRCidY]0F;i//&h^b)9p!7YR?hf]-%A4I'E2CHG'7eP#$4n0Zn"34!8g(Eg.p'^?p
%#nXSoZiT+&7,(Y-1q8TaI8/i9%`q'=<r7&f5EN^r9")@87lZ"AD?QUfZXl3"a:P5`n9Gm2<m\P3O$ZX;"mI'Nl`^>E%Go_jBE0:g
%n'0f%(FE*!!,u@m(CSii3g5>.4\\HdEZg!]'pB%+\5spP!<?:20-$@2i+5C4RNSu=D3b!5JQosYl;V\>g6OV5)>aU4j4L%_56)ng
%+0,eM\1kPc[tPE\'XELGf<0jJ?1HAjc5#drFPG:=0,rOXdf5HOSYPV%(GDN[7L/%^7-P^_cBqfN'>1H^O$?ONL[)P11;R^D[f7-n
%D%18(:n!L5'I`IXNa_ea(8&p]s5O2u7qiD2W66)19a]ldF;jji%>XE$I<AF"c1VWZZJU]40u=h*"o.hFHZ6.fo=21eg])QhHb6&^
%KoIq!iLiGrU@%Q$+@@i/fPXtC.T'IN7pUEj6OFTBdbE>@)U7&cX!@Lc9%#j`cIBEG!)I+>TE1FRTC]I-!&u[79j;m&0R8P4"j,$f
%DQlD!D#:jeb`MClg[6,&bq,+E8&2.KN)`>49h8Pu7mP<i[d6Ka%LQ[.r_]*;>=QEGg+R+?UngT"%fpo/[EB,3#I>H!gI*HIQK!Zb
%_KGHXLB+ufB#?^WbYG_F+ctjDEDI0j5of1QCmu)NNcFi+#LtnTWk)sNG4tWgNt'su05,mt^5P$V+:+sMBB_/Si5%fV/[pRf=+"7D
%##FjaH9[e5];ekc!5,@C48YY.*gC9#+i*I(-/,h&S1XMJ8"QlOV14/L_[9Pg*nL=>$fLGj#h'4`>h!'Z1$dBd>ML+BNenW)nl-VF
%GZm`sR,OrK(0A/``TDmTl;I??f.#A(=3Is(><BqerAU/=BLq6HI_beb5M5f9pc!.&V],Z`7*95r&V/(r2$>uBn0l<=7K@HJp$MF$
%+Ce<GAk)hb0S5j]r`k_&]hKqXf4V.$c%Z?`e$jX=&2fa@!?pbem0Ir?qZSPOqVr!5"MfeL[]beBf_-39D'B+26h=D&?d*\?5FB:%
%9%(!'?Hqn.^oGT1LL58A!a7mtbmAM5s%2DV[j&M<\*,(OrA=0Ti!5lj"?ump>au3&lKCVj1#b6J>7L*V7_<YnHsGOBe;YrjX3l@q
%7kW`RV>mI'dnQCB+`V%B1][/N.jq@/G"=-h4l^%)2tltb+@3H1#8`:&F*e,G<QO\?4^&Lb"fG=Y@"G6Q8F_9?^T=,55<-KmlF*VZ
%?fHsmOT(;F^qH/FAR9S>%fc3@PhMsSlQ*saSU[m:$h-ZdP\,ak`#ig1)=.>oSTjbG`4gQ\"+K=0SCrQ*nB88>.l[HHYM*pt!9F!a
%j.B3\fCF6pDaP_hq"X-mm9]#tSbKFZf\hbfr<>NmRD=&!'WsguaS(-i<6mr&FY`Ml+n`n0^!o[d#Irbi'%=sp&'5(n^R/16NWahm
%GVJ!iL;SuT;Ks%"r]L$ueHK\c[N#@m5jZ,mQN8V0QHu_i%6FBc*!4^4Sn^rDR/.!U2t4@mFmqc0"mV;Kns(upej?C$-P$=^eo5^@
%@MSW1&0s6FK##;!No1Eo9;DSC"W:a/d[]XNj:ilsD+Gf_Ujql?0O*hNiaM6k1]`H;c&Vkg?$=t*[LcR*@cD]uq,7Y)A(F"$b@'=B
%l.Vg"0^:2`YU\\%MBV+-6_H-ZKcbS>R#\UuLfn6=Z8Qr;^RtUh%tILYBn48t^X6(G17aW:&<-IS4VE]V:Dj72%:S>n!"/uA,<XBS
%a;U&n?+(lMbXpM%Qafug@phIeOgET;i'<`N)$:CjJ%l;gJs'qGiJI&W30W_\,V%h\S2$-OA]-DW']e*.DYLsU5HW1Rps%c+jOlFW
%_nA'L/5/'WR;q;"hUZ[@2#5HqUekg8d/IR\qUj_crIP6(2C#!*dK"&=',e;CQ&!X)DYG%_gXs&G'ab/JVdK`&28d`F=cdkFH^5Ei
%gUBX$Le)TQ#,Q@sE.\/5P@;Tr"P$-,%l%ZYm/;Mo!'NGd57!Y*^WRa-#373[,1OgHC8!oVRZsk*fd\pRO[4LJ+,ob]'9MWdm>B:.
%C<k8%ld9tD_&C7,\c1C7_t>X!J;:C:ciDE-@,+d$!-aMB\il<S'k&d6"GenTlB+?q)Thd`A>qjC>Qt3Ac\C]i!VsH("p&5Y72clq
%@FDIC]=9^crq<=!`oVgrD=Fe($eg-Ag(Cl\2?<c3_:qoaJ?B^,6j/uHoiN>_SR`*7Q;2#tqEPE@%jO6c#%[Wi)$PsW(E!C=Z3J&1
%G@EV4+)VBY0u@/lq^m?1GKXP9g&`PX"P[!%das0blmMkaB!$:fM9>%)[%dW9Xg*$O/BL#L\P]T;%JM7Sa&ZHLYJW5K=o<IKN]X"8
%&D%'I&2Uu4?dJudbk^Km!U)Fm!SgWL`Z$C:im+%SS:\lh[VR/XgCAWF""i:[`h9.;n02UsRY$>Tf.*s+K/iY7LF<.*go#a[@2CZ8
%>PeRU:dCSDIM>$SI8$Vfjp`%[0_63@7tM?>,bk@]Sn=0`!-bKsrr2)\:!5mn!JAZt7KGNf_2eZY=jL*Z#USJ_p$\OHIR+o,HWBR1
%@(A+J@GFfWa@e!l@cU6!57/7I:')>slAR?j!"KeidF&5lrpFXJ?'''h-DQ)Jio"uhGZmZ"4r$I245!oYe(ii!Ji-OPl&Qbf+QG:J
%Epq/'@l$`_Xq)S=l8OJDj(qNdK,H(!M;dY;=V?)(E5S@84I(*Y<#L""d\8!"7m@F5dh\GF&]Cua^O48pp3o:H5W,'o>\O:"29kh1
%AoJ#YG($%?ZngDj+<bC0_KQs7j^LdWZiODa`hT@>_#Fj"90kt<]/1tI`3K1-;Ger;"ioLpAtl36?dJq`m(;]>"Rp/@P[RC6<CMX.
%ja@mT"W08S(VVVVb>j<+"1VStiO*NSME:pH8AU>P@+(c[';sj)gQ?BT8-Kgf;l6:e]jK+jPi>6:$/j?u.&.n>oqkiYGbrB?!cW1;
%lm#AH'\h_.^F+&CDju8&i/jaBh3eVolUWGtDL'@6OPFC]jFX-8];@a8rIPdb`KjINB``N:3QWZT]WWNS+Ri9eLB=7kjJ4`%_<$:0
%Ld;e*raYGmJ2H1,UEJRQ^lT<XV)\?L&94l%V2m>!:mOuJYkRnH@*Q`AQ^O_Z!I6[SfjOlp9qTCn8;^1ODA\J&P@PmEqG'Z3%Khf?
%TF%W8ON@Y9G4Ph;J^3T%kB5i#B@lj%>+:2%nCu/kcc-B3mh`>s_i<R?`W<&!dIn>2DWX,Q]1m+Sg>]A>:XaKBDp\"B.G/W*Ra6q1
%*+[KKA!)AQ4trg)8M(-^>J?$6(Sl8E$6lg+M.24KpC#]Ji6lQ;irG)Kdh/+m(Z&C/'-TS)fkW/TlY-[2P@W7O(h=W%m2FB5"#>J'
%Mus>Ip*o$Pm,I$Z*kKF'Gaf%`*,3JRGhDlsD3/`*f63F/?Y#ZdZT[gY[>,(,NJWcV>W`eGDq/A<_!SFKs(;.MhZ@<kbK4<j\4",8
%m(<bnio3Hol8t?1W?/?mD5[1HiN<'1(4\dWM,2P$!U@J>NWO0HC6`WX*oSeLYolVN1^b3/:2!rOB]4*AjP,3\i$>'?JE[\W'Tc^-
%IEMkcmn=T&X'eVA"TGe&pY-f">lLjC'S*)[Ha0=Gr1743/\'Q.o:ClXJioUk&)V6.]WO6\G*A/_C-2?cX"k?&k=i\m%?M\a8qq>.
%_Z3JJ$IVEKZ5?TR[sOS@qb=:U/C#.M4NJF(_j/_]PVl6E-h;OT$I3%8V-m>t%b3fs=\S^[m!Jcnpn@Q[TEl*OTg@m6j<@LW[ues8
%Tt4CQU]&ZUp/?cWRt:o6=8Ob/*b03:O%p[L<iOn?,.oB`G[nL]!?.mc%Xn\_2f.PNeQ8(Da;nh#CeU_U*>/cr-Nb4W5%7\VTRu^O
%W3i4YbS(SKYUPA>FL>tBgg8dnl:3oG6G(_Wl-;X.)q<@j!5F&M&q'/'i!0@qVs=$j,:ggMbY1VM$-'?97;Vq00e@`\"lBR\mM14^
%T&<JL.9N!$qn*?cL>:M*8+D4.V/mcPc->gaiF2'h1]VWI')X4nJ;>b+[d$C\SWXg,R7G@D_/OQUJ3iRug9/0#5)_r=qTs&G6[Csa
%ccqKH`0Bf+c#J#D<pBR>6@dM]+/]$$r5_'h)(Mo\K8NSEah928@Sc#i\_BM79"\,9YolDhe>s0mT^`0)UMjP^ongTZIoN:4q:DtR
%,L>1&!)`uUkZ]'oVZs&u])a%``(dPB_&N7T%04[*'?E`IXBc5K<DD;3f8oHdK0R5u]Mg3Q1QYlNr4P?YcOPK6`FbQk+.V7QRhS9;
%fe+V2m,I4J*ET.blVb>$qJR/h]WGOkJ#te8Yi612%V*#HnjqHVRrZQfat-.+$\kqFleIlXKI'P$!,+P)6V@f;(>S&6JquGAd6rF<
%,0p&4!QLsXO,El815e>UrIP6pT7iKX!2/K,Oh.+e"N&)D,_,MLOi@s@fe;??/PbR1T_OK1q`bD';N09^D=8jY3;HA0g/RIf20&ll
%=*jnacn>A`10:=@rSZai,h#P>*c2K&"&gUn//Z+([eD#A+!],;=O;C3IMViQ#S,;[)/Gi+ARlQhhtqD7MX9b042e:qcYI?A)#O1>
%JAg5)=/Ba6ODgf*EU"#`:PBM;Yn2tjo7G'(+VX/D(e?`>Z0*'*;L97*[cgdjJSco7=e&IXqdh#fB@l2Z\#*\DU)^<Q=p#h#IKB6=
%BsiA"1PHUo6Pa$jGWJ2>a2H!i8KJ3CXdb#\q,D@fY.eU5c1^`n=(Q!([eEimR&AW]<g&>uli)-48aJXklV*C(`!C;K(UQI'jJe@Z
%=QXem-^%moMsTp%Lq/ZO#mRK#7;Vd!R5*k,.srfNS-=DJJE)lGT=gNRD'0PQE)+0*]*$JC&?VfkCeX>qIKBA'=Xs@MJEt'[mAW4u
%=f[nq"m#NIJ/GEV(,EC"bQE94Kj.QO*rogP-^fP6-h$/B)[OF5IhXgHVXt?$X-krmf\hbfJd)LQ1mQJhE*]L2.V/#/,l9[MD5QcZ
%jPXimpHf;'ljPfp=Q*46eh$T[!M![#KMUIJ)h4$-Wuh<a!*f'tQ)g_X5:lb]oF$q\X6]a-g11D%&,L6M@^Fl4O!7L\$iCE3%g*Zk
%9no*T<6=30SCtbd8H6rCqj6ipH?m8b9O\fV`P'ei2YX3,.Mq:Z*uc9@IR+&Y],d*T8HZbJa]5o:DFX3:__JFe;N$//gmd]sILrPZ
%PIK<CJkUVJ]C'#srQVeJ(M\A&?_WWNgjH.]\._0>a80N8XbdMDfIpogbT)ms"Mf;6OGTr!S<qpJ`69_`*Xbe_dP11rn8g?`5TaBr
%b:dBj!_E9T/LW)&ah5@F7M`7eH/N*UPM=T)ib1YJ^r+eXBRkmh^Whf>3%qPY#`--o+soe9BQ6j:C8)T<'u-hA**Z<cVX<^HVkF!S
%/-V1.1>*6>"u5r,qGl<BQ7Ypib7Tsbi+_NGit$RD8_!s%5=mf-gB!Dp^JK^E[Li)"nQ:A4["`9!!.NXi!rBp%r1-^?!6?GaegL]i
%oeP:2iMo.ec(6;#,U_>0+OW13'H8:0[9q8^rKF$T>+e72VqVd`Y"m[<k\XehD&0SdJ9',JbPT*a^(k]S+(-O%;qqr*V#8dp"[@8c
%n$dj29Q%:d'f&c88I%O2%.V0*`dU2Ue?G"B[/nG&R\6PKn6i34E%EQQb2T)phe)bu+34f=GAViee/_9qdJtQjb"4>L,b$q!K:(`R
%g\W-jE?R>8s/<FT+K*jfCVQMGdO.heZiC6HR>Tp%54OenR$`,``=E"=D78'n_/+BuBqM0X^r!]m2@aF%npR##(NTMN^:`>-l>W?/
%h(pZ/F0`BXLNIuI(Q8g[fIpogd'i#J2?:CW2Im)H]VXtRKn8u#>TeW/S*flt+Bq&^]ugn:HW=lph`h;!=,r2[5j$7!LB*.JA7b(.
%Go^&a#I=0q^9]Q2>Pn:LY]bt,Sk@`=@+BpFko*OP9j+oN@+B'^,Du`92H2p;@"t;^Ago*s[Zd1"!XW,hIHkq^ISsOE\)E4[XT#91
%Na/khYPgW&!cRAm_r#+Fm?c?`.0U_VR=loMjlZ0!"J&5(+7=F!?8ncoo&^qEL24f?pc&O]UV!G2HQ.Ih)0]Dn;nBM%N&5sSr4+:U
%WG?Os0uOL)ceI$Gc>B\2G&<oso=(=f+_Zl#*?uWVIR+@KM9@R$[D:M=AB&F]jcS/VJWsXf@a$-C-lB=/JltGR.n#s>ZAkidHkRXW
%7"FHI$8T[bV*Ug+ac3EM(Diko#48DJ.N#Zo2J.2\^Ru%e/qn#kU^>UaVA@ohaOBCd%X0HlR$m^2":BmciUIo3f)--%-p5R[Q9ccf
%>%#llbTqf@@:fj!S[Y`W9FSnL4RP^:gr.]\@egfbS?ZFO5>jj&BIaMl/U>?Q:Yer;(eb?3bb4$Z@,/=$AF!$Z_<1nOrkuma[(tCF
%KoomS+OD*\N.D,&q<An?f;"_NePrb_rKf8.YkJOZ?u8hc`GH7kaOM%D"3>B$@*3=0krZO7B;$I4L:?IYB'ZpkM-^^uCVNi#mI$Ip
%!s.%*K)hTWb+"dM2/$OqVT8?XlC4:j=So3)nQ0L\1\^WJTWN(RAF.l*!I6U4hqiKo88uY^E2O"'F!s$saLgEu\f3I'G)ZVd$HV17
%!89=s,K2TC.>W4i[%j:V/rVj7GB#^E"mI7I__nCmH-CNcqZUh%7J>l4!6cB/3^7bj%FHl7YTej#p7m-=lsWBb$;RIF4ii5o1U7r'
%NATO/pJ$VZk9qoSb&HrHO3:BX8fp>-]/2SV*p.o;$fk+/8nin4OPFU'\jO$>ac6mm'(=$N'F\C\_$m=A(nit2K$2XAQF)e>>@\F%
%k+#rrO>[L_S9u,sUW>te'grTpG8UPpHbZ3_ig$uNRNO5q)9"a]O16&]`59S@8fe<DZ)<P4\2l$*d0EgYGo2=&-6V-Ra=)k:9UOsb
%'64t>'We2aA&^8=>d1"VUVNArq^kVldoIf4!mk^P[s_gN_X.?I0=QXCgbdlTZVZa=_lIo=B)$3\[``S]%jO9H#q?7r[7W_s_N_NP
%aCTJnfo@l7.eU^XJ<@bWDseDu6,+%68diG.Bm.LT[IIEmYnf7[;"@GU/p>sa0,m:+#?EfgN'e!P,lH4?"[@htcg/@e:;[MALs-%n
%[nlZ.a54Q$D1jkA$h1@D>3UeBr#(6/:YcC3VMKq[[o`J=-qq&pR).Nl<JCLd/Ok,`#tXloG/^D=3u@cPY_PfoQHt0R)mTm'MG"$1
%Q9ELkJgNac]BDQp+Pi8+%?Pfl77KOOrZmQC%V&9B)4W:uU(=DG[ZHMR)h=I9-=\0JnmJ'@JNcb>[X<9^c(o<N$>/'+QnelY[9q8\
%iKLWH=odt!j1)#TJ_*i=_SGe8*XW+WAHN7e:1?'V+:Dh?C+%F4,lT\>!t7:r2nMQ7':?Mqf@)d<N.HM+!`R+S_qa-fK&pAaD.V9F
%!7,7&doRaA_Zu&#h\MC.'E,ADlp/!""SchBDWi$AE-j>D#]'kkIsp[s8O;LTN:K$b'U[@!GMqDc8HfpegJpFLG]UWm$/-bBV)/5.
%)(PWWauA0S&JH\$-TMEsPT2"_4.sFC@Wpr;/Y"CBSk'fN!8RF4K#iStjDEff#N,1>kp2\oe?:J(E4a95$?,>K1dPR(8j<[@c;=,n
%<$(H9*RnS.`_@5`0uVPL^#0hd3*T&eI?9/h2/J'JF4I-Cf:4;27$uDsA.o24$juDE=6UqUiul89pJ6.NTFK<sD5FT?r#*Mn:?<]R
%X,)Upl')$!5\@cm"Z1I.bR],pKt#Tf*sSA=QQa6h+VCU-i>+2+U\efC*TS\U"R.SJX*blVYkIfq+O<j;9%sCik#;\[gm&,<Vc3BO
%2A)"UDZK?K[M/Ri%.'P+m*I\ojS6+@"p$20R;)(G5ksEV4=rfjEV+l+i#6X"*eO;+gJpF<G]UWm#s,REdD`(N\EUnS(,Bc>Ps$31
%<G$<<2?5UIHbjnFFPIn@4as_bl?%Y$K++:4OFk]/RH8Q6(+9,b*9smSoc&D4m408/]X_Cr"I3+?r@!1he"_j'\2='cm5D6?ArD9C
%e=>n2hiLiC*ge\ii,4hE7fh8XED@tX8V:_`#A.t%Hl&\A+9@l+2&p0aZ,3"-"\k(uf/NM&!2$,7)$TMD.*-[-9Xm8?r?qY-Vo^h0
%^[5m\."K@W4EJpT,QrlT"doQn7KLWMfmOVp/XcFme.69lGiAI#nM'\FRNOA"V&ok[C8s5tT_6f_L3B%'qVV:nR,f6EINHGcD_]T$
%_%lrM%XntN&1hJ;3I[-!T%B*0SGbPaEN%?_LTH)9]?@Yq%r6[0"k*2,XL'PZH;6'F%Kb"'3lN"T'Cf`d+'C/9cmc8W"GnLDP04)6
%;LMG^K-69jD#"c\@:0jE3sZH*`ieRrYV?$lWSdPd)E&`4K=SbS"Nu56!Fu'9]9\1Es#`/n`ZCkbpJWhc``a@dQ&0#3rM3h$bfERb
%8%U38Tq]^8jCF^K`O"K-@im);CB=3GF+"o"q)nLpeR_Ja+B&ifB0^Xs2O;Chectm!2>Q4gD>!bZ!q[p"G[nL]!S1#BLUC(.#(Xc9
%jA/J24'oR3I:FJ<c`)4A&C0Fg],S*%jAjk7gR7'$\JB^Qq.NY9_<59s'?RlKaR5h55/i;$jjnm]p<gh^DsJ4t^\0)YJR$0DD.iu[
%\Yeq/FZaF]!meAPV`5f`SYO/>rN>63h1*,O1))=u6bp>nl2D)R(Yeo?PIb?TpJkIi_Yn^X]sZPYD+ODNR/.!UkCC`1h8'V::)q^\
%Ok('u'k8F3c_5V8(s@rJqlb#b<U&(Bq+T]C='^%TI#9ZFbc0q"Y4\Tol-Xnm=/T6,F^+aE=kQQZ"V4PH!<+ZkVW`@kBK9Knmmfjb
%+m:.H+YM7n&e&8?Mccon#!jO2^^>Z(_pAJbW_9O$qEKVXe[FRc14/M-NiQ*d8H20o]1hJh%qC+(!SZ7u'VpYN"op*Mc>!/?fK:2%
%P[bmYXVK,id29ku"u@rW&lZI"^lmU(]/BZS17;=kPXEO&<r4X+MaR1[SN-;,b)PL<MZM\_00m:'JJ)5^#L0+VgJ:AHfmWh-Y9@g^
%GMSm5*8\9=nUdi'6dQ';0RFXd(A'lrVV$_SLhLk99hAB*./p7f#G,,4[f#5@`<L8I(GnBcAkLtZb;+8El2GsN45>uT->"Mul5g=f
%YHu1VZKdB6+(.D$n`t)q&X^,j9Y!s!bPPl3'M%'IlfePYgXH_<lX]2YVla<VIffEk%#9=;@.tcG@(@i!Lk-/)#DPa#Om?fqK<0C.
%]mZ)j(jQnp_#o]r"onbM>`q<i,GdBr7Rn6/W8ePBlPO154H07;#$A2oc4\q5!9Y[RDL3iD##E2Y\RQg)iL!KI+;9NsmQR#3gha9u
%-`I>:-//Eu9;feOBn5]pG'Q"H$,t"F40nX4enl<*EU/_)"E3TBi86g`M/E<DLf4nm23mXCZskW*UR\67Jjc,DpP`MG+E`me+)Y)a
%IJqJlR5&?>Jd=,U1BK&j`6#JLmS(lsUjBPHPb\I(ep]mm<2QSc,67->@^`0)Q$68>"B=5onQ7J[?0hiICK76j!4Z&<4%fsC!Z\K[
%r$8p;DZcIg2?23XK21YR'lb;&_&N7T%?RdkPhH+V?kBS#Q-[+K+r2Nf:T=m3`iSR1&O3DAr-WHP-9iiDP6N-1362Y=KR)2n5V@'M
%c(8ol5^\fb;>2V/i*l!hZp8/R9%O&^?kRh>?2),R.q2rF]bV+^,M(D*!'"'%G'AD.1$1"r5l,D`&\nB&kHE4da<]&["@QK5O<@AZ
%$ghQ^J;:8A%tC!KIS.GK*$"2AT"9Qe;hf,[aQElG%=l<?FYe"VPa`(Ahlr9h_g&N,^QA=3m/SR+POn?o)em70[JCdSJ#>?/(P[NM
%43"`A%r8qQ"WDG]\d!Zm'=&VY@.#kMRMZDOYI&O&)RD"uaP^AngY4ZTB@sBdkGl_(aUWjLEFE7D!Dpi]/oC[Il2#u'%qNR+-&WA\
%fIt%T>WF:A!L=,BAs![%GZ@0`/A0?h7mLLo,mtUG/#Ie[\AGq2PGAXQl>J.Mn<<V;]F?FOdf!6e>@>SZ5W4Sg)]p<;[9q8^$!2R]
%+9JH9@h]d]M&00&"Ji:%;5$P)[U^Oc5:t+ZHuOdheWM!TV#I5<"[@hsceC]/Y.iR&r/)Wq"3E7*Dg[L_`dRsfiC[%J%Bt5IctuR8
%0K0a"k(.)">&mH$HaE\-$SqX$)bEL!r2Z:b#U&Xrb6SBGba3MUO@*9$ZNiH*5t1j;@;P-%DLdMM^Y]*<i50E]"ou[j613>]5j'^6
%3s+n"eE!8Fo4GVJT*Bgq`>m5`XsEP%S?r;PH,&$mJ36#`0CQB46/6joj,,.-gnoD=Ks@3/gB_`a(Z8YgV_YgfJ.#;VMu`W,\/&m3
%XLua9Tr?2DA0HSPeSKHe'V9.<qOafD@ip*S"WLBIR[9.#gjH/Tnf+<F%nQE<<lG8]lk_KDk$;>L5<KeD+Y\&b]V?YdAgU@F:h1nW
%RKbNl=#J/$J9R99*rojL()[+?\M%f8P!%NJWu##1Nm^)A:\0[sm"_iQJ:D+,8j<=6_;lpF+S(DI=;^)L0N';CF"J9U'gF:o!e##V
%7_`('!$L+L1*kEq-GQo@6a#tI><UsmEg#i&ED)tJ!-f@Xq[JW6YPB[IT[neGC`GB.?;RmBP.MD+G*%BHmIX_HiMS7D3rnc$)QF_V
%M.BsR1JX.508FrpmKen`@_XsD%lr>2Z(,tW`b.$C)>j=+%jZlp`"mqNf['Km@b*r#SNdY:PI<C?R-^N2h+-;>R^l,j$S-$[AH0R1
%WJK!(2)ZY`-%?7Za#q5q]C>J&1$AG]T;s<8j/h`&3#H'.f([qgW$2(R5<<aH$@4%sG%5Bpf!8YA%1cBe+8rTI`6k96+)DnW2E1CU
%XW`oU%K;p/PGZ6i+`$FN:BP]NY_ojm^t_6&=]tg5C!\Xj"W:d8[ip1O8A<bs4fVr/T)&JGL*:!,nE,0c'<LRm*k%jAq]aYAQu(T@
%f8q/?@prs6V!am`aLYQr.eKi[J)B=X@6=@YX"L0$/d2hq`eg11h3rSmUNN27o,d=>f_Q&Yr'd^Vep]mmX:7d5^fFV=U`7<i:Z[_k
%&42T#`6@".*X`1SX+6LuBK+!T!.bA`B5N:/q$N3@Ylt_MT(9<"GmlnCE&jq?)$Gb!QRmdI@I=pg_:kXUQMhq^$ZC.A;g2b1A/+--
%Ll@%t1T+&'C>CFO!JtuP$j&,-&E2"@5`1CB%E01UPic53$9#<g<SWPU6TPLIf%_Pn,9Fl(IKQsb8"#=hg'.Pp-L<bU;u)0lL:@M5
%9E`ILi5V9p60c^.(,Yrt+o$GX-&2_fB5)reQ>a-?THVTsgU!"pN-:AfXt<UD_fh,r\2Cb;a,#MY?dJjkiW.@8!O-C%G/VnD<Q)\k
%_M8%-4VWiZG7,:!dh-pbY_'iH&<GgHNc25b&7r"1>*F'eigUtQr8P(N!!NK!ai4U)lk_KD6*<i7:]>dICeD$>Kq+]gCN.;3_RrG]
%$O3cmmi9]IRZ9e>#$UM@9(G?"9]%*_!.j8Fm,#1510f7N,G?2^gSTRDq%6U2_8G+_BS1D<X40$u$ZN4pM?nikKnqRPjIouF)Gu$;
%=^!s&nRmJ*W&t>LCD2fpX6#`I;FU[i_pu4YW4l0?Kf'Q>X9mb507Y//m:,`U!3T"p1'HOX6p&K+ZYA*2$H^#uV)e\qgajkD(g,a/
%-/7$1]a%g"/0f[rjs[?'g2QZ.Nb_KJ8H/r1[,*64G]SAL$0o$@<D!pTBbP"n=-:`<=5ZacFP^5A:lp-Y4*:car-$=e[V+V&Q,-n`
%"I3NT,3>3hdZ/iMhCr_]5Dr03D"tVgA"gT,jP,KGZ!YiXmE/D-%00HV2*2"-gW;4mP/n<C$P&8I6hg=?#!WLcB*0]*q1\1T5UGAj
%2P[ZcW@uN^a;s]_iS25M8#]mSi:bkZn20kIRNPt*.^]T@b!aue8DL13G'i<@E/h5$0R>kc1UpT0G50>D62XlTJ;iB#b;%Y>AIO)O
%9ObGX[R?X-g=iZLEBD:_#&iiE1dJ_E<,)NNQ!sI]<'KkbMR>//p52?Ad;+'C#;Wel#XKD;iFa>5X:7G?Dj<$gYJce$FgrVLr"rO3
%CJE4[#[hQuq,lV#rV\&k'?#1N;g:45I$m08B-FZp[V9AX4<c)l6@joKgR0"e!]MX^%_q6j\5Y+U:e:H5Eel[;.W<3^JW]kC43fm`
%G.8hP_ut#E(Z=2S,aF7:a!H:FLHpD@;l:W<+PZNp4VFFGbTN"Lhc=9?2Sd2WC=S;p6Ip(5;Xd;*BjM#K0tH!.h=YlQ`-j+k`#%0$
%^<LoTqZUh5RAJ>mJV&d]6cMCM%2CV&n/@4;![O9Zqa^Rk,9+!U(4I$^b@qWOp=nr2WDob.PSOFV3;`:Jkff/PIB&(8(D:/+)Z'[I
%OI2il%g"^Hc#si-GLkIpK-9\&Mamh"*;[DTZ;kl;-A);I<b[!oOS@L@&EGA3V0O(@`2%%hGB'UF4RQ-6jLs2PnhJ&:qZUgJXur!'
%#4Q6)`(!&NkrFWXJQGu:(*MTnfg14mKBl_W>52:J3mfhcobRqsCdD[IPYj[aEU[h+Mj6T[![PJk)n`GjhZ+P)m@rtq4JITi;f#MY
%^LhBPoOAsaea3$a,i[/S^(JQXZu?QNi(?mCZJBs/(7,1oP_-u(=e!&64CZ&7`m[C,\#J9eHooKk$ubSNZpD;:<GEJgSLMBuT\Och
%780eqc/SY"P&Z@IPk!LcAC(Na3*WZ"6'+D4`>Q9>aOHPV?3_s"oPNK)%Co(YBa\n5;`r>'JgLK.2?Z5Qi6^Om"4T@&VM\KCH(DoA
%!BNuAZ[2PX,9+!U(:j@[nA>5/i%C^[N*Lh*8W/a**;qQ>\;/k8O-EZA0'B?4HbZ3_dZpe0gAi;>Sp0VF7p]4.'4]cp7uBa:>8G>2
%#(I!eTaeBu\*!1t!$'oDa3$CspSA9#nqj.57WQ@c:6SGY$3l?k4O*j'-:maN<%1O,;GN0o(kBiZ7^fHI*i8*A1QZW*Mf^WTFXJ@X
%oKecGT/#.U5]$_rbF'[_=7/`1"Cr2o57@URFLq+,p"NFt5N2opJ%lH4g8u'DEbjAKgjep0>3cst+ePZCgiUP:f!`5CQFg9`]LQ&h
%h^-TlF+48ZgOU6RL(3B/M';+EON3!=A:CS$*rWY71*LmO$R5A)kkP+^%_[hd^U^4+?B$n/CY/e90u;W@qtTmd#s1hR(4Qs<TQbE+
%&&-<TR.kM4nYl!sS].<ZRQV-k]eaMj6'Vj#9_]D%jT_lY<%1_*J`h;bKqr#0gWC=P>H2/NSuNrq?$`j^4=pF4oG`sD2:q`A[@*!6
%T#r:Q+UN\>`6+$1*fD&\*XB"Ds2JI=JJIgK?<lsf82L@@'2t!$k@C$%4fGd#hN+QJ\Q_ei&B<jEq3^ZUoaC98i*CL2Ig5;G8`rT!
%6Uk%8Kh,+_.s(grUY+$<L7F#t3]39f%/'u'82?<IY^QrIOL+3MlTs^2<^+&P2c+q1F[HG(<!-W]Zh+X@O''60n,*bJ=I7<o9SU1q
%G:\\HR,jsn+`,X'OmnH0k^t@04ijq-n0?%CWm^\\DpG4/f7Sn_^A?*^Z,oPiC+G(iH:[4Kf_YL?0D?'VM$cJG30j$g]C'(rF@K/G
%$h5Y:p7-hg<1G!>@\E$@?/?#?3B[fA=S*Qs^U6^#`gWfNf75nOo:I!^lRYrCo`HOt1DVrC^B"2>"`)6R&Ye/-;HOB4pP)ujD!/j6
%>,m@P0sT0kr2m/oM1i#9<A8_9HPZCurb^(Y$oAdlY-k?mTIlc=op8A?;n)G;!XV\5_8FbUJA5FD-jBRTTOujMe@hO,ai4fqS'HA%
%!X6KmAtt/hP$<,a"dOj?B*"XCh^3c$LR:fn#D5!0hr)!c73;3&g\Ohf;u45;oF&I\bXC^mI_nO)+akFmq\VCT(*^Vcr!nek**fYY
%&R3$:V+KPLO!iXfro^<)C3&S9N%Z:Q!Io$/qS&$6;56\.aLEV5B"BR=R/.!U#:?/Zm,>%A.6SaZqgrYLaPu043<=`:l?(s9(WBeR
%5ns.k(hjcL_=m8%H@EL>>M_"8D4$i0q'>AsOh?,-[L.a1V!"eL^CP]49L7pI-g-4=g:QM*l8/]<DYlu^$-`K:d`lrP2dRWh6jB)u
%9Zc.Zh=Z-EL$=A0_4B'G]F0\W0`3:G%Q1<:D#q>`hd_3roaB\r<shPc+-)5$'1&?16hYSG<-V26J7*U_+1U5n0tr#HL&]*LZ9SqX
%D]MOZ?3r40bJ4i&^:DkE<bn&5[D0oYI?+QWc7a^^0_qO5q/B7LQ9BB:]T47"5;OsULOtZQC_24$`Rs`I'b41b^?:.+>DDeJZEm]j
%mikUgq?C;&#MIh/D?rjQchFm+@HnZET>2sc?a]AV2[*)`VXEqO=qV2fP9P9#(m@/<6i=/_gX.rcVqGD%++i18Vt>ClO8E'F.Oi6^
%2g?f3_j%lrE&@1&*=EpSr]^0o4,bCNfD._08IWVqPm91Ee8.32*X-.a[TJW%"2U-2A10>Q;8-Hb=f5$Hq,*KEVKDgAF'7AhP9QNE
%Mh_G`Ui['!U:9<4/F]Nc!W3t+-^3lo@+#aG:P"k][[266hf0B=3[dP&l">JO##8Puk6!p'V_VQ@0-p3_1$5`'?,)I?S:#D<iahC]
%C,Woam8AFPk8.N5R<6l$I<[2;.5@*k]RV23^G6[i`rabZmF5I(_1,o\k6!74-XNqeoZ?;+6ON64QKMO]#32XV5D^o1>ri1q>&;7R
%=PupP!r2@7kG5m(2l1+jGBbRLk^+jSkaDte:ho:K+Q@$fWLOKnn==Uh*M5`+BqiiLQ)<`.&Y+8bB,nZW]lM)[K67$HQ!]&(ZID=t
%62l;;AjXVfnH86M8B27bJ`NL)SS!5U(Lh?UWpSo;Q'7s2pn[FLl1gC_/'m@cO:PTDc]:&8)1m?C?uNOK2W8*1n)L&'-e5$3+/G<h
%m9UYES.]@.7oiB*8<?B+gAq_Z#4jh3T]5?%7b@Aj$+s/R?AU3$GEE2:>_>B]DS$R+c"=nVKC/P3421dmLASR$omMp5$LcuGb/7)E
%<D3N9-i1Lu3AfKk]b#f(Q#0%Sqe*.Hr6JB0c8=7Q?t\1ce!)*Z=5W!XV_9h"TO?i?ARg>$oaC7BT.H1X5?nrn<5=CU6ah*4im;JM
%8:Wi:])`<]'N6t5:uO^bjSM,t]4jmR.r"*j)(<;nnP+6=;R>KR<B61jgA(p)-RP5QI34JAW7(G!W:VEb5N+4enjjl6htCh=^u.PA
%JUB_:$T4+9qdf)+l20_f=F"3WrbqD#K^02FA#pd'm3N_[]W#6<J&!Ylg)U%3[khU9PMiArg!bKm6Ro[$Js;\jfP\Lo_\R&YhrL8u
%IGZDZ2bW$=869LLbF-T3k$'s`H&*77;#]lc:8FMJr]9oUrLa)qItbZ:ofrKPO7q1Tq6,;Hl[Sj(+9)SlraYn^f7$bE&%FP8.fQYW
%8fWqcdmIhjr>&"o=Ao=27*G.NrTD$Bde`VrL=UQ$V18(ke6!LQkAcHB_8AG0(i]6RdBn^g=cLD9HE-:(!'0$=)'RT(\8V2uodh4%
%o(l9%OIcVgCAfpoo#3`OcNA7_Bh9;Rj_<ThGa#R2p[J7B<lDmM23I8Ii]bq^Vr@[%7fNE)33duW^=G#o0rAC';RTU@;N)jRb#9gj
%Gr&r!U7ice7(@"Tmp"kGE5eVRMD;EKVO=i*`:]iMY='3>pGC[WO^/HP8#Dk[hI[C9Sqb"7n\?IL5!6gu!U$,`6M@XH"CjiOH?`PK
%b[BB+=?ph[++"UX`r)=;JdO6@^Y/;?!?'Kcjc/S/6='cgEDYY)QJi$#4m#p`c-u0k0MXUg>7QM-3+XN9B%tJo))<GfC+>jA]:"$>
%AgS(@i"?kpQ5d(UJ7/9@HA5q/OWDLln\BBA;+O+K+s<eJpDWA3Nm.YG!E7<th:@[emg%$C!u[=+AGgBhY?Db/-Z,tH,b]DUr)A+_
%gj4=7fqDk]M]gH9>>g!(Jhtq2(#r;jJ/d:PBS1hCQ_BN[UjQhI+)a,YO*8/^pa[N1eG"USDdgl>O/7&U0p4\CW7[MAJ^L%Rm[dMA
%nS!s@c--b$/R2h(7$-0.Ub8u)F&n;V*QWN.Nu?ma>Ei$%;8rg3nP5&?qV'Pc<:#-f^26A\/MZEsq.h+V`<`r8*QHUua@.RY5mH)W
%o2GC<"PNTZAOD1l=eMu$loE-<M]H.E>X\hU)Nh1&\ia5i3/WZR>aSR$qi@r2XJ]rk)a(+mPH*2Y]3doB=Xn4/*b')q5^G/M6<;<A
%82k[(G3dPgQ+6IP,M/;%&H"TM/<fGs!YUgr71\@C[4@B=46':eF<)6Tk</HUGT(Ued5LNM-kkJKL;/Es6D>"oEYoVJ^Cbu^'Q&#R
%@lAdS+S+m.3+QZ,E0?[%mB)Ima%GfE`au%Rerg%t^Uu6VTk!fRVXR6`)e2::>EmG0PJs_VgS$YFV?`Hkag0/?aRJ#c<.6Oic,34O
%1/a?rE<56tKIXc[SBqb\1$7<]g(`QW]nE+iJg%5\>p$(DjDHorq"9S5VS"!%Ig]d,+*T!m;NPm#bZeJP<]C<OD:m"_<4?t7RTWSd
%HYo!X-H=I(`#515%S+MbpkbC$hK?u2NAMGek)tjXC`'9;"qajM9!FdCWo0Zu)#n"=CD\;FBBt#q#6)e\AD-*q;\FD@b(H?"K&7Gu
%OAaPhD(Om&fD9oWCQPHtIV4U-3>(dI>BDlb<3j!:>lNjOklGf.PG?bJ%1.>]IunsE#Ku!+)%!Qg%t<+7MVLTT+]GFr^d>65nfY$Q
%OT!HAO%559Ns2:rYM_?Yp^"3`4,bQ^>"tm^eZW'%U-iENP,Yq2.%7e>@lJ9"ogi#@H.`'6`/"EO&B$k><qX;s['a@J@G&/Di`hN=
%`^*jLosMpT`N4K7"[<ja?>>FJ@gp&uhPSNQCPG9lBc.g@6el_Y;:IA(,Qt_pK*j'E\n]O.o%--=%)>@_O9UqC79_4Z'h4G!YO,0,
%Klq#S'7gYH`_m4i0B<?thH@%26Dc;R:GR&O,X:#a]CSXV/4OpoU@f@V0O%?.9?X`B3Ss87+RY$c+;D!rpN.^11R1;@iA@R:4#._0
%R/P<tM2k5nD/A+-oJ4NTd@?YYMK+EA&$F",U:Bm%"*Wjm\DT-2+%:U'SY^Mq,iNo?cU0%;+"VmNA:sq*JE/u8<Jf49.IITq%&l?E
%ou%*TSQAnr%p[lAbP8m_-\EiX%l#lNcD!a/qsJ^bH"CJ@C-RMnFg&8^SKqIJ$ThC6N-X.U(;th+JF5A;,Hgn'g5;l[5ZhGa>PS<V
%5mi'n4E(V.%,&nbfBZ]taUTSJ:9kB#k;YbY:m)MumCNIDkEX6*lneGQ`oGE^:Dc4<WNs,5@/+LS,6BP@-Qm1s=G'7B5R-3TZeG@4
%*mO=:!?&<Dh.fiH.o\%k"D"W.CIWW?J;aR/U<MBpR2;$.@lt+in`f.ZjsK75K1suBCWd6#^P4H?s7nYS(c1X!3OVtI.L`pN*oM(9
%a8#r]cW\:p(mO@5o8eH<Eqs_S0uh"7;V?SZJMWE@]Akb_/[o7S`mA`r>E8jVqXrX+_ILm?o!^lUMuu2N'f4mS6OuHEg-)PMCNmg?
%D2E"V*.Z6A;VD[MAk#6O4TLn73:\TV9QNp"H2t8MMN$Z&4.Zb!2p$:)R<T%jNj^g9+K9ZaCEA5FL@JHe@X&lCb`9RN4TLm@.M:_A
%"HQ$$*.Z75M;"+:Jnt?Q%mVI^dH/CLaR%F&;NR$B4R4b[B-BA]DX3YT7reSb)_Tb,C$?.o^BAR\4"hj`FM@BnN5H,c!(hah"a^6T
%*`9Pom83V'Zt^1UDk'qM%<259./j3W4iYn3S5L%.$X!s)ehc*Nn;!k+EQ>=VZIN3p*\E4':V0tdQsfuErimO)X@(8t;F#1Eg@LBu
%#bjukr*qn0Xmr*8n@jsRJ#oi(9'sqhf&QG+OHUI!R>@A_Uk#7nd@Z`-`ri4he^bC+j%W9AJ$T!SaWa!4.Piilk.HLVol!$#S'40Z
%iU`FiLK*L1Y:28XHHp/=CniLm*%7n:fUn)*d3cP3Y^C`]*2.s!3FLGq4r[QR,eW@M@t("dEl?]/m7=r?MOTn']C/h\=Y.1Tq0JDN
%b7i=9U8u&hAm;_KrF#M<#QI>T<Oach0S@O[#/,`nF$[<iU[GpVcpf\F:bigg*Sgg=!>RXukWjcNDO*Y89gAscCJfo?m#]_B,?37;
%/n[D?1$6"E48$fd9R0h?)Sg,?=p(gPJ=5tuIHAsni"?hfkG^H#)LX_a"Do=/b<9eQUmeGh?lO*rC2&!If6f8r5lVOPo[]$nSQDsS
%U=W\rIXO?hqi'H4'\T&NWP^ISC&<8<MUe!7F=;dM^r1&d;P6.jb.`.&*m^399^O*D+jeWM+\B3<]q('#3m]#G?B6Y[$R$pR%Om9'
%BKIP`?AX'ZFdKFALNqfB,WHNE.r<t\%`TW0qKq91>fTIiUYKgH\&]8Ln<M-+H7G!&"u;c042G1SF5_ZQ[n1Y*M&)]i@oeZ]:8\r*
%kZT7LN_5jD,5Y3mjm:Te2Lif@_p@L0GVB=bCk(h[H7_[9qdpUU:_s`hS9LfM@)tc5"qtH-X4Bs"(Le&>o@e-->\0K1&L,OX*6@'#
%Nlnlr!LYCkL5q:N"@B_j"W:J)nt'c<OJ1@4%j$Zm&'J;^)%&CY2\V8\;GorO`\R"*AZ7haouV4U1Y<)@8EI5c96nTX$S'(uo:lQ$
%+NmlQN<nTVgLRcTYN3IdEq\8/n=TGkHWLk!!rM3?R.I]_23=4>/L:qu!6;If/-b6(DG=o-&B?>N'1`$gb)4<"43NAt%LHq6/0<qN
%[Xt.d,n7K./$Y4S&!T/=@EHrQ4M)iLOnlB^2&ZH_kdPVF5mE;lKeAQ+Y+mGaTL@kor<A95L=?>:gn.fO\P0@U7>0/2`5o@BRk'>#
%1./LlA\")6#="$e>0o`1Z;"YTrB'GRLL\TXnCK@#ld=MER:+f916"&EiQCQS=_ln,U5==87iFa`M?sn:Pp%q8=V8JgP>S7)MX:)[
%nflhK9q=4$g^28T']Cc!Sk;/t&mP(g_m/B=qJ/3D[@F(b][$g(_h^`.0lS75Dc1p9(;`97Y_J=^OL&=mWN-kI%NmDK9^hRQ6mZ$'
%%:;OFR2qk[Y=&S`bt",(01WC6+VVlL;(l!ab(f-cgY\c15jbIqT+C8mCtYXc($aLOCL7[Nl$eCR.RS*2$1^>^=o1aKM"uTWiY"Dq
%L2T)A\6^G-AZ!5pN-+mj>17dlZ<(A%_S;X/nq6&-J]t@6n9uIX$u=R\H)r4B0X=_#[khLc]2b"32OF2(Z@9O=F.!8(NJPhT)3n@o
%MX:-'J6IAa]eWLHoZ]rDP]?Z/<nSuJ_+r;0Q(Oqg7L#NoXl!K9bKs1MBad+[j\/>'nSE+BSq%5)_r_ThLpXQ#b:Ujf5]/u[hRQ*N
%Y11)UH6i8hrh\tHnLSKO\pPOMhWb[P[.2._OM:WLrAB[`fp<Qsb0.D(9><<3A%Z5bj`*Rr'DTL@cl"a4pcpTrlFSOg?q7$ZSSMd(
%X!8$))Kn;[qo\#+jr#3g\$>NefS\[oD99(8rPA3Z#QY>C%.En@d#`D1dh-Mc=Xjr26qu'I=%R)XK]3r6[E;lGQarF[Lt'(Y%9_XE
%9%9T9NHL-["m%Y#+%XaFSumn1KKQ341te2o@/4R\,;QJ6eHFq;hJ&)Q#!,/>9l#eO)Tg<`Ubl'@8!%pS\Sro&'&/$TN7T8a3c39=
%#ruAcPn72mh2`dC:2S(T*_Pe,#2,@B@/4R\o4Db1^,<D.F-Ct>=q/IjVUQ[RKp[U=$V5$beD_D\Ub/cfLI$g9*\d`fm#W?P/RRBj
%cJmufJ[MpF_/G\;nkX%f2&a59;hOF0Ik^gY?3!=pdk?0&3Q1QCA/$@X'p*E.,<lZ/aD9G`iWCs!MtJ5l/SPj.H/EpufIn:)Y-qd<
%&gq=&V"Ao%Nst5"G!-ob)&IIblq2c3r&sU>`(>]-Xp9$XlhLfG&Ks!54mm%Fa8$!t%@^UM0H!FKSRe`H:EiU'?4Rl-]Bo;^a.\@0
%Sd&(UKuX3#*j:"+peCo=KNBGh)"b'22/5BC$H_T3CJYs>O\H="&UEtkmb3<3E8CE!L6C;qq8G9>F7$QiJhC>n<!dQ?2h;%9L#R9r
%\U;MeooK=&;LBII9]VldH:Te7E74A0l3GdF6^c>Qa-eEe%If1M<X:_(/DF`T-$":$P(;=!HB@Ob645<T9Xa"SPfK3W7$c#hB<#_K
%>t+FNA6,SVp)CPF.BFm1o7Yb4dkfMrCk%EdJET8jB<%adPZhljVni3uc0goiQY=>[PE=^aHa`f_rd5A+51"/T7.FoiXA]D\'b-d.
%]a*Z\GE2GX-,JUqAs.HEUp(PKSqb"70k(74+01R]d#h_ced<"E,_mXm2TpmtisH!lS<Bsd85U\RWgbV<rNYX6>X?2e=u:\Goq#6f
%B/03\P4]sUm%m<C$^<q&MXcntYH]bc;VeNfI]`im@.1Nq(a+71%Di!b4[K-\I:;+OqofbJ%brJ"-skrD3"QA\F?INb@4n6M-;#km
%7lWZkgB%MooDO?WghEmf.5ik*k-XTo<OKt9p7oi#]R37K]0QJ\DJaV8q\gm`m0g*k?j30rY#WMA#ul`2.;d&oW8eMA=@bm`XrA?/
%f'N?Z3Y7Gj6,b/YC.)\*ZDPrH/7!j*k"W@S<a!Lm&t+1+17Gctf6OV!ib@Y(7#TT.E-eCKK&qZTTVb=P7L>b*;t&".9QUJj^4>MQ
%#)NgeiG;B1ou%`FU:QZ*21nt/XF^*$Cq%H[</2D7&W+Qd,b!HGJfE,u>8t5[YFYKm-)O[t.MrO*QTn9*;FEbrfQr2MOE"&]$m]*Z
%2[U$-.3bg#4$Ae_LP1/`W3/i1[$6:o(-qM`[aun^5&8OTO#;iJ4;r)(E2*kWe(+_9lYE.[Q5A4'("EX;a(-]"&O7dCD+#jm00nn,
%3rq8G$kVa60i'T2K'H0FY6lb#1fZ@-VF'Mug[,[BS$hP$#G*+iSuj%$YTY0G[DCVo)QM/t6TQM^Fb6c%mH=S?+lV#6WAksDg!i:8
%&X)O\8Cpj62U`tO%3Z,`'eoi1.o3DN13\pg5:@iHLWAs&9BLnQK8N<;a8f[7I@0lb&O)AH,(Gc+$<dM^D$t)EJ0`d)1Dq:es,&<$
%#KZ1=@&80K1\2p7%&$(?2'ZpfgukOOkhFS[qi!UJ4h:ZW+mP!q`Mji[W?LAY1#ZR,CT)EP0"5>=o-1s\9m0-\rpT'@V='5%ZI?Ic
%JKPpTObZ53rH><VB"fO9+nVM-,"a!1j1<ptK%a;b(0PiS'cmQ=FJ`rcQA-Y,`e&uFY8u&p,m^5W$7\RN4]XWj;)>k/]31sk3;EG]
%+W1JTrHs]WZ?WP*ba5+U`6\\;_K>IgC_Vu%G!I@k]F3?2qJbJI3H8i=YVHA7&pkH7*lbnu.jb#FE3LsE3^EDf<2hV3@5k50%jZCu
%C*=u/\I0)_-a(_<R,fV_mA`^$?,>eiV/W=`#.n).MX<O#)]qc??*bPBq!D=mOYu*+l[)kABSM8?W.IE&`O8^AMEF;%f^1.:#o+_7
%Z&f@qUaS?%e?p0_Fd`W#FG/;sZU/F)JLLAGFY`'dh6%r_Im`3AKm!@kXA+E^DOa!tg"PADI194&KLP#JKscHl=m`R!_SL9fm!]\1
%7]^Ln8Bq4B-Om-\U,$=sPCAUF\lOpfL^9KB@Rs.EBTIERY(InLP(%I8>oPpgOru5P9,%cHWNUj[59%.n'\!-ak:'D_h`dgkYC[/o
%j)eKq;?TT.,R2]^$ED<nS^k-"fMFl$r"MLF)T6jD]5RcZfp23)*D3hE7M7>=Q"'JB:Ld`n=,3^@2HCq(,VWe*Kco4%B!JsJ:^frg
%DX0h_5`HNbBRGdtc%JZ7!EWq:C.lX<?AgB>l,[]8WsolZAoY^u\QY(i[H"4E&fJ&AN=F1_f-#d:NMK#N.RXTLFmQ%b3+o_4<A4b@
%o!>9C+99o#GH:LUm)aKQA.rp1[\+fV3+CgCfP3uS9$Ote`G5rB4Rb3$@)l-^[BU`[]5;d0qq?TRr+t/O'NfA?%uH0B,L?V"<#\@)
%HRigSj*?.AG$>,-e:JAf2cq=9E-4(+G)3t/.CImW2@^e0ahS@F^@NK%1";m+LN'o*rklt3!2Y`>h;H>Q5FAU^9":H(`,VK0Ed!pA
%T'j'q[o=B7olg9+!u@g:>a[1>@([_uI>Y/W/F>+Gmol;fV%YF&V4LYmK;]RnLtP5UC$TQ5,2l29cE"g5IK@jH</F@s\!o\1"/qre
%(?.<g't^B\Do9X3<_rmgX4fjZ7iKlUC-[HK8Z,(4_JhS:4I%m0LL=DGG"m3bqB!gf<@p&j<8dhlK@P:JKVSP]jTGREB(f(:T&)Cd
%!>n?u1n*)IOU=q?$,BZD=Ut-.?n;P"A2s\+UDWq9^f^TlnqZTl)MqqT?#9#M^'6*8Ca:3&=?FCuaZ<E(/pifr!$)%1^8kEsW,QR^
%<!,.:Ah\QX*rQn!"u)>bhh!un=A=ADX1$an>kj<X$t-48b:.+J+Q9fYH;HiYqUts/I-g(C!,t2q6!HKPRe5:p$in?H]\Y+BicIA,
%3<PYi3]+1r/Ff[R\helIh"VcR)8HY?'p(5%<<.5Ch*uN]:!4uQFstUk>MX<(n20hr=Qs@C<$=D)jU_tnq1u*+HK4Q^nV;WSN3?O4
%!%&<fc";,l4P?q+$t*+nYRF`Pq3FIp!:VB^Ig.TnH^CTL!mZZ2-uoO]Yk9kMiF40a#(V@"Kphac$?4[^4Ts\/47BCW"8R$IHO-hs
%V/,J3iPJ08Fb]s<q=Z]"6\%1:/0K]Jpf:/h&7@glBZ_bHIQP+\!^)HjN>MX;41R]YT"$/[Z!1#^ZJ./8*oHS7WhNZ^cR]j][2I\V
%mtK=V\Sld"ODs&@U,`?Y:N.l3jBW=9:@8[$4^ILG["j1td;&5\%fq,5oedWf,lK4din+Kf-VGAn!"BfErT>WUkS#<I#iP%Wl3J&B
%D;PugofA4*-j4U3c(JW'T*9m;ei0hJh+8c@!k-"u'E2sQBc5?GVcZHuLIZ\tKhGA[IY)q\8`5^na&ENbZhWUii*knt,_.amE">f2
%`US9`=L7HG`It`)66:?aEGV8WZ<IEVfH,f:,!p*.pOaWMm?r[OU:U%kLlNf\CoqE6Tq(^,>afC543C'Up)Vh,9^Qd2$[FA+%Goah
%?u<tb'-4*r<A#F2>GHqg"_&ONhMi*WO"/H/;\CA,DqC@p"tn]$_t?Jb[6\"$F5pO7if&iXS9NqP<3'nai$n9XR+gNU'dN.d#&!7;
%8#l[DBhDE*ERqidEmpsLUQ8fXT6fPF!,l-OjB6i0(5Z$GUp`"Vo%5#8)(hip*e))hGbYUk,R/<"Wjibn&G[)@OkUloE=AjHSRn_5
%D0Qop)Q[]d._&]]YV(]6-@c60d;J,!*3+YVk:jkPHQ!ZT['i<Ea"c$h:[LNOMCH9iYhYj[;"(`]52ch_AeOnb'X168UBnW)%(75[
%*d58PkZUA8:P]/$jXt1N3]'igY[Q]7F]TR:1r8obS@!?H]Q&JO@?"m%jI(E56QsFCgfgu%5U]+:3q'q>-fc/nDg)&Tb94YJ.L+Xg
%"V4O=40;fs:dC<g!>Pk,%<i4VQ#Ju1^aq\ba.j5o\)Bo*Xqlnb+_Y-)AB?Y)R%hA'[C=5.I>WS@N6ZS&Kc<cX/>O@^gg\sZiR/F8
%mDjm8XfnG0I[ZDQ7oAY]"OCe_K[`%jP+.=rI0KaNC*8Pjo+31u:2$cAB!UKsIB5k7Km.HZ#nX]WN96X32(JDrpWWmHCU)n*^E!`l
%*to^(^33\n(6O>N5(Y7Zg(T83?)<-P3ZsHTMW<'T6GHtQ:YNoP]qHii-a_H11L9Ru5)q7o63ao?FPk&Vh20OLo.F9V6Ll8t-q)i-
%,!WKQ[A[n'`m`N52uq;K/]48c_,]iR.T5Gg@<[>`[-t8H"*)aaiora<r>'+k%9tm"GKW4N&id>g;Fm_&@*X$tU$0/DWo@`'OSi&f
%f:Wt$2^WcR?UJt<6#5k,HW;&mNu[MH":+R5-As@6eCR3]Kfj#rnao)OG!^!32%q=_lr-p!Wkc4oXnXN'oI5a]S9NqP'!_TgXAEYA
%OSlnOHV]U2)]QGpY8p]JQ)#ViQb\KrGL4K+Pq'*"b\B)i34*%nK!UP/m8/d':t2ll>-%+CMeD`tW*`Q`hK+I$(P>OEoZYR\E$]3V
%kB9fqZaF5.X,:[fN4L)E*k&e;.bnhcj&&c!NL%34QW1Q`;^r8XId5cVS?tX3b!:M.BB8=5Gi@"57s1ouo&M0d`MXR6`Q/#GmG1t6
%99/Yiqh"YSs-j5I@$0WiV(LFU:uJmO`dMJf=jo/LFW5Jt%0#sa^F/bZ.jB0TT3-`-W(Q0s(%Jq^ML=Dkn#M]j,gu_fO&Ct>7se[H
%`&6f0rR'Rsg".'Vg"H>6>J[`A'(!R?NddB[<cFL>5&[O^g8dB>)Bi_+Rk7R?IBJ$3D<k.oe%WW!,ED=9G2C[^anXo28bk7/58`>b
%A(%FTUV`A#YG"SFOq<\d(&[s?J(olQ_qdLU-THSN3M.3V[^TdcXGr=I&WCQQhEDHg>;b3Ios0!i>=4Kdb`5]&DLL=')AUlZ)Z[XC
%qgIk_i(MVP5UB2t.*'jF_Hjb.&p7@Ep6:9>Y:$&RgKV(peP6+t.)rV,EDIjQ6^6Zn#0q@_O_3"6\Lb9DpLFLV`RQC)@.9ttb^Na-
%nbgi+4XU5'm!`3>T\>mj59E-Ffjh=>dkjZV1_eKsL0a\I@'S+==XDY5<.@p8Uad`rcI6WuBY?eqiFrYi:NdhVWnJlpWnJmKZes=T
%*DU2'o)bQjGs#tEYj,0dT8uO1mBJ^gn]<H[e.CgAT'TajP;QtWF'TDq?i2q78PW$lcDT8TcGG%j\qaHi>F'oIq^.$H7X(nhnhL#Y
%m8;iloejT).m'=:!+^G>qr]QZOOZOri:-Go6;:3BaS+7,"Y`K2UBfEZ0Cec/huEuGaFiRS7YDN?G2eQobdD\9!/'!>dr>A?MD78:
%Vo,M#CTtt,5"Paqp+$*g7jQ=PPapYkjX]-3C"O)EI-l):aGZf0fGcJgqg+>(K,!CoOoV7D$Ud)Ha0OiN.&Hehe^C<>!<uP5m$$=F
%kkZ4,MOC#q*<<6jaSk^r#`_*HC;kp-&,"u`B^N]W!-;G!C5?KB'Q%1f%UcFaX[L>5bQ'.im(B61LJg00.??CCq*1hce#,>K^3"c4
%<6X]NEWC(GYrNG9b%c,G+LHR"-O0Y'*er\Tk.1eW?o\57p?*[9RVHVh=q4pU=96GDY)VKU9'JON%\aOT#Cu#H,Wf)BQ$j*BRG$VR
%Q&9*q97epjfo^fhp8sl2!*":dNWe:L&=WkU=Sm9'!([`c,m!.Y(2tPW>c-;:Ui[\!'Y&*=!2T7u$JV?7>Lh?<!3id#5m)pZn(lCl
%,3`%7/>/FGWFlnZfA<CX#Zj[\k^DUTB'l(c!L>"sA4hR\^kQ(L/-i,N*D,M0R4)cXBn4`%&;K9HIm_c\]DtL#JcuJ`\#+\G!'2aI
%]OuU1<G\CF7p%iOgf4?!-'7G;J1di<Q-WA7p?((`nU7/WAP/878r5_qeZZ8&1Tr/(FBS-$X8V;8E"1qak8B8PU;jNlq^h!Sj[B$f
%8!m2[.NFnk7TM0FK0kS-V"!_&n<S(9"$Nh%/!%b.FZGIdh*eTm_u']^;M)UOg35n1b$JE-(=S(NYJpK_%*X$hEh;4q.I+Q+\F5TM
%]^S2^#Y:$i=dk<cLU++W\eZ'HYoK^-Z@]=uEE_!$<K,.]a,P<n#Kr\j##nh\UKODNlU+;MUfd:nl;'q#4AU.K8&C*Dk-=eukrUtb
%&WZo<\M;o$*1FTrkThlTar\ufa)?8&Snn&=SNl4u)7I7-c\>Fp'Y@VoD\S@LXN,%[K!#mrm6JY#f7UNrLgtCHe"1NQIUY@X:<$`s
%,sI/*bR^SKY-2iqlNEWh2?t]_]5enHQkj![/><hV$--@%L0`Zt&"qEO=4WBN-aE>!(Cqp7:j:La_]sE[_$D;)]Jm@(Y1BOqnOGW,
%PP!(J.r_Na)P69Q8U^AV&&Z+6mUdDiQqq`+ItSkhfJo+J?^G^,K*#W6Q*TG$$EcS$IR&cbYBOg3OZMXH9mHes#-SL(]:DP-eL_t3
%PP!"H.rjkN)G;*MoOeY(Ojj\-hdSL<9]d-OK&8o4e7X&c>OBA4bI.8&+ffL,ZFcp2qI;>+)"`-nI_(Xg6n^OG?j%)kbDlC6Up.eE
%dP6PafP_L"9j`Np*?Sd1q6lAC]R7?ELGERNj9>Mg9j&1@M`^#CfB$*5TKnoe*OQDY&G8)F*N5@sHE;NUOsWR-36uPs&h1q^qsJ2.
%H4k]1jH?P[p03GRg%U=&[?6@\18mOBGI`*-o"`@;H%Fj>dkp/=DRC.g0#-rrL-f2<B!DtCY7oT@=to,p]>eFt-;SO5'1eqBXojq%
%@sSl>5fJ6**j]4R^4p?qEaSCh;s<otLX00GZG+Bbr5"W'-ZZY8QpRpuX8Ke5L!Z%>.7M_O89UY8c0HPMkt!+@4l8B>&P8c<2t":W
%'[s\h,9X6_H=hZ630\h#eTHbjJ\cq15qi%\hVsXiA\+'INkWY=gaNK50!FgN"iA0!j??[3dcZ#EW<I'Dce)#`8rr<2jr&')D`sUl
%N^==4]o##U&t,Ocp03GBf@S[>FoDN?RPCI%X>d\:?K/c@a,oZlOJY<t>Gn!9F_+=X;5aVQl,^QC&kAQuoq5?eH+d[VNmntCG2gsb
%Pi9W1Q^V?/'Rp620WCL6rjT2:Th7cbV4+Zf;Qn7rJ(XN_;/.=3%f#j%Kd,':]`;%I2R`qik3)=U#Gh-5lNQ$b>h5]WDP#gQTpCu#
%`dO-S@<rK7`$6a'n*@FmVl$Y[W20#]U)=%^UjAc4pao:Z6s%Uf/N!*IalBm_Mc4g(Ij6R>-gltZkkUAP6`Q8F>>E+47uE/diJ(P\
%25Rd%T;<Zt*lK/r#YNPBqQ7]8lYE09W1O!O$Dh'E1n,(NHr.c:,;e9O,p(Z,3;#VTC]acZ@ENlkJ-A*>I$"n=12$nS;k*'--[SL'
%KFj^C$oCkkdRZkrdXFg#<&ca`O6ibSD"<olGkFplfnu4lFGD99pSAjR79VcAL^XJ;<hAY9.>D0^+s!CgbB@MtUKDc?p52I@;IUU>
%=_`AEBs4Ipg*Z\KmFL5moeg>"ZW[ZI%&T-O3(Q4'FKBQfbM>KPcf['D]-<bkkfpukM$[+pb8W#&oC]WfG>_p$VrZ<flJQ7-.r&E<
%>ZG)LpK=MCc"&2:Vj>GR9=pHKFF=Ttg!qm):oUPHU=kGcG.N:e*hdSfYOOTKT[Yb4L("K$Qr1H<#;#*7g.kU=Krpl.:IgZP:\Kh&
%QPDHDf>`6*EaI5JW1DWgq`4&pi_]>+?5h!J*H1mQlFkl[rZOA:=eTPuomH(\;/aUGE5OA/Ib^On,3S:feiu]QXdkPM8*YS*pXW,=
%PV9?>/B,5uHg;d'.^:InR_AtTG',k&qI/#DZZ#dE4$<fr17n75I-[\Q#?F#2:i8D*[sg('aqX(o-.0+u8t(d&Qq;Wn*Qq\<njIZY
%--(1JDuKTW%f=iWV<hurb-:Tk.HpEZm9BV/:=%V9$o),DGm<m?n%d'b"b%DBHgMV*hqDM4Nb,dtAX#"l+TU;5s&_`qh[cLue4HbG
%pY*BBXl#s`?i*W)?_aF%X7Pl8&"DFeI>39*kOHZGMVl)e^Ds0U%nK4_c#kDVdCo6@bkE.g$[$'[3QLd:$j#9mqe6E5AGTo8["<Ym
%?W,gkAO-2lp,,f(XRku;%rje8ffuajMkg-Ac$)jX;f9"'l#-KAh18aO0E-nPPU=h0\d\G(*S!+#JJR$@@`%K'p?>hj?An6jT3nb3
%C+b3IR_D;`@oiICJ!&u0Ql#eQ6=P/^oSJkea(_fXoETq8HMo9/Z3r"!nlZ8C%A#""X*nO%o;s>V!;kQdROYS*q=nX!BS([#?VQ2V
%oOKg='Rbu$Dr`u_G>I#'-Ipp?ni&&SV>diZJPU\7o,L,GW[rAW>DX\\g!1,OO6CAO`=$Mk`Rq4NphCoRQV+MJa\ro3DV@L,j=)q>
%NiL<oUE,;lTh[98e]KZ4d>CF6&hiTPM,W0\#h2,ZPB@9q>iF:E1lZK4nQ95]L6p52IlIU#VW2n!+;(RW?IpY(i$D^$Z2bBeLe1D)
%B`fmu7Z`-)=9=7=]c=8?X=U&I!=;3SOklu+V=&-7Y(L7m"*n8^Y.ZVqOX`""d0X+m2!:R+3;#BbYS7)@lQeC(_Tl(!^]TKt:W@A.
%1$mskAiN,4em8.ICaLl0mT)N'Oa(S!>(!=H)R+k,-QsMG%VjWB2e=A_(<$ST7?>,h=:HG)nL-=m;"_HGB`Wj]V`oW$(A#8lmQ/@Y
%s2YU=ps>t[B*YgWS9T]3n^q`DpsSjnQ?jQ@"\Zqq$KJkge95n*RC<R9_8;uqD&5Z)dHc%A5;4A*I(*oN:,2DU#]Q^hm/(\J:Lj]e
%(=P\@ckuTRlE]tae'<537l1j^m7)d_?!fsArNp&CGuQm)^!lCCM2X)D3l*91Yr<&k+Ui]03&_P9p*QTmi!!8Ub)%Var\F"\8!VX8
%G4I$?LZ[4GZV`AA>N[R\&P46N0PZ""qjmli`TBMZa?m5BSF"f059G]LHN^6\m+oNl.&%`cnct%G3H(Yg+2C:tVrQj\=S\`GSN*[;
%G..!,'1Oh%4?a^_R@p\RQB/O$&hR3;:3GH8"'E/s<fmWqigj3=h?6?@B6Sr+ggb7=<^XCjWghNJKaN(ZM($q=a*[lFWBZ-n$8V:\
%H.t'K&PTQ*MW;%dkc8!9k:Ie78MrP:^XRZ@fQF,L/0bZVKr=LKgJa]VA4.q-e:#/GghA1R*HtEa"^tlYp)Cf?mW3(IZIo%1-/29S
%Z\,r-j^l[o1>R1c.='IOJ)86ZTiBjZqbm/Giqf1HYjJhD].lV#LJY(n1j*'C4f6Tn\=5Z)'\2CW(/ls^fcF"[cd07h=qdW,,!0Fa
%cRR,XS"UnT!Esc6[/pu5</8.=QN'/rC*Bhe6$FALb"e4:f+'Wc%c,6#E=Z<o]lMKe31Lm$<0B>t/Q9lAM<P!TH[h(73\C_ZZe#5H
%;AeQuU#=H,encd'-T,PlI-^YJED:HaZHbF?U"j._GH@6XcA5M=f_\>C*iGYZGFVDM,Uu)hUY.4tm!U=<*Eu*Z*E$u"WIesl,FXEn
%2u]jW]GfJW/=$"+k*>^>p,,r,^I^NI@AW`50mZ;7%/O(ri&Kb`j,sT5St4D7<HUCUm8=(9l,Qd(=[K(\10,iN?*_.R<T8kVG2ke[
%dAtZr9i-[CC;X?m^U8J!=0-=\]/X&(hE+#LO%<"=I(+^V1o\@P1k^0n31rH31mQe?G1..`?fPS6<g$dE@4u,U;V.bu9,:6aN&Me\
%.UUku8gR$-7seWlC\s]1!604ICfpK-!6o%n`LK_I)h>q(AKFoS=slM4#$)qeaF\,6KugIZ0OYoGYO/1p/]3$JDci!tU@T;MW-^D.
%[9<:hgs9o"%]?V9_2@>KmMQNc'rWNqD+)7,:W3X#?[b_ibnURLiJ)*/:c[oNG>5@<[3*Ch,OmYE-;@"1=d..Z%(D2.%Lqj@9C45b
%rYkm;*O9&1*]6]@?R)m3^I^ZMOG/F-e?OHjlE]T.]t2Y!9VZ+c^r'6Z)*Lf<<RB$7k7jcMNd[Raq\k5(duOR]A@+1gXenA?)uj&]
%DMMVNmF2["%reun?g>?0XN^-^=Kui5ZVA%lFU\*dmJRdJSUKkOE4$2H)&XhNRN7jQ35t1KfQ5,ss#S-`3`<:F3+S@9QUuVc^J!GN
%i:^9%48'';Xi?^AY7\"kh`2[B!H`^Pq0n5Y0^,iQ%&!;e3uJ,;q)BC)0N9FS^a3I)ou#?!AABPbV!SGEi1>#1ZLJjTD`k15h@AAE
%W"G\?S.8oK^'6+=GKtsU$R9#d:`kg1cTB-sVVY(f!(st!`u#4W@n4QV_!\ZQ%YJPY"?ZFo!0sOQ]=X&6kfnLh^XAQ[YUaJ]?D9i7
%A,OpP2.U9HT>4?dW_^5e60BmIll?iC5.$M-TX@QS_q*YB7Rn;S8U6&2fN_pSr?XPB@#V`#/Br.7.?ObRIs+Xh+hRD(PZQYsCqd9)
%NS_YT0.1fH0i+VT,LOH*09.]9jNmec$cL6o`ttiClakA'^&X<\oohJ-bKB;,nHC`!*G0#?>IIii-[.N`KbYSO30S*dgUk_>^@+&l
%X:LPZ4+s1Y_u?X5b^)>mi;'cP3qZnDK-Lg"-'<NiXn>Ke[!&Z?nR`#UCVQpq/tS0Djl?kb<R#k8*D&bRisib'IEcn"(AP]bMPBRW
%nqQ/t;mh:0RV"biK?_dK9,Oaj9>8p"g_ASZcYA*uC0d`:Z%N/2STi#K)%O6f*lR#PV7(t%%Ta;E)jWJ]%=MT)+]sLlVlD2&F]qs\
%OB`'W0qG;lGIK3J3p`Xl3!V'7Md67@B+S`+(*';iJ%_?bn4G(;&:SS6[.P4HF%*SfQJ6$LoeLhND*J#8;=O;SFB"67N8An<@ZUeb
%gfFmJ>d33/nVCr&4M*gMHtiHrY*3ZN4K(8F-dKTJ8-HQ.X=B:d1heOGrP[*)+C-ZhQ,R>u5$5YplO)]<`UrW34dqC>B2!V:,mJ(j
%j.it.m2$;36oC*f_1;BYl>%qp-<j*1*`TZE8Vq27C8!1(C]6W-n,bp0#:g3Gq%b#VWJoYjR@0Q2Vl#!^2.HK-SfUVHZu[QWUCi5;
%k-7<`-D??'9)N^kP/6AOV<i!%XokLtf$qSuW';)e'o?DNplZT4W<7b$\Q<b6Xi/(KBl)3B)RQ16.4X7a`Umes55eHXRe_(:7O6DE
%s-0(-0%J*6>SB[HN!<Xh^;b._C<FN\6%tr73SQ\G;9Tq[njdYdrf5=8;c*C>9a6BKdb)t8Q_O>U.c<Q\Qp<Kpkt%*)`:UW2,8=k#
%"'/SM[BY^9`&<aF_'niMm<cPLCKK-,al1rm)=DZPK%<_BP8h?;"G5C=f+<,><f7+NA\H_J;ac+1#HZSU1H8Jc;lushHSAokaGJqA
%\u`WoUKpKKkbdW?LMpa2ULDbo;TVbq@"ka2%D!-#ispo5q'.j]J&_*8Bddl5:4kq]_Q7sn@uBEH["-%OA+NJKQ4L-u;p>HWEF"<h
%$K$28-Zp2^>><$qOeTZAEGG@hXs=,n8WCcU*)U642'S/V$D2?k/*0%Wgu`R0RW$:jO]<FVmK+U.q14;9MgmX3&'GZeehbW8fWsoL
%\T.O;1PHU!>tgY7-[33!f(Cn"aU1A+)NQ@ZWoQYGLd[phSB?iH<!3emjV3B7Dq+nTTG]\6K,+k[Z%3rs11Q)IDdo,,eU$Ag7p@S#
%P`DqF+)=9RR##f-:P2O(9AA&XDA%ST@rI(&%rrl-,q>>7N+?k/Yl'=l*DSn(f8MLN'LL(6Y^Xq3a\RG[K=-dY465Zf;QDjIHYXcU
%.AgU3'ElrBqBI&4:1S)n8t=&<L+9`"#iG6X;Q38@UlRp7[u>(jg[P-+*$&A%cKe$,5c@(oY\RH"59YV"<`3Gng"UURs.hTFHSe'Q
%@QW.3_&1]IqBI&t:3r+RPk`]#2'S@Q+9_0o>Tr:"g[1^,M-bJGVIdi6bj#Ej?fe_BiD9h>,O<APQ<8T&"<FM-o[n<lXq[tGq^N'6
%fMsHl!I?hW,U:Z-:[sM@?Y[:ZW/U+mfN7S2;r4:18=8ipfh3Ld4%1U3Jub$@a:AVGR`QrE5mhq1n3@L4ag(NkrH)#Hl=c-68mE!3
%Er8F!Xf//h7lV]`oFh2&n>5GtrW6lT&AI=)V,W^B7j!kthc$q,6J-]$[.bJ6*%R4A68c'Dh(2"_'-cX[,s/OV]:Y*_XKKOp'p[,k
%''8nl;Bou29skW"Uj%'Y_l<!<]Jdbf8S]<I;"@V8UUNcgk52CKT-i*qG7)4/(\t+<5W$VoP:uMn9D#sTE%J)Mo[nKTIQCB3]%Y9`
%Leo9qNrLS3\b0q@Le#+AhVjG,Vm`ef.W]qV2c^dk+h,ih,jb8qm%"^U?%q[ZL9%`*?1g[=3naMT.WSnn[_nC.fZDiQUb?$pUTl=_
%8S$$7?R7;5?HsY_-o*REP5A;R2,5*;S)aqe<quG<T@$l=NWl&U]bA9MX0B99&3`;!=7lWhX&*uHFt;'kC<+l)P9='_h59)82"g3X
%&%8RNRbMglmH!B[]D3[W,`ZBgoANp,f3lSScGqFC>^R.,oLL8)IG!?`?=0Pr]n-^6b%cL#:c=^t%9dmn8fqXqZ37]_RuY\=e?dai
%g+qq_T#ZhU<hdO6GjAVYH>Iqm30en$<E\'(.f^=ALV5F#_b\7V!]6m`]i,Ip^<'aT!b+tT4$'SmPoK!s??K.VB1E;NeZ?3T!%jQR
%#HHkHNl<TH8Jm4=>JHGONQfDr/gi(J2]kMoQ]m"!?JGoCUqUTuHWVHN.IcrEW`%Nt?C]sG.?!/)*@/bPNY`OsXmVJk(s@@Yjl?U?
%7Aj7r&MFg:iHTolD-t0qF1[sT!(;2Uh;1n]%/B&iV`"h2mCe5cn\Nu`pgkS)VEnuC:?f[1)U"qKg!Kk::4H_/n'RG$f?6_ncl,fh
%(Y:rfdboA$De7gI'#<9dGl_UR2M8]5^u(>^bm7(.b1eue7DfAR$d8b&kdWnqrB<t_@'6gfaUin^`qB_`]LQ0XTcU[S_S!4%Yacsd
%%?;;#f(Cn"Z*rsi%)BAKGE\Vcn'2c#Dr7V@C'P%e/LrNACb7_\OO:s*=b-m/lcun@`t$5(a+=T"-RV0&r0A<M^b9>>SA;V.YIOmG
%CtF:Q&-8E#jTO-l)rocFJg0g03-`86^dl9KXO606f9R3eQ_0?5Q.<CiVWp-l[4cu\12g:RJa:Da9IaUbb6b8teuXpu'DN#J?\7sS
%J,X0]ph0X)a5?fMT7?^8T78>$S?GPn6Fj_&r!c(YJRmuS)QC1!8JT*"(;HB63ca<ebBg:6WN(!AjKHAma[8:Mlk\;H,!Y(?-`bgr
%5sM(n4imo3::M#OWc8Q%(PXCUg2E)Y[]7q*&U2m/`+?F)Vf".r8g;_<:Cscm".=LRH#V@[`p&Vr>WLH=C/c8_lLk7//E4e2Qne>,
%dpd:?PdRt[&uj*]l9.h,9B,J#,;Yb9i8$.cFA2KsDn3X4HOIlkX*4"mib5[);-rgp4g[uT9A_Mb'@f[0AlYTIV%U4B!0Gg<4TIA1
%%T8tNTSUoH&W0@3r(eo%b3sGHfO35MMCn3!o*Bd0p(iH<+\GaE60)=O.uh[tcW!'CC.)AI<DX/hX4\bG>hqU?P@7%>:G7C2H]J7u
%.bStQ,9`7t$@ddJb.lC'`s-^nH<i:cq,oJ6go#HOiE.8<_gs%h@$?bg?&aN@'dWjmA>Wq<MLn]bOLC=rk"+^i\ktXN&fJ/O2Ea#D
%6frE.GN(+%%$%uG.iZ5$Q<qRj5eMX=4SoE_V;#2s(-*Rb%*?dtLKOqKaQH)`T3Gjmkt+'XX-YeDFo*R_0b2aF^Yg8i8?(AQL._Z[
%4$B.?)1db5#CNO.Ch-C?T5HR*0<O(tY7oc;TLY0Dl-Sb-c.P<@<=5!qb,X"4c=(e[cJr9=keTlF"$H]=VF?Qq_gC6hL>bVVMEf!.
%cZr.Zq8a9Dl]%&(d-`J"#r0JabecnY?c_')!-76LV<to`VPU?=NmWds^/XC(+ZA03aGos\W2X*<0+LJ.p9R&I1ih<20,2OH)TY<b
%;,fG8ot!t144[$7;>el1,oGBsJ8-.FUgQ<;,-Gq=TpXjfNNu!8,iC.6GG1CD%dD<)L64:^Ta!qR#\G\IH&6;@ImtS=QthE1D^@/5
%%s)$L4S)l6\(G'1]nIYaq8.t407_HE8B+1HqR]0Cj@F!1X_(0k;4c6eUrc=kpb%4L<q:h$&g>2Z9rDsTi+j/r!L#aa8:.Es@O'@u
%>>GLaQZd;`86+94IFu>+-N0JHp6''-'&(Ge3%duDGm.pu`W9B"Sgt6pX2KZWO^tmMhg+n2#uPsNY>NAIPEJ/J'E_LL3U.=F\<ElK
%;P2+FKHfNMbG`OV#XcsO21NM=Shn!SBrK)EJ:.^^=jUI%o^1<8))h_S+Z67>XOZro@Hc%GfTjfGq/(+SO>r_sD38kjZ!.XO<I5*@
%;FI>p_qYNGYo$C)@V0[(P#&ZriQk4:B?AKab3sL"U'i.K/6?IOpPb_TRANpDq(nIJ<&-WY+61AoUQt(2MAWm"p"mP_R0H=W3'ucc
%p\2bHMct9`WbfJ-UC-`t*#k%7Au7HNN>=`!$&7[*3J0^*m5b(^KpT/`;k%]fhe1]oQUkX$G-g^3\[PDb$[;+VFJ%mf*$'p2>*:lY
%@8O7E"^B6m24r<<^@F@^n@\g*,O><`U56Q*C&.0l30We[r#(2Li;6g$I#C-hp#BqP`dU$uV#F9[,nrkNqc2@E8ET;CMcg?KeW"6L
%`Q4sJ7e8\dNGASXa"+ntW_E+PLnre3j_8-K!d>Z_eT?C'1b^C%2]XU#=GhfphsD0MaF1)_(61i&ebm#r<*#F?X9D/!?6,'&Ir^u^
%eI&-(/<5g)0gE"*R+<,b*3!):`5bq,4C%K!ItuAhIbrP<LG8i*c!E&abbo2o@G&*MH/iHa5i+fZQ,h/iM9o"[KEY,UY4Re$q9&/8
%[1Eu8VV5tn6Ls=&oUJ43/l1V(BJ^@u9tpk\QrUlr(.g]C%`MAW[m3p>n;/>L<cH3n)lKFY/W(8>No<6c`]=Ncr%?4cbe&GPf1>=(
%N*,4O$ln@EO6/$G7--S(-rO3J3>AI+=ma\t[rsF@LgVAG0G;j(@koP8p2?ArB)SBDfLE2u0i=K"4O],DKkt.MPjHN03+5Zn14@"s
%K0Q+rT_)__dn!JQ.hW&aL%/BZ[pW0hl0)tLWii8b@'#lSe!LKL9KbL@e]92D$'Yr#21LL8>nBjYVa^?cL^Y01bI\EO#Lh[';Or'l
%8.pO6E%LsoAo>/oe9_Qn*jBhH7"Z^:q'%Y5H-!^#*0,Z8o>HaoDq!^EUc.b2I1#(:fm89\-QSs:CPW;s9]FAP6ud/2g3g!&gq>`=
%pt]75\(k?U]gZ64Pu'SnN"D[.)1>[56-X[K@kjor[,NZq(_f(h*s3c<QF[tk<t"FM*_qQdpdER_>grKi.StsQSY+sqRZ`k/U!2&$
%E2raQW0I$RJMRN\BbNpT4<imu]bQObjB)\u*#`FLh._D\WX1]p=O>MA'TX]"MV=St>9^2<_iujnr.QT6Xj(@5(Mg9tgi$m&(:Ak.
%)(UkKET"\1kKO.Q?h.ra;2u"B<>Fc4>FKp`E2\Mts7O9W-Ztnh<:)nn\^C%0om?&"T(B+eokF5E9+b.5jls3KDT],MU"4*Fn@>c1
%,h8C$>&M0TobMWe\:jl[nMSU\dVN?:/2QAgEAP5gaeZt$@$5JNSmXks2[AK6X@cghTENg#UW5.-k,H#<eLRW+bqLA>&q][!mXlc$
%W=I)k5+tT0m&,_Z@>SX^4L(\m]i&Y$nh_Z+1Es#W8eNhY(d'Oef!kK;;3_<j.@\ZU8BOrQ+c/FE]K#ARWX9J1s1sR'Vn-/C&bIdt
%P$\R1Kqq>:L?Ob)G(21?mG7>pa_0U[F3BM@BI@K3WWlO0eEoS1rNM)B]hsB&hF2)eR%nPC?IOm=/.TnS'#P$Qdb6c:8%BD^-2a*i
%Y;+[t>04a7#s$d%i<iXrNAr=h0VO7p4M[b4$k"CH1t.VM_bd&[#>)5&p26!<e4T>cN3h#s40&6!Np9p+DQ2W.q:pRoqRsmX#Ds?=
%5iU$%Vca[5Kcu7:\OA+c0;[egK0;upFoakHP=6)g3mHrP,e@R=S\)Jlo##!e"sPATW.&Z^E@5k=`EGKrD@1b?p_K$Gn!DEbP5+Vs
%VWjD%X:Gmjr`eGY:gNVsWYf:BqVM9p$3X/2R`.\`]$gl,eo3.EOQ6*L*1#)t9.-$iLp%:]dd6DPEs_lCj(lSV+ZJ6YVFl.EF+GIf
%XAce,OVo1)e^1=n9^L#o4T$m%#:>+G(rLtdM9L$Kir3F(ptBkU`5@!U-qiqP'A;84Z>uT&]uFl0'D/1]9_,dEQke!]k9M5CQcP9.
%9Aeh&&sHSMm@ug/,TQ9h7uVO-r[QDq^s0e;:!<D4S\5:d8i["b,Al+Mh>CleS7^kH[!N2"_A0:f%qDFE?oNR&8clKWbR"Si*;>AY
%d>L-8URC_>+"I<FK+Crn7kYq'6JZ%-,5seV/TQn?0Ejn\g]n4LS's^7Ie[&)QgA'/^4dk.52jEm5G./D,iB0do9#I0.&u1)#+qu]
%4?!=@;p>eFjlS_2,eonXI[\]hNb1d*n3?d`NlDcf3=,H>cHuL1I]E/]aiu-922<Kjo%r+cD,AV;(1U.e1)1[B1_["H/<iuWZZfmg
%MOn_1)i[B3Qhq$2WJ\,"9B?aIZ(.UeE*1D2Xe8nn;oQ5M<;_NbK8Jr$)C`SN/J%A?gYTZ[,\+bN[LJUCbK>?TK:/^@gW[W,*-F6W
%>[jLC_<ga&n)j*`ST7^[D#6Xn#Ujfn(/3hVW];]HFaOS@b!#4s'@3<;^hb!TArS=kE'"bd?nQV+WXb"U&t6E,gGpIR>p](075<"M
%lputl4T:S?ET^T<V..>CQN(1Y0E#3%]t"?ujFLP_>Ys)3/^N@RZp7O'1E8Xic<L`&[E<,>=.ZRHk1*[pa:RI4E-K2c8@d[ITud(5
%:*bZICC\GuY17SdIOb+.:PS=6W8@H,5RsgIEAab&F19a2>5G\7+4\:c/!7`'!6M+'')"ddI!%Kc<$CL>_&R\,.I$Xk'Oa$pZ=CWd
%PQo+Z%>,J0Bu0_unLZG=P$S)k$+2mr"&lauPM+l.fu\?;C(SZBRH%a-UCH8H!=@Jk*D7A$K%q-5DWE3_Arb?'[n1I$W8rZWX;@Ts
%pB%oos3gBo&tI]ap/c>Ak+OUa[ld@sM\\pZk0aP^XE/>W/sEE"3qEBOWD8I4)lX3/B8O'$puFD`L*G\Bplg^Nj*f\D[p\`06FZH^
%Nj"T(>R.So)thP1JOopi)9l;UbKdt5<J,ZOd@@kl]IbN.)^S&AEe6l'dVPO=#hj,F,C9s/>*94hfIm`"OY@OREP4GhqBPp;j'*KK
%Dd]U:BYY;mUAPO',HUR@c[*],9+;,n1sTOGKQnr?AM98bS60V5-6]Z^^'mfH66U)"&h3eX&t`,7[(@VM[@[VE$3$dYCSWqV_;sM+
%TUWPL?Djg<3$:fgZOLfI)'$!rf%fOhN]&sAPu.J`ZK,;'flW.!3h)i&\m!=*I$'>%a]:)(<X7cRNit1t="\7r-9acHJOt##Pm+[/
%-8L!KJ#\B^<aCY'!NLtKA/;NXD=SK(0Y=W*R9jP`*L7u>N$jo:Gps4r6ML23eLgZti`fOU$Dp54#"u5GFgEEef(b(62J@tbcKTk#
%F3qb_WS_;"Z56K0cOS@;[1Q*fVBpjADFHRT_ebl?l\[FpR7H9i6$G]=>@+f:e@2<YET>OL87.bD2j?J&Y^tO7^G4!UBep5miLlHd
%jhVYfY^0"%Zcdo6Ufr21UP%fup&qkB`HC##oCss8F%Xmga<hr[YeQn#CCI`T@C,ATlb@QujHL0MrFmfKIXo&o6H@UghDm&E+JH/R
%b_t_g;dP%)L_d1"\2m?p(T&bOS(a;k4tZ)U<:qepXm^#KUglur^$utt@\@"`%*]Sg+]KaK0#@<kDfJn<:EA<o1FXG)Gqc5QPT6&?
%mhCW[1Fr9,nR04'X)?/k-3^<*lK_baWapj!OZ[$;6s@<<0i.Rf=tg=Q']j7@^R.u(VAd9iW!a*Z0-+E[a;#Fo4d_M'_rg!`fJPZ?
%iO.j*V,BT>/1D8]IeEuFWp3ma=Ai7-%Lu8n4?QW,miG)P\-J="DMAp"]^#2/\qN@KI#TFRFR4Q)'l&tQmZpA'pRa40>@q.*o;DT7
%XVuS/:uURF!?C`q!u#!&Sm[^2:*'mh[m$r4I1=a(-WQK2@`R*i;fc[][XM>6"7o1+[obI,drH989IT.-/=9H*p[]!-.[c!_QXZaF
%mP"7lXI#o!(:8>RlF0FJ)-'#kV\bqr(.b85%0qtOL2;FBCtX.9?%RRjpD/iniNgi58W)c+,'9/6o"VY!.\"BXA0I&O!f<8Xpt6U\
%%+,ru7oHn#k-3\$24*d*'VF]P]!X?SAJhOOkup6ZjJRU5Z/c7[4cmU/BNII3jH1D\a@9c>>1?@@eQXp+B]\ot&\qbg3&'=!o*K#-
%qF_3.*S5DIL8kU04oTc-g)A3g?BnIHJbc/&>@8r0`%2s'*/LV\o-KIQnNV_r[`h>nQ^Utb;S"kBaY@ZfK%OtIGpoYf.2RcO)_OUr
%5rfX[HU(/Kf'8nRZ"pe2Ijt../#cbeUH9_i8h3?ce_&rFDipiljTA*EdQuss56*N&pLO_=+GnoTIW^;)RX]Rc7,';!oD'GbY_hWU
%\oiP^/o/bMFVBj,m3DLpMQa;HK[?;mi]r1KoHTF0nse;a<@52qkr"*\<b86LJC<qdYuj>3QSCXh]3M!hT2["Y3%Qkj'.9*6S#R3]
%PZB#5d8(5/Jl2n'r:pd(]o4\P=Z6*;2fhsHZHd*4U=)"k1C#STA;b]d)ko37<4Nm)jH>#6e)B_LPEEDNoC#:UBg5*VDEB"G^Xg[V
%pSltQ-n58:JKg[Qb"[(;FueSAA"US#YH+ldj$ZEcX#rTtfqA\VSVFlc[7P@(LEbSDHQlfV:5/-46a![%LM:D^Ul'H,;rCXF23qLP
%[,)(DH>]aoF^ljJr+\n4W969qT-E9il2P-_G/`=_8f"Vd]!iX#0<Dh\:G:]S/<mMpF?lfL_8S`4o&@'#VNq*ZnMQJ7&[fkn#pjFA
%'>8EY<c^l"53Ep`@4F`mf;lXdT]EaVg)D<)m9gHHIRloYBq`JgBM[f,UnS]4J&]l<`\9n+5Q!(*>P;"5\"H\aMA&TeLpD_t[,/EJ
%jX%3q?VJ41MNTU2m$%?$<<ji"G%ofHm(MAkP&7[K:$6;j:)n3CB,lnB+4ccdm+$Eg\qU/^nMR&2CLE\C9.9&QRopGi8FF#*X$T7C
%\$>n17Ut0V.6e+-6h5Rf-p_^2iGXu,>H[O:G^;g@o<]_Sd!K.l@r<&TI^iET[BcDS^;c@X&Zku"9dts021N`13@`8d+3K7V-jCoe
%bQ?s/;>H;lLu>\i!@4N=U&u#EUHP*MOcj1"rBWq`hA*(EWHc;/HdsA9WS^oF.QbTU,jn%M!SM_@a_$#E8qo(u0d&ZkATM&E_pGI;
%)T?L$lHR=GWG#A1m7+@fDJX9Wa50k-q-rH?g?iXSeG:e0Hhu=`/MNHcUA-Z*n^4\12$&V@Wrl9\0hsF]UOrYir@gY:&0tS/(Bl^)
%%MIB[A@j."FL=Ib^=Q^2BT/^SgBBgs$g<oT<:Mi/>k,6D9DI_8/XDLN70`K4nl0(WmLN;pd]1oA!<?u=jSfrb,.>Yq,uWf?Tq#oU
%rClEj,h9^=riDkLWhfSF(E7NK<qK>.\"H^/MX9fr;lS]5=VT687==>OZ>sG3^Kj/sBDEM%!%b0fb[U9=M![7/[i5o(ai!**L7aU.
%>hqbEZt3J'k)5XsC,I=K5Q%UU9DC.\hZC,5bgsP8_+;VkRU#D[e#PPaPpPGn'1P#C0H12UZFKslfhNo^%1i,J0uq[T^CoEk.BqEB
%Qo'Ooc%\6(a4j8N')kPEf6D=RK\kpD@h.$t3H8Mhk.mM0Q-oN?.OnW`?u>t;$[Xd)>*O3Rh@)o3==pF/WJraZG"G%EGI@>+i3$7@
%Pm`N#6$[5?)ElA5fLZ"`;H38CXN@A?b]Tp$9f;Tc^psd8@.@Jr);c>g'fVP_\c`478J@t4K2tpg>:eOf,5%gF5/'Z]2VIAVJ@t.6
%eT@k^V=.'uAmEfl+E>:m)d#)_Tfaf+,P6*m9tL&450%Q?*NP9\h;Q83'5O:JF\esKAo/hsMt.[do0=RFWle?6BbAIX8b,nu2`s:7
%Uch'o`jaV3;S,h0jc!:J&)1V`5;dhJ**9qX6aEZ1",^BDE7^dc,\a7J5SCPbBp%1N**MYF7#W/JB4-gs:o)OP4l%:lT@Jlg/Z.gI
%(?K.A7)G]o5C173P^<d+SC4bK/W-@a9Ff#k\%lZFY!cC!kk'IUcK]Q:?7>osp3X[ZNL`iZ$OQNHBt1cPWFereCT(,qje0g&$SI2!
%FbtfF?#W>`C%rI.?(n^IKHqpX94g$q]^j%&hD2uXcN?e\kO,#0<-q/J+cF9>[8%)U-",AQT3f$QE]&25;K-Pphs5:FQ@#FET5GHC
%\g9QUI#S\=rQ=8aKP>>?Cc"#j.F8&tPq3$\pJFWFF&]?(qYVrn$`$>[GQ:ld.jE[$K-WWLHSSr!:5/E<`D(&8<R\OA>eaL$B3<PW
%"lDX%.F,AJ,]OVM(.n>^cYehDV@:[TK4M]R$f+?OS$s]MQ:597fKGB(H8(dNZ6l)(/Wqt?Y1FggS!(uY@]@da1^E-OJo;f(k)(5X
%7LAfo7PlWiarTA*WE^;GP`=/C6&F()aOhFVC7J&6:TDX<Hl8M^q3oOZ8<p-1mZ'6[P\BKICAi$'Sm1b="^e%BM7*l2,Di<pE_+=h
%Ii=H7-c7TTLhF0i>Bq]R('c)Vol8d:O`oS?djnZZq&64_[+B0;ZmjCmOX]3&@U]2_mPQV%J[WtB#j\"[Rr^MHH/T9T7)CX5RGC.Y
%elb`OQi?n8LkWMr&p[4=*"-<cF6A"!]&?6q/<idK,'t>pZmj\`,?F$#Q1Kf\CA8R/8m3s-LD&$<3@\oljG32s`5+VZ:r56u#:87'
%k!Tu+*G4n.k-gJgR;V,TbL]!^EP65rd&(W#O&/f=m8iX.oj6[p'k;UKLlYAU36DK@)_47_=35>p'iUOjDCcF!BoAFYlZ2!pA5M,A
%dk+l^q&Y>_M;%pk\<hqfKd,QEPP\>J2("jgg>S#Z88%3b)L:Cgmr64?4ru[]kAiO%-O#j7=ibR6<L%YXP"U\.nq)'EI#*qQOt)7K
%5]ZLf@."VBrGF9Y8+]`t[jXaXX>ll+FH1@.97n_Q;FBW5R?g]mrOXp#kH(\mQi?L&,?lS8>uO/36E+_1d6^DNgM-X6r-Rtc+.@f7
%+T'lfbHr[H/,'g:b#dOtCj>#;*Je7uN6TudZuhH4>I@k.>;Puo)AuToZ]<".[uie/98G"rKr8/QSc*%47In$N(%.htT_)ABO3iYs
%YArG,WV+i9B]e!mf-.%jFVp8X,9Ic>1'`SCV`\9E.p-V1kga1QU_*9IpM/`W^t2+O0tcpJlYGZ(g\/@W>.aB40TY:mJo;g3,S^QI
%nB$mL20U:pF;-*Da\5@n_+bJ\bbZ4NA;'TSYC9n*Y*sAl%`p"ca;2m#Y??5r3>KBrG2pm)RtfV&<JNOp,ek%@Md]S>MWX;B#j(#q
%,^F#T`cr=mM(tQX!QQ0Z?1eCWWCWU``!i3tg1GjTM7UtagMSJCh!@iEhfVJM[Is6*OW6cYB^OTLIjt.2n]do6HKu,#H,O=_$P:cq
%S(3kLb)%k/!@iga'k>^Pg-.CCDiA)(.BDL%X:]Xj$RK[XHSSqq'nUXn44aZUE3Qe%i0@&qk7R[Bn1?&RUZ-q>T-2[B^#^-%Nl@NL
%6Wl.@1G_EQ[pk:.W]-:4TS04\rYA)5jWU7M]2tn`SO9[r]mCmT\WV-BIBTKS<_p,ei(Lnqpb4"mW6$23IX+u#,\H+r1^:lt7LZ2]
%fOar9`fE`nAgrY5<fppFisb#10@P)C/N\#qd1T"?CVL[qOBNVODfkE?r`8JF``k1)#ECbGAVXdX_'YX=E[i*LE(?n+jc[l>bO9Io
%:dS$G'2".WB*VuXf2TJ>;T,_"iM_`A;l`s#aO9<RoM`ZZphkf2qY*NOj@\R'8"R_q9euV,<&T^'p.<uLU.TA&Rk!V>j,[BnP:AX(
%b"@9b@SS98;4$L>X:!JM:fa`q%SG_Sm,J"Fn1>oNQm2Dh3Q,rtp1\_G*c7'#-)XXLFEa%.=&-l-\GRs.T@45]r3RFK/<YW"r=2ES
%L%]>sL0?\,(r>#DBIg*IIZ)0,h6`^$[ta@Vh-:!l/B&tQpJ)2C]5AtC*0aomUQT%Kg2/lRD[.'aqJ#;^RGHA73tP]"\=6^F/5f.=
%1Td;.!a4UEnQ@KE2*17]:igePSD(]rFYdOgai!@oK8$i'8-u-_1dXZ5Gu6-;8"E3co(p6OPpM<t4ob@ecD.t1m>/UiK6$0%4:F"t
%9CKqcG.%7Z`@1TBh/2)Zai3TfC+*&jpb,OW:MG](_3jZE9lAq)FF9!PN!c*J?pZHC@_m_YY0&;;a\9lW:10ick[gSn\Ia:CQFlSh
%P"=kAWl#GuZ9/knDKp&&/?,o2idiD8gC*_@$P,8b-b&GL._\Au'0)Jna0JMl?H&lrH&CDTWf\1VH"@/fWYJtieEoR&:OH__\PXi1
%)Gn>(=\-rdQM5J/T,E%fQ1=;'1!P/%bA4=d_8=5mp(@;RnLZG70oIEHV!1P_bUuE#@:\eZ9OJ<5e_lh$\m5U6N,sq\e)ID!$"bDP
%^B:gM4eqJ.W7*^(kF-c&NDR.*"mn(3i*Z>o"lrYHXN-G;SLp<W!A0j2JR0OYW0[=2;+qD)r!+kACC%Gi1]n:_FjJIq3#NuagC:nl
%!I"Q)$&"ZNPV[aYb2$1Z*k0bIL#o;nCUCPPB0DQB`uu`"LP2$ic!dUD(FPMfbgBjU-b`9h$RB`Bn\>bl@^&s4@XTZ.cngo<FgM)l
%Fo@Q$kRf@PbNBZ?eF>EY>HtL>QoG3`#:>j$7>9SR/,r'2#D$Q#jTiL3W!*tTZ^aHcf2Ol"'sBg-%8^fQO('^EZt*bH[3$rE$>+?'
%;Z;(r+cGHKMJlqV'g(/4Q@8_>LY6_+Vdj^C.f70kjgmj8l(Gs*?^Xf1O?+q)llO:Z+W.QQL<jHiRjBXXN.h/hg5C/Y\Qc;G?[nBg
%-2a*eDm<h=dBhA3$*QJP7rU=D\_']!=>hJ@./lmTfrY+e(BQ/sggnWl(29<M0WDe#'>6QbLk\IL%Rhd6pD[^S6^D69,?Veh,[0/&
%*FGSW\IaM[_8J"*3ABQ)Dad\:$pQDa2`IddY.2T@odn\*qq[D:lpJJpG:sqk</KcZM>C)L`+-QKqBrE#/_/R[57?Zjr7(0e+KH]"
%P6V`(TFf>9B_&@95UufQ!@3>>YX%3#0*:j%#hh=om#f5/8EnsuDE&,?0&K#r"ml)LY#4[aNn1[A[9]irP5Ith[u_R:TT(!a]Rl#.
%;Vq)aS<]2Z=d`!dC,!rU%t#V+I[HT,'BZlt@#jg"lh5EnTBZ7^V3'NnY;`tg7^J"32XKYCr6k*m*aBkqhL'ubY,]E]20QO\GB6m'
%1$<e38RihX9R^YoUDEa&&s#JEK'Z2Q%!OYCLQY*3#=\!*,\\gc,0:Aio!nogom7';je<U0",UYeS7YLf_Fa!B,l>P=\W(4*ccQ`F
%"0d5fDa%X7dtqTV\>GYlPG7Dj1>`12_+tqumJ#7i<JflSC]/4^.Ia1l>=^4_`UJU,luT-98Q'ej+2()iqh=SB>Krh5Rltoh@8rE>
%)^K*5.e,JL>K&VA6B2FNE*,"BG#'Y.[o=U'qUn[cSm1h?%:>mK'gCrGKRFU<Fc/WPcK^K:"%GJ:KROC@a[lfQ@HO4rlnJ?))n"AB
%m+lgmR`tLk6d`LEF+YF3PporgkEc"lmPR%1EO--DR-1RC1fkoLF]B0J94D#cTKK)@/Q'hd$@F;K%n!`QMS^tNMUZ5kfqM$npH=Z-
%TqVU2rMIe'0:UH2K`&&E$g!_4DaC@-']%N&:sWk=lG(9:*0Jc&,&$,3KYUVEU.CL^p]dBhI]o6+%#;OADuX(!(`pho>'Lh*U-RN:
%8flNPK9Ach]ll$]^JoT?&6IYg[i$?]PA\aV4Injf@7g0NH=@3XS/dicl?h@26F#1Bq$/grE4-97i:hVJ7T,ms4$L0_iGFh:ElDet
%h6NY&^.*r0Ct<)&!NiljWt!XkW"dQ(nl5%8l0Srmd)lH<!<>\S\qO$M2PkXLPXpqtc#@/Qqe&+M=AIjtPM_gC%&KHLOqR=C>:dNh
%Hj`TDUT!$['Ec$/P=qLk0j2_c@k.MtoV\Z:BU.Sf_9A/%Z]p-Am*NDuL_ru!%8Snii`RsL.I@+6FbYYTP="i4-$0InV;kcf.NQJ7
%-LO4Rc-4===c@niPlP<?4&.?6BUTlkWY0[p9ZZS[n!-EUZbs)gc]!<B;M_J?m3__8Wpr2l,of>>7/0[M2/8Y^@.bj+N:U#GRTlB"
%CJHcg`DlhpiJe@]kU;bZ7KB`UJijQ9C[b"`*XCgM8UiI-']n(>FC;8;>YZt7f2Mu%JLB"=I,@!!7ZJuB7Ie]?U7/!#hd!9-Y2_FP
%5@U[mD56u*D\LKtb&bD'R]+>0c-"mRFt.t(PVaQ;B4+_Zhc'CiDD``*k&K9iG?/RP7mLDQVWFe+6f6MZE?]'H`Kf`6SbVBm3A7]^
%5E/f@pI/Yd-<D#RfumjR`Aq4'2$"D,2>9[YT,?t0^h?0GB/('oZ[7$;oXjb;>P7X*\!&"4cUdh\VVsblj]FLD=:n?_@O45RI#T'm
%J@7q&,`HdTCVenf76^GM8I/sd_H=cF6HAYqc`[\ah[P^Xm'nr/M^5.R8$GN^]"O8#kSYiu?oRom#!!Gg,8P?jA6_Up;o,r)b_i&V
%O<bts515KS38Timk`NCe5V]QG%1\iF.LuUHLUfE!iNd5n*mED_DE$#Rk=u7o<m^78B#_I0rJg?D9+K0!*FE<r'gu7gR#S-<`@Qnp
%j:Rc<bW+4pOh>Fg=:2Xq#iM[(m#5]pB,&,!WSZM$CG=T6mqd0-2hgXbj+DA*Zrl<]f8:=AeF5>5>X>_%PW0.!#N_1??o&uWr<9g)
%eI3@b`$u8tl\?`]H8'rqcF-0V,;6faEf=ct?R&FrNtf@sK5APp(lqp<fKjl1/c2O,>9'I0;<7/LKSD*=9&GUC078ohh(jo6L=ic2
%M2!@Fb)HBcN+?2(;%fGUo5J)8]=m4X@(P=WBu+%QP0EG;9H%u[@.M4]$G(ojdd\nCMh5Y+QM:oCD#TU*a</d!Q;qWQRQjb?6^&&U
%!<@%d$F2i<6"e4X4dNSo"c"D<7@Lsb82u4tcP<u*)PP`C50N+)r(ui>?<i&g*_&8HMM%&8Sa`D8`(GU.r#m0e\jgaAnAETmN%irX
%KX$`-5FKuW_XO2.Hk"U?]^$(h)ACe[*l6L2;lWmn6cHO-S;O09=@,8#>c$mYB^8:0LKii://SVX1mVj\jG/<9W&I6YfklL0)([.L
%q9?0>=nn@(PZ.+a#F)Q45M6:aou#,8\Y/junLY*2X;!BIO!S+"a_WjHf7icW&!T\=;>kbi$CZX`&!Uef6t>pZ;;(bq&h.in[TC2?
%o0&6<Gl9?e@uT*2LA\7Z$g"jPYOUV0V`g[u/SDCdaq&uj]j4n:/:Qap#E;m\!)OUu1_q@HCmDiE:f_8HQu+e3aC_?GW-_624)DW5
%k0>2a":M8[N)o^P`OE&s2[,3B%SN=HW4qlE,?K6tVNPAX@)>27#::Mh.@SG@\ErF'9;G*<2*ASA/)'Uj)Q=B)dJYdiiH:uZHfXJj
%>!\MA?RicYSWTFoi\VEDkiGVlQ<c-<jtbGO%E#AgOjM'PL&/+0HAcAqMor1D8489Q!_EFecYU<b$B"!=-:&/I;Nn@*W%)/;"nGm4
%f8+E8f-V$hZG%XlCE@cBgR3iMheD=0qdTUA3oXT;+L'(u%P.FLP[QO=p0]L-!^7'j)kdlng7]5-lVG*`\>6!8"cM"/\V37jI#T(H
%KPgBii\M:H=VGc+YraY]M,@&&iLuG;ZVc0)R!C)<4.fn50`q#lSo1rC1\r#i.]E)D$#IX:RNms#o#]((Wq[?qb#'n,m>/!A3dJg$
%WV<Z%A?o[gj:>7QdB/nE=8uYOU,V1X*0L_&q&RpYQ1->fK:(N\2p:mG>o2%!2G5;jeoL[hn1>tb8LfJP/&aqUIckU%_%,!>8P@;5
%P2`3g7?Ro2\rm#C,YgE0s4!q/gDr>)GG>dWk]SA+HE09p7c^9^\eQc%$g8B*eF>DRS6)*:c#AL%:W\5^T#+phbfKtW>\%hYeR50H
%1qjMLWkE&]K[h\&QmL[u@ZDkR_Q#W6q=ba(F_G=RWCA5Clf`<c;XZ1WQ*927PF]S_%`Zdkg!!;"k?Q(1m.;LSAG_m%g65m0i]@Z7
%UmE+>^K;tt/B)h)DYOt"JXV1:rT>)C<$N(8.!t&\EhD(!Kq`TfFDj$'2n.Gaf-s0N\qLa-3S+@&ER;hD32sI?c.iu!S[s;ZUP<WH
%4kaf<R`>(u$L.4R*0#*1jVO5qi9c5>$\.I:)DeN->7W&#FKH>&FgS5;Z5T26\iJ#FXbh\e*6e]hI[I\M;d=K-^nc"_HY]Nuqe%Ng
%,=Me/qMgo_;MNl>q;KO5bAS-Q_G^1ZR^X6T6#Y'0P,E=o(3</EA]U8<1_g69*0sT)pWR@fQVIE!LLh@uXI.h.ipA`f0T4q9%kq'p
%*Y(kMn@H#R^NFo39VnhhhJe.#0%iGS:H6/S^f6>Q'21CLc-fi&$l.X*@)?JRJ]E>P%)A;PQp"e4qAQA4V`OWPNlF`rSjtImD"iVP
%XlFcP3*3ou9l\Li>6]:/EEX,f>)6aM@<rSTX`\\B*uOY)5T&O@Q$DXQOuFRb^qJ[a?oq7!c_7qYiEf8YWA*1TEoJ[g[9C`A2me!k
%([h^:9emSq\9RP?9&b63)RI*GH"3mjF2Hq3AWkLV>:'q!p$7BE-i]&t*XZ[J<)4.&@MT\l$'EmYA,^6=Fc2r(Dl+Hs'2!^r%Fl3E
%>Q#@bg"GI._=4AONcGO-V;kdu=\t2sF^W'Ra(DP,o#'WrkRq$?2CX3ZAtktj?ZZAM<BWan?6G*MmL4!;6ji%'1YmkSYZOfC^#fDi
%)O4jY#aXt\NE5gQ`Ri1N!c@8m=H]L:Zu"fc/%u*!+8^G;#n7mqR!@tUQb?7JcK7F?@_&:2m^K)q)V9YV7S<H-o"o!'R/0Q9pW/W^
%[=iGN:DMd(&q@99@S*FlI&8!2jGIm,3"7nrXCAE\G(m+CE2'U&_I_=$83S6,L:\8Pq=\X=7]L]bVWbcrj^/ja<;=lf#NV5#DZQi]
%'fC:[#IWdCpQe=@p_HDsauFpA"BJVIn^eR%HUG/0cKid:OlSol:W(Wj(JfhI:e^>/jH+SZ71rD-]m)0O^D)'T(KZQt7hW+Ql:q"f
%KXZt@I(3ajb*7JICK(rL:#_EWJ[LSZUG6/6aj)b(0G-\*hk"^o?IS]g.O_=KT6-@3QumC=YcrOjNUWj+Dh4n#'r?./$ao2V=VMG!
%Oi0VJbfZ0$$#EUoL*hi+K0WR$j"P7MA9KWV@nDCoGr=C5n14nVbH.An"3W6f6AssZY*7E!>JmqC<8*5b4d7o8&J"i^K0)7S6lqJU
%-_pPP<A\ekk2<@dm>I@F6%[CBH$V#]/s;:3dk+o?qAQBm!ZLu&=/kmPX#U\>,l_"6Qge?C^;c1S*B_0VD$Y@M7ins_''T87XCN3n
%DjV`CX*2kuJ_BRgZ!]n3;h2o>3D%Zf^na/d]arL%rH;<KpJh#+B#CMBNY23=mknib6+.7n#j6rCo\J/=`@nk6>p;3Rb0]hC;2iL\
%q41`:ITX[^H3;+D@HQcmUgUf4^cgLm/$dWnL>^ZKMqh/=NbrXaC[Er/pn?PK0Tr^cV?9?DKd_`JLk?X1olhI>Pp<("#pKR77s"%f
%_^pH/"pcP;T/[TaoK+$c\L-l)<)H>m5NZX\<8`$)A$=`^k7[bea4GQUL"IGSP.7hY0QG".r50bcZ=MHpQ9[b1@&MHL@2]VLW9g+g
%j[d(.BC&Ht]`a+%-XL8hj+CT7F0fmqWlAIY5?3)j(KZ]8F'-:Gf3l%VNphD&(\FjM):]h,,,&L#V_12-ntNZ[&t'c82]O:#hW31*
%@u4PialY)"VP8AI/?/2!*L7@;2*0\l(#Qk`.EqM$'!EI*JG78J3R'S;PpN4#j&@"?RHE#\LTr/3U;^]q'?^MQBX+@Hqe&*"6R>&E
%%f;.'S<GrAq;Fll*15V5^4dkY.k"?VYcOD^87kjE.]F.)Od.?TR$N^ff;`1XG0aD;+gV";RjBB8Mjt]W?<"a6_i@,uDtb#,NCdaX
%/QGNsqRHboom;Z6=/;sJAqP]\.@<=EDh96rIRI5"MuuTfBK(tV<VM*UoSCPRIt:%/5S?+'].2bc1K7F`YJ2d<QsqiF$@_bQ4h'LM
%Jo>XA6#j=S8I4P0/<\B2<?16L1G*Z[J"hgNDSmG0OOS=SZ^O<npB++-aDu")]AZl!Vt2cF:h6aok\+3ZTfEYZ@ETG1D]R^:;e[bZ
%J$9Uj4f;Esd+1WZkq+]J1@b_u/9Gi=AsM70.p?19j`hc498k."L8UO+i>"G=@XJ&OTJ=ME^BNX0Y?T\p<.'ZDk7qV(7lGVUA_WWf
%,i!O6%SIFGCjXoM"r1FT3I.=!LVZ],Fub[qLhsOsC:;G#b\g!F,os5e?KIn"\eQanY1fB,[t8NAWPfOhRuK,GTfXMI-Y5*G,qU>_
%mq`Q_Bf*/'Y%omi1hK$@BU:Hd%?;:1gLh$h[a,Z3D1IqXX`F$P_*-=W8P"^[X`!+4FF9"#<;)4.+53BT_e)V,NR6:V>;0dUo`.oa
%FL#:,4E.#Ldnl!H)ZHE>0k.LP&4P?/RG[qSS8moYfSke17M5IBijn.L;XZJX>g]r#7bi]tK<]Ap2KMjGd\t=KoR__P<m.=fT`C^;
%&MC\d0J4dUAU-tYE)#JA.)kcR]m6cOGf]j`&M2oe@^/$qI#T!+-?qXcLk=K:aX'^FUo`^SUo!25I6eRS]F8ZX3`Ysd=j<\H6hg&7
%P\]0PgXSqcWu[G*-++E/e\;V",u8c4n_CFB._^V5106<I=2H\Qc'`qt79G=Z_,OA##F_--/f)a_6n,ifAthi_EoK+6n+<XToIAI_
%^@5AZBg4El4P>a+T&4duAOfBfIB3/VSq"H7q=2f1q2`;d%mU*d:I"mO0@kWjO+;@=3Ulegn6ZM.'=CPpe4uEt^\Pc6Y'$8482(2D
%Z6n"*h&/GWX6l80(7"3WJgiKu)KT%c>?gj=R)K00\[,HaDmd`]oA/2*M_oVtjI2OP7JK;*`?5,7cf4Dj@uQ3>SQ]FWW5p\Wn&@LO
%T(Ga_jSa?L,fp/nZ>9CWFarpgr3`b6f_tT7s7GnYmD:^ZpfIK`k't;Kr;6.OK^Oq@N'(&K/<s,(C,"rqk!J8:prB1c9fssVY7CW9
%5K/]%(]MSr(jdpr;U56Kn,fIJ`e6bD4ZN!`-E'Mk3[cQsPH(le.6S<Xqs1F('1i1=h+3#+]+qt+a4BFgCPlqb_^.$=dum[IS"8bd
%Q0ong]@q_mH"@Pb'K'5587N%IKMh8Vg\Ne)R/eK]M`>/92lfcYJ!Sr>(QuC72*,9.8gSUP.;[r7Z;euopbh@:i!fDL>[Gnc$r-/9
%M&`a:1PYF?L&Ei[(QB\DM[>_r&p*M+E8'uXI.R*B^\kRLQAD.[1\H6*@l`_1rY+rHeDgkL0i?&Re1pFl]F2]5Z7H+GCPc:lPalTD
%j)TGr+gmp"ae@"B1Y36=j7bX%XK$iRXciIiW@:RkeFd#Q>*+W%^9-UMDf%.iAD(s:V.?PWd$38pS(2R/!Q=;q'k:8!-?"9NE`Gj*
%Es1MC_+VVno]qN5^sCI$PE/K")n`7jB1M[4[:?>b6EMkOJ)(jpo[^D1_a_Qkk*Y*k+!Z'*k1J&a6RNV_FJPQ.rE`'H!XGc1Vne;C
%6I,ffW1L,TPbPN?$1LLcA_/^`o0'6d(e7Ln&&Z8KVM0f\8SM?A(3(aH(d=c-j\"!9?-B;,ZBEnU3KYL3T.$JjQ+NB>+"81'Ododf
%M#*=;<ZIIQ);c%S4Kg*%qmdFS1!WYm2#Y"<U@cd/,Pea)rc7f.lOFL$';BB_oB<>_g2YuD@o.lRVW+Fm5Zh<J;O^\:9/ERI(K;(b
%=\VT"*k)B<C@mV&rg-ni[UXW)Q&SHd=sb:3.d4g/![h$CQ3-<J9%XD+?/UkcD'RB8D1nH)$u7(a'7tV;%EH5q72i9'[<"uh)YIXT
%N7L-+M5uFjX(:QpIOd)eCnt9>G8K=DpZJLiX,0('Ft(BX+d)hWTe7(JA0TuYg6HoMMp.ZNcfp6U,C.VtfL:t+GmCV0lMg-Dqb#PP
%2boY$i/&6h"0uT<H!jnZp(U(\$P"&?[=fPD[o<)''i4OV-nah.4>#Qo?q\T)HZru..<F`7osc](mmOqIq`-a*U,_dHjebT:86(?(
%cWHBi58?*F3'ZQK*3&#s,J?"o+'cGt6N;KN(<g:u>jI%g7iN8ii^bE#2&3*M7i"sb@;C4O$*&1X>_dCX)q?34qQKe8V(:@5)cap3
%*fsE$0cL[9j.Ni>gSjmOYC4L[<0Y'gUt+(9%=8L6,aZ2C20'\5m@RU,NOC,UIpb<XO!+"1Xe*',,^38:)S=PurO+*]Nqa`\8Ybkb
%NMMnJ2ZWnP>g[N/<n>5/jLGD,Q'lgo/UmYCU8r;iN_+oj&J*6E,J4!@KN3,3Rs&iAI]'IuG;!Eo!W<o#l];)3F2&QldYV)Xde`Pf
%/dFadY:Sf4.ltOd%qj4]LcJsG&_#IIBB$"mg1JKN%K0ic]IWd0/4;#_`2"l!E=-oiMmh:!fKXAB?TVTPf!kZElMtY/Bk\Y?e3Mqo
%*S_^-h3(Z_RJNCj>?-I_D]qn,O%9pXTAbOuUn%@,Gn%p#)NTE[S]>QR&EJh]I&m/Ar@"$%!kFG%D*Yl*Fp!1^)9[lsVJ,A1X6PNP
%VShi%K*aF+Gd^UY*p^31-0Zj7.?!T%as5M!Li'Um3K0Q$D>!dEmro5spXWSQHV>HQ>?Rj!;uB;>SKPM4\X@FGEPgCGFFd0>M0/Gc
%"FOUh+%$HRAmLbaR+l84;YK^KD^BTS(E6YKC+JNn"^flIBfZJ+eYm5UDl"^#7lUHtA[bJlR&IO-kr_tDHQE9:"8%MhELALhQcAY/
%Ap2CHO`R`<8heEXQ,HSAo?dLr7R"PWH)V;DpbYaeSK]<Xdo9buALF?Rk4;A)O">XM[(Z"TM^7[M"sG9`m0Cipc;p*-\CO?-p8/I?
%)-].MR\a%87qX<3X/(VgrDN,MJ?h(cR,k7!n$J'f\KCAVcN7h!r^Qer'?1TEC'1L\;H5(.0!_W=JQ;_sIZ";Ld[&IKch)hp>Y8%%
%!WGuMDCq8q0.EO:S\/\0&.n\%N7K:*m?`rh0<]sRmph8[m>jfSMimCh(E6mCDEdJ*N79l7H"=OM'p/r4=8%=G'=idMWBV:]d`Xf\
%UW@q*($O)[Y5.DH>n6%3?eTSPYLfdMUm"sY%K(4uJ8j[fD;-\U&GON"7T"c=r70#\APE*c*q>0Qe?=5-=LF-q0,5bQjDV?[Cc!)>
%q.fm/:su4X[(4f.WBm5;<)Y_g^p9CX-U!J_3.!d^h;Z##\_ft8A6]otg41RCI1J"0_N49A3Xd\kH:N3bh$1&+\qp[:K"?kJVeu10
%IAcHM7<S0,067canp/^#:PRR[MMRG36IVUM.n*=%$-\LslC+crQ?)4l-ba1+5!5VQ@(S(<<NC?f6W)]Q_@ic.imf%iTR]8$m=u,i
%Tg]j$'k&$fCX;kBN#)m/HR_`iG)[L)^`@MYk*[6FPGnC56oT*k8p-bq&c4Ku"0sO2CPI;H*`\H`%G\Ej[#mI@$g]/MG+"eegE^o&
%R[_I^q/(c61.m`&e_5g5Vc[m&oeU$Oh@Gce$_N9tg6cI/![7ZtO\.s(oK[VarXOV-opBU:[Hd)Q]\i+kbh!X'X*p')HJSLkIt6RZ
%c+j7Vq30#nFgt!M87Rd2We'!r7;'1HR!#tKQ3[#2@VTl@__*1r8<4g=n"-O4P]lI=c+hVLV/2ameh(b&^=Kgki+gFtg9f7jB?e"0
%<Grc1O-:WQk)W+i)[pS\>%;!u/\g_"_1AZ\dnQYbem>44d@a<(K'_Q#$UN6+7;aOYT!j,e\0<,4Q".%-b&rL*'[<;6P_sM\\s!VJ
%r`H+d27;t*=Ta6"g4lnRq_#KjTnQNW?e#l73HEiaLgo6P65BKYbX\4GlD/N&3MV<VpptKaR&TeI[jd>e&iWEo=_M*4H#%7NlhJXm
%gq@qjSKE2UJTf1qo"!J[dr8IXjS%(DM:,E6In-drW>N;=K>BH]he>1CG^PC4:e5'?\fH'dVP<7@OXS/68C5f34MJ[R)j/0&:&gTd
%,"OmVG,YJ0X^j3)S,@$rob4NaAb0V>CKgILV*&GHbZ5*3S%6KC*<[HBKUjhJ/K-)&FgJu`@FODpe9U)J="ZHZP.\+I=geHL(*saX
%%mj-U?Zoo>-BDSI;>q9rh#YQ`r`Q(Bf:T+$p`i"%h_UH\%FoKD3X]2Id8P1&ER1%U0+6lc$@]Z,1r2`A$a+\,Npj!2*UNG]]bH?[
%&T=[Q+8KCS6bV(<C`0P87[P3_pSgiiZ/:4RX;ZbcBaGC>#%HX<`?0i#3=q`s=jVL,2^-uHG^CL(*tjL)LR'3(PG6^f4E.B[>h7QQ
%QStu;ElM;b\WqXDZ+S2(c5U?7Z34k-O^>!>7(0gmG&V)F![*o\CjL/YCGM7LWMUZ6kt7@;UfNB!imN55n75OZ/@1R]%qP43b%&*o
%*`X*'e@(S(s*fO\M63iN*p"\l,%P`MN3!qDmJ74697:*W\.Q$)YDJ??s,-r7lPc,/1CgQ1,`lj.,i!lXfsNoW,rA;4i'dh_,*>Vq
%WRc?E]3F>4_5#*jj)1[:_'&*5qs9K?s7kI0]iDNoF+[+eg4:8[X`&QHa\D5P?sup75OR7YfVVXPP35osZsOs9]7j.ts-QfClN0hB
%3IGYW^ogR"+TmQ;OEL?KO4,CdT#UI&>,Mu?MCI:1QlB.&T,L3[l)I5nbV%]Ffa]4:["@RG4F9P,"-S@]F\>l?`LfgQ*9&]8`DN[m
%fC6.S;V/=#_)7M7-n0/dC;H&$'=>3,g.E%)/\!E<\q321@qt185ENoAIk3K184"tm59qR.O[06+#NEhb-dd87T0hfR<dWV95nc[%
%Yd2i]k01C8nEZZ@ZK>-B"Bd\.ZieOENkAOaU*?2f^8HL,&s=E7,YfO=nH8ftN-Nd]XfDGGJi%&eXE>F02TP?d/E3]:mZWJiQ)@j\
%KV`>>mB`iq;^&#:<r,e;j1Q8RWN5pW9mXE3okdX.#asI#eipbWTasP%L=!Y+I<E6MF._;,Q!fI^Fqb.o*pp-XrO._:$f0WYrE4ac
%Y!'[f[d,jJmj`%p-`GrJ+C!q;aLejAru,l*Qb!6LFQk'8]V4"S'rmie<P`]-qRd7Fp2'Gtfsdfp;)k?=05J+'bCm`JbQ'K:'%&dQ
%VSWn@7<94(6?rlHkjG=M#aNtUZlPjRiV+4-P*4`^B#8K"&?Qg8Z(:/=Pf,r>QL6Q`'.sGJc.s<GcPM^.OP<SEf6I9#DF6u0bE_D2
%]qOMpZ]!af2AG!RE_s1cZ_:p>U6:8a:bifchNP+5,*PJposW,"63M7,Z-KCS_)P5_U+q!^+e5ttV'%H2MWurIK)=7uen&[r_oF9T
%D^^ibc3f`@)bNtELtqr`U8lo#lgHE:7mo.7/s*&W5$4@n9-Hu6ktdm6J-c%:ensm/.I^t`(oM7EaV\5FRuKmeTs4\JYMm2CJ_a30
%nBWBLE*J3?((cl4CalkCFL]%t9-GlO:G?ZV+oHdVBm5enW)[0Mf34uL.;SRh@ejk;(14\\'pm78]siM#"-Ab/k1V5&kX\/<29_)D
%4)^1g<A.H!kdGjLa4fp$^bMHe[qf;(X-#'=c+`RIVFuh@GtRo,g)VL&\8*_-*@:;taiho7UX7Lu;k>QeMiLtrS(ggr=ld\TokZ(f
%7)]<l)[/t_JIU,r-lMh`bGHN1GaS-LNq,=FIVVHIT_'kK#/^mWXXC``KLP9Bh8VJ):?0pH++O"1@hR!]Y")h)!**<KX],uS=r_,:
%#lE_0dD=OWXdG@D9I3X$>,S"D9VM=H],&i7:kR.+n>4hl^M2sTShbOjAl_3nOET_l.p!jn$aU!kNETMfJ,8u=[/i//h)3Z,Baa6U
%qPW3li_TD-J'Uk1+VL!BMoUpG#"orr[S[3_@aKVQ$O_.!:5,5/*r,WqJ%E:0]^lQtBar/mLJ8k_>l^`4_uFHL`O?J+\=KJ_#f#3l
%N:;>r[O]NcrNA:;-.R/^/uHL;Q2QLO0fLffm`&UM,G)5e^[%<Fs)tF\i4l"?SLM>Ol^r\'X+0fWec5D_s6`,Mnq[89a1qPqJ%6Ks
%l@8iOhu<0GpracYmm$d@00fL/\,YrQs6#G-rpY,]p\4^_LO]6^IpW0,O2(Y:+91:As8F[$r:(<tfAHVC[.'jf#ClDJs7Y@M]:XTL
%rr<b#[jV~>
%AI9_PrivateDataEnd
